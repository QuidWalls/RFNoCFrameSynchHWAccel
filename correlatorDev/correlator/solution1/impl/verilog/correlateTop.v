// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="correlateTop,hls_ip_2017_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160tfbg484-1,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=4.032000,HLS_SYN_LAT=10,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=2,HLS_SYN_FF=1418,HLS_SYN_LUT=1195}" *)

module correlateTop (
        ap_clk,
        ap_rst_n,
        i_data_TDATA,
        i_data_TVALID,
        i_data_TREADY,
        i_data_TLAST,
        o_data_TDATA,
        o_data_TVALID,
        o_data_TREADY,
        o_data_TLAST
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst_n;
input  [31:0] i_data_TDATA;
input   i_data_TVALID;
output   i_data_TREADY;
input  [0:0] i_data_TLAST;
output  [31:0] o_data_TDATA;
output   o_data_TVALID;
input   o_data_TREADY;
output  [0:0] o_data_TLAST;

reg    ap_rst_n_inv;
reg   [31:0] i_data_V_data_V_0_data_out;
wire    i_data_V_data_V_0_vld_in;
wire    i_data_V_data_V_0_vld_out;
wire    i_data_V_data_V_0_ack_in;
reg    i_data_V_data_V_0_ack_out;
reg   [31:0] i_data_V_data_V_0_payload_A;
reg   [31:0] i_data_V_data_V_0_payload_B;
reg    i_data_V_data_V_0_sel_rd;
reg    i_data_V_data_V_0_sel_wr;
wire    i_data_V_data_V_0_sel;
wire    i_data_V_data_V_0_load_A;
wire    i_data_V_data_V_0_load_B;
reg   [1:0] i_data_V_data_V_0_state;
wire    i_data_V_data_V_0_state_cmp_full;
reg   [0:0] i_data_V_last_V_0_data_out;
wire    i_data_V_last_V_0_vld_in;
wire    i_data_V_last_V_0_vld_out;
wire    i_data_V_last_V_0_ack_in;
reg    i_data_V_last_V_0_ack_out;
reg   [0:0] i_data_V_last_V_0_payload_A;
reg   [0:0] i_data_V_last_V_0_payload_B;
reg    i_data_V_last_V_0_sel_rd;
reg    i_data_V_last_V_0_sel_wr;
wire    i_data_V_last_V_0_sel;
wire    i_data_V_last_V_0_load_A;
wire    i_data_V_last_V_0_load_B;
reg   [1:0] i_data_V_last_V_0_state;
wire    i_data_V_last_V_0_state_cmp_full;
reg   [31:0] o_data_V_data_V_1_data_in;
reg   [31:0] o_data_V_data_V_1_data_out;
reg    o_data_V_data_V_1_vld_in;
wire    o_data_V_data_V_1_vld_out;
wire    o_data_V_data_V_1_ack_in;
wire    o_data_V_data_V_1_ack_out;
reg   [31:0] o_data_V_data_V_1_payload_A;
reg   [31:0] o_data_V_data_V_1_payload_B;
reg    o_data_V_data_V_1_sel_rd;
reg    o_data_V_data_V_1_sel_wr;
wire    o_data_V_data_V_1_sel;
wire    o_data_V_data_V_1_load_A;
wire    o_data_V_data_V_1_load_B;
reg   [1:0] o_data_V_data_V_1_state;
wire    o_data_V_data_V_1_state_cmp_full;
reg   [0:0] o_data_V_last_V_1_data_out;
reg    o_data_V_last_V_1_vld_in;
wire    o_data_V_last_V_1_vld_out;
wire    o_data_V_last_V_1_ack_in;
wire    o_data_V_last_V_1_ack_out;
reg   [0:0] o_data_V_last_V_1_payload_A;
reg   [0:0] o_data_V_last_V_1_payload_B;
reg    o_data_V_last_V_1_sel_rd;
reg    o_data_V_last_V_1_sel_wr;
wire    o_data_V_last_V_1_sel;
wire    o_data_V_last_V_1_load_A;
wire    o_data_V_last_V_1_load_B;
reg   [1:0] o_data_V_last_V_1_state;
wire    o_data_V_last_V_1_state_cmp_full;
reg   [0:0] currentState;
reg   [3:0] phaseClass_V;
reg   [31:0] loadCount_V;
reg   [15:0] cor_phaseClass0i_V_14;
reg   [15:0] cor_phaseClass0q_V_14;
reg   [15:0] cor_phaseClass0i_V_13;
reg   [15:0] cor_phaseClass0q_V_13;
reg   [15:0] cor_phaseClass0i_V_12;
reg   [15:0] cor_phaseClass0q_V_12;
reg   [15:0] cor_phaseClass0i_V_11;
reg   [15:0] cor_phaseClass0q_V_11;
reg   [15:0] cor_phaseClass0i_V_10;
reg   [15:0] cor_phaseClass0q_V_10;
reg   [15:0] cor_phaseClass0i_V_9;
reg   [15:0] cor_phaseClass0q_V_9;
reg   [15:0] cor_phaseClass0i_V_8;
reg   [15:0] cor_phaseClass0q_V_8;
reg   [15:0] cor_phaseClass0i_V_7;
reg   [15:0] cor_phaseClass0q_V_7;
reg   [15:0] cor_phaseClass0i_V_6;
reg   [15:0] cor_phaseClass0q_V_6;
reg   [15:0] cor_phaseClass0i_V_5;
reg   [15:0] cor_phaseClass0q_V_5;
reg   [15:0] cor_phaseClass0i_V_4;
reg   [15:0] cor_phaseClass0q_V_4;
reg   [15:0] cor_phaseClass0i_V_3;
reg   [15:0] cor_phaseClass0q_V_3;
reg   [15:0] cor_phaseClass0i_V_2;
reg   [15:0] cor_phaseClass0q_V_2;
reg   [15:0] cor_phaseClass0i_V_1;
reg   [15:0] cor_phaseClass0q_V_1;
reg   [15:0] cor_phaseClass0i_V_0;
reg   [15:0] cor_phaseClass0q_V_0;
reg    i_data_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] currentState_load_reg_797;
reg    o_data_TDATA_blk_n;
reg    ap_enable_reg_pp0_iter9;
reg   [0:0] ap_reg_pp0_iter8_currentState_load_reg_797;
reg   [0:0] tmp_5_reg_937;
reg    ap_enable_reg_pp0_iter10;
reg   [0:0] ap_reg_pp0_iter9_currentState_load_reg_797;
reg   [0:0] ap_reg_pp0_iter9_tmp_5_reg_937;
wire    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
reg    ap_predicate_op138_write_state10;
reg    ap_predicate_op139_write_state10;
reg    ap_block_state10_io;
reg    ap_block_state11_pp0_stage0_iter10;
reg    ap_predicate_op159_write_state11;
reg    ap_predicate_op161_write_state11;
reg    ap_block_state11_io;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] ap_reg_pp0_iter1_currentState_load_reg_797;
reg   [0:0] ap_reg_pp0_iter2_currentState_load_reg_797;
reg   [0:0] ap_reg_pp0_iter3_currentState_load_reg_797;
reg   [0:0] ap_reg_pp0_iter4_currentState_load_reg_797;
reg   [0:0] ap_reg_pp0_iter5_currentState_load_reg_797;
reg   [0:0] ap_reg_pp0_iter6_currentState_load_reg_797;
reg   [0:0] ap_reg_pp0_iter7_currentState_load_reg_797;
reg   [0:0] tmp_last_V_reg_801;
reg   [0:0] ap_reg_pp0_iter2_tmp_last_V_reg_801;
reg   [0:0] ap_reg_pp0_iter3_tmp_last_V_reg_801;
reg   [0:0] ap_reg_pp0_iter4_tmp_last_V_reg_801;
reg   [0:0] ap_reg_pp0_iter5_tmp_last_V_reg_801;
reg   [0:0] ap_reg_pp0_iter6_tmp_last_V_reg_801;
reg   [0:0] ap_reg_pp0_iter7_tmp_last_V_reg_801;
reg   [0:0] ap_reg_pp0_iter8_tmp_last_V_reg_801;
wire   [0:0] cond_i_fu_239_p2;
reg   [0:0] cond_i_reg_806;
reg   [0:0] ap_reg_pp0_iter2_cond_i_reg_806;
reg   [15:0] cor_phaseClass0i_V_1_5_reg_810;
reg   [15:0] cor_phaseClass0q_V_1_5_reg_815;
wire   [15:0] tmp15_fu_291_p2;
reg   [15:0] tmp15_reg_820;
wire   [15:0] tmp22_fu_303_p2;
reg   [15:0] tmp22_reg_825;
reg   [15:0] cor_phaseClass0i_V_1_2_reg_830;
reg   [15:0] cor_phaseClass0q_V_1_2_reg_835;
wire   [15:0] tmp1_fu_579_p2;
reg   [15:0] tmp1_reg_840;
wire   [15:0] tmp2_fu_597_p2;
reg   [15:0] tmp2_reg_845;
wire   [15:0] tmp6_fu_603_p2;
reg   [15:0] tmp6_reg_850;
wire   [15:0] tmp7_fu_621_p2;
reg   [15:0] tmp7_reg_855;
wire   [15:0] tmp11_fu_627_p2;
reg   [15:0] tmp11_reg_860;
wire   [15:0] tmp12_fu_633_p2;
reg   [15:0] tmp12_reg_865;
wire   [15:0] tmp13_fu_645_p2;
reg   [15:0] tmp13_reg_870;
wire   [15:0] tmp18_fu_650_p2;
reg   [15:0] tmp18_reg_875;
wire   [15:0] tmp19_fu_656_p2;
reg   [15:0] tmp19_reg_880;
wire   [15:0] tmp20_fu_668_p2;
reg   [15:0] tmp20_reg_885;
wire   [15:0] corHelperIPos_V_i_fu_677_p2;
wire   [15:0] corHelperQPos_V_i_fu_686_p2;
wire   [15:0] corHelperINeg_V_7_i_fu_695_p2;
wire   [15:0] corHelperQNeg_V_7_i_fu_704_p2;
wire  signed [15:0] resi_V_2_fu_727_p3;
reg  signed [15:0] resi_V_2_reg_910;
wire  signed [15:0] resq_V_2_fu_747_p3;
reg  signed [15:0] resq_V_2_reg_916;
wire  signed [15:0] grp_fu_789_p2;
reg  signed [15:0] resi_V_3_reg_922;
wire  signed [15:0] grp_fu_793_p2;
reg  signed [15:0] resq_V_3_reg_927;
wire   [31:0] p_Result_s_fu_755_p3;
reg   [31:0] p_Result_s_reg_932;
wire   [0:0] tmp_5_fu_761_p2;
reg    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
wire   [15:0] ap_phi_reg_pp0_iter0_p_0336_2_i_reg_141;
reg   [15:0] ap_phi_reg_pp0_iter1_p_0336_2_i_reg_141;
reg   [15:0] ap_phi_reg_pp0_iter2_p_0336_2_i_reg_141;
reg   [15:0] ap_phi_reg_pp0_iter3_p_0336_2_i_reg_141;
reg   [15:0] ap_phi_reg_pp0_iter4_p_0336_2_i_reg_141;
wire   [15:0] ap_phi_reg_pp0_iter0_p_0332_2_i_reg_152;
reg   [15:0] ap_phi_reg_pp0_iter1_p_0332_2_i_reg_152;
reg   [15:0] ap_phi_reg_pp0_iter2_p_0332_2_i_reg_152;
reg   [15:0] ap_phi_reg_pp0_iter3_p_0332_2_i_reg_152;
reg   [15:0] ap_phi_reg_pp0_iter4_p_0332_2_i_reg_152;
wire   [15:0] ap_phi_reg_pp0_iter0_p_0324_2_i_reg_163;
reg   [15:0] ap_phi_reg_pp0_iter1_p_0324_2_i_reg_163;
reg   [15:0] ap_phi_reg_pp0_iter2_p_0324_2_i_reg_163;
reg   [15:0] ap_phi_reg_pp0_iter3_p_0324_2_i_reg_163;
reg   [15:0] ap_phi_reg_pp0_iter4_p_0324_2_i_reg_163;
wire   [15:0] ap_phi_reg_pp0_iter0_p_0320_2_i_reg_174;
reg   [15:0] ap_phi_reg_pp0_iter1_p_0320_2_i_reg_174;
reg   [15:0] ap_phi_reg_pp0_iter2_p_0320_2_i_reg_174;
reg   [15:0] ap_phi_reg_pp0_iter3_p_0320_2_i_reg_174;
reg   [15:0] ap_phi_reg_pp0_iter4_p_0320_2_i_reg_174;
wire   [3:0] tmp_4_fu_309_p2;
wire   [31:0] tmp_2_fu_777_p2;
wire   [15:0] tmp_1_fu_213_p1;
wire   [15:0] op2_V_read_assign_1_fu_223_p4;
reg    ap_block_pp0_stage0_01001;
wire   [15:0] tmp16_fu_285_p2;
wire   [15:0] tmp23_fu_297_p2;
wire   [15:0] tmp4_fu_591_p2;
wire   [15:0] tmp3_fu_585_p2;
wire   [15:0] tmp9_fu_615_p2;
wire   [15:0] tmp8_fu_609_p2;
wire   [15:0] tmp14_fu_639_p2;
wire   [15:0] tmp21_fu_662_p2;
wire   [15:0] tmp_fu_673_p2;
wire   [15:0] tmp5_fu_682_p2;
wire   [15:0] tmp10_fu_691_p2;
wire   [15:0] tmp17_fu_700_p2;
wire   [0:0] tmp_4_i_fu_709_p2;
wire   [15:0] resi_V_fu_715_p2;
wire   [15:0] resi_V_1_fu_721_p2;
wire   [15:0] resq_V_fu_735_p2;
wire   [15:0] resq_V_1_fu_741_p2;
reg    grp_fu_789_ce;
reg    grp_fu_793_ce;
reg   [0:0] ap_NS_fsm;
wire    ap_reset_idle_pp0;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_502;

// power-on initialization
initial begin
#0 i_data_V_data_V_0_sel_rd = 1'b0;
#0 i_data_V_data_V_0_sel_wr = 1'b0;
#0 i_data_V_data_V_0_state = 2'd0;
#0 i_data_V_last_V_0_sel_rd = 1'b0;
#0 i_data_V_last_V_0_sel_wr = 1'b0;
#0 i_data_V_last_V_0_state = 2'd0;
#0 o_data_V_data_V_1_sel_rd = 1'b0;
#0 o_data_V_data_V_1_sel_wr = 1'b0;
#0 o_data_V_data_V_1_state = 2'd0;
#0 o_data_V_last_V_1_sel_rd = 1'b0;
#0 o_data_V_last_V_1_sel_wr = 1'b0;
#0 o_data_V_last_V_1_state = 2'd0;
#0 currentState = 1'd0;
#0 phaseClass_V = 4'd0;
#0 loadCount_V = 32'd0;
#0 cor_phaseClass0i_V_14 = 16'd0;
#0 cor_phaseClass0q_V_14 = 16'd0;
#0 cor_phaseClass0i_V_13 = 16'd0;
#0 cor_phaseClass0q_V_13 = 16'd0;
#0 cor_phaseClass0i_V_12 = 16'd0;
#0 cor_phaseClass0q_V_12 = 16'd0;
#0 cor_phaseClass0i_V_11 = 16'd0;
#0 cor_phaseClass0q_V_11 = 16'd0;
#0 cor_phaseClass0i_V_10 = 16'd0;
#0 cor_phaseClass0q_V_10 = 16'd0;
#0 cor_phaseClass0i_V_9 = 16'd0;
#0 cor_phaseClass0q_V_9 = 16'd0;
#0 cor_phaseClass0i_V_8 = 16'd0;
#0 cor_phaseClass0q_V_8 = 16'd0;
#0 cor_phaseClass0i_V_7 = 16'd0;
#0 cor_phaseClass0q_V_7 = 16'd0;
#0 cor_phaseClass0i_V_6 = 16'd0;
#0 cor_phaseClass0q_V_6 = 16'd0;
#0 cor_phaseClass0i_V_5 = 16'd0;
#0 cor_phaseClass0q_V_5 = 16'd0;
#0 cor_phaseClass0i_V_4 = 16'd0;
#0 cor_phaseClass0q_V_4 = 16'd0;
#0 cor_phaseClass0i_V_3 = 16'd0;
#0 cor_phaseClass0q_V_3 = 16'd0;
#0 cor_phaseClass0i_V_2 = 16'd0;
#0 cor_phaseClass0q_V_2 = 16'd0;
#0 cor_phaseClass0i_V_1 = 16'd0;
#0 cor_phaseClass0q_V_1 = 16'd0;
#0 cor_phaseClass0i_V_0 = 16'd0;
#0 cor_phaseClass0q_V_0 = 16'd0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
end

correlateTop_mul_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
correlateTop_mul_bkb_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(resi_V_2_reg_910),
    .din1(resi_V_2_reg_910),
    .ce(grp_fu_789_ce),
    .dout(grp_fu_789_p2)
);

correlateTop_mul_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
correlateTop_mul_bkb_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(resq_V_2_reg_916),
    .din1(resq_V_2_reg_916),
    .ce(grp_fu_793_ce),
    .dout(grp_fu_793_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        cor_phaseClass0i_V_0 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (cond_i_fu_239_p2 == 1'd1) & (currentState_load_reg_797 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            cor_phaseClass0i_V_0 <= tmp_1_fu_213_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        cor_phaseClass0i_V_1 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (cond_i_fu_239_p2 == 1'd1) & (currentState_load_reg_797 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            cor_phaseClass0i_V_1 <= cor_phaseClass0i_V_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        cor_phaseClass0i_V_10 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (cond_i_reg_806 == 1'd1) & (ap_reg_pp0_iter1_currentState_load_reg_797 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            cor_phaseClass0i_V_10 <= cor_phaseClass0i_V_9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        cor_phaseClass0i_V_11 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (cond_i_reg_806 == 1'd1) & (ap_reg_pp0_iter1_currentState_load_reg_797 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            cor_phaseClass0i_V_11 <= cor_phaseClass0i_V_10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        cor_phaseClass0i_V_12 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (cond_i_reg_806 == 1'd1) & (ap_reg_pp0_iter1_currentState_load_reg_797 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            cor_phaseClass0i_V_12 <= cor_phaseClass0i_V_11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        cor_phaseClass0i_V_13 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (cond_i_reg_806 == 1'd1) & (ap_reg_pp0_iter1_currentState_load_reg_797 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            cor_phaseClass0i_V_13 <= cor_phaseClass0i_V_12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        cor_phaseClass0i_V_14 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (cond_i_reg_806 == 1'd1) & (ap_reg_pp0_iter1_currentState_load_reg_797 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            cor_phaseClass0i_V_14 <= cor_phaseClass0i_V_13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        cor_phaseClass0i_V_2 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (cond_i_reg_806 == 1'd1) & (ap_reg_pp0_iter1_currentState_load_reg_797 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            cor_phaseClass0i_V_2 <= cor_phaseClass0i_V_1_5_reg_810;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        cor_phaseClass0i_V_3 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (cond_i_reg_806 == 1'd1) & (ap_reg_pp0_iter1_currentState_load_reg_797 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            cor_phaseClass0i_V_3 <= cor_phaseClass0i_V_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        cor_phaseClass0i_V_4 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (cond_i_reg_806 == 1'd1) & (ap_reg_pp0_iter1_currentState_load_reg_797 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            cor_phaseClass0i_V_4 <= cor_phaseClass0i_V_3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        cor_phaseClass0i_V_5 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (cond_i_reg_806 == 1'd1) & (ap_reg_pp0_iter1_currentState_load_reg_797 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            cor_phaseClass0i_V_5 <= cor_phaseClass0i_V_4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        cor_phaseClass0i_V_6 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (cond_i_reg_806 == 1'd1) & (ap_reg_pp0_iter1_currentState_load_reg_797 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            cor_phaseClass0i_V_6 <= cor_phaseClass0i_V_5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        cor_phaseClass0i_V_7 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (cond_i_reg_806 == 1'd1) & (ap_reg_pp0_iter1_currentState_load_reg_797 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            cor_phaseClass0i_V_7 <= cor_phaseClass0i_V_6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        cor_phaseClass0i_V_8 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (cond_i_reg_806 == 1'd1) & (ap_reg_pp0_iter1_currentState_load_reg_797 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            cor_phaseClass0i_V_8 <= cor_phaseClass0i_V_7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        cor_phaseClass0i_V_9 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (cond_i_reg_806 == 1'd1) & (ap_reg_pp0_iter1_currentState_load_reg_797 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            cor_phaseClass0i_V_9 <= cor_phaseClass0i_V_8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        cor_phaseClass0q_V_0 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (cond_i_fu_239_p2 == 1'd1) & (currentState_load_reg_797 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            cor_phaseClass0q_V_0 <= {{i_data_V_data_V_0_data_out[31:16]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        cor_phaseClass0q_V_1 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (cond_i_fu_239_p2 == 1'd1) & (currentState_load_reg_797 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            cor_phaseClass0q_V_1 <= cor_phaseClass0q_V_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        cor_phaseClass0q_V_10 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (cond_i_reg_806 == 1'd1) & (ap_reg_pp0_iter1_currentState_load_reg_797 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            cor_phaseClass0q_V_10 <= cor_phaseClass0q_V_9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        cor_phaseClass0q_V_11 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (cond_i_reg_806 == 1'd1) & (ap_reg_pp0_iter1_currentState_load_reg_797 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            cor_phaseClass0q_V_11 <= cor_phaseClass0q_V_10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        cor_phaseClass0q_V_12 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (cond_i_reg_806 == 1'd1) & (ap_reg_pp0_iter1_currentState_load_reg_797 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            cor_phaseClass0q_V_12 <= cor_phaseClass0q_V_11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        cor_phaseClass0q_V_13 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (cond_i_reg_806 == 1'd1) & (ap_reg_pp0_iter1_currentState_load_reg_797 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            cor_phaseClass0q_V_13 <= cor_phaseClass0q_V_12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        cor_phaseClass0q_V_14 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (cond_i_reg_806 == 1'd1) & (ap_reg_pp0_iter1_currentState_load_reg_797 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            cor_phaseClass0q_V_14 <= cor_phaseClass0q_V_13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        cor_phaseClass0q_V_2 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (cond_i_reg_806 == 1'd1) & (ap_reg_pp0_iter1_currentState_load_reg_797 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            cor_phaseClass0q_V_2 <= cor_phaseClass0q_V_1_5_reg_815;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        cor_phaseClass0q_V_3 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (cond_i_reg_806 == 1'd1) & (ap_reg_pp0_iter1_currentState_load_reg_797 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            cor_phaseClass0q_V_3 <= cor_phaseClass0q_V_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        cor_phaseClass0q_V_4 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (cond_i_reg_806 == 1'd1) & (ap_reg_pp0_iter1_currentState_load_reg_797 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            cor_phaseClass0q_V_4 <= cor_phaseClass0q_V_3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        cor_phaseClass0q_V_5 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (cond_i_reg_806 == 1'd1) & (ap_reg_pp0_iter1_currentState_load_reg_797 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            cor_phaseClass0q_V_5 <= cor_phaseClass0q_V_4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        cor_phaseClass0q_V_6 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (cond_i_reg_806 == 1'd1) & (ap_reg_pp0_iter1_currentState_load_reg_797 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            cor_phaseClass0q_V_6 <= cor_phaseClass0q_V_5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        cor_phaseClass0q_V_7 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (cond_i_reg_806 == 1'd1) & (ap_reg_pp0_iter1_currentState_load_reg_797 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            cor_phaseClass0q_V_7 <= cor_phaseClass0q_V_6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        cor_phaseClass0q_V_8 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (cond_i_reg_806 == 1'd1) & (ap_reg_pp0_iter1_currentState_load_reg_797 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            cor_phaseClass0q_V_8 <= cor_phaseClass0q_V_7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        cor_phaseClass0q_V_9 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (cond_i_reg_806 == 1'd1) & (ap_reg_pp0_iter1_currentState_load_reg_797 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            cor_phaseClass0q_V_9 <= cor_phaseClass0q_V_8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        currentState <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            currentState <= 1'd1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        i_data_V_data_V_0_sel_rd <= 1'b0;
    end else begin
        if (((i_data_V_data_V_0_ack_out == 1'b1) & (i_data_V_data_V_0_vld_out == 1'b1))) begin
            i_data_V_data_V_0_sel_rd <= ~i_data_V_data_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        i_data_V_data_V_0_sel_wr <= 1'b0;
    end else begin
        if (((i_data_V_data_V_0_ack_in == 1'b1) & (i_data_V_data_V_0_vld_in == 1'b1))) begin
            i_data_V_data_V_0_sel_wr <= ~i_data_V_data_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        i_data_V_data_V_0_state <= 2'd0;
    end else begin
        if ((((i_data_V_data_V_0_vld_in == 1'b0) & (i_data_V_data_V_0_state == 2'd2)) | ((i_data_V_data_V_0_vld_in == 1'b0) & (i_data_V_data_V_0_state == 2'd3) & (i_data_V_data_V_0_ack_out == 1'b1)))) begin
            i_data_V_data_V_0_state <= 2'd2;
        end else if ((((i_data_V_data_V_0_ack_out == 1'b0) & (i_data_V_data_V_0_state == 2'd1)) | ((i_data_V_data_V_0_ack_out == 1'b0) & (i_data_V_data_V_0_state == 2'd3) & (i_data_V_data_V_0_vld_in == 1'b1)))) begin
            i_data_V_data_V_0_state <= 2'd1;
        end else if (((~((i_data_V_data_V_0_vld_in == 1'b0) & (i_data_V_data_V_0_ack_out == 1'b1)) & ~((i_data_V_data_V_0_ack_out == 1'b0) & (i_data_V_data_V_0_vld_in == 1'b1)) & (i_data_V_data_V_0_state == 2'd3)) | ((i_data_V_data_V_0_state == 2'd1) & (i_data_V_data_V_0_ack_out == 1'b1)) | ((i_data_V_data_V_0_state == 2'd2) & (i_data_V_data_V_0_vld_in == 1'b1)))) begin
            i_data_V_data_V_0_state <= 2'd3;
        end else begin
            i_data_V_data_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        i_data_V_last_V_0_sel_rd <= 1'b0;
    end else begin
        if (((i_data_V_last_V_0_ack_out == 1'b1) & (i_data_V_last_V_0_vld_out == 1'b1))) begin
            i_data_V_last_V_0_sel_rd <= ~i_data_V_last_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        i_data_V_last_V_0_sel_wr <= 1'b0;
    end else begin
        if (((i_data_V_last_V_0_ack_in == 1'b1) & (i_data_V_last_V_0_vld_in == 1'b1))) begin
            i_data_V_last_V_0_sel_wr <= ~i_data_V_last_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        i_data_V_last_V_0_state <= 2'd0;
    end else begin
        if ((((i_data_V_last_V_0_state == 2'd3) & (i_data_V_last_V_0_vld_in == 1'b0) & (i_data_V_last_V_0_ack_out == 1'b1)) | ((i_data_V_last_V_0_state == 2'd2) & (i_data_V_last_V_0_vld_in == 1'b0)))) begin
            i_data_V_last_V_0_state <= 2'd2;
        end else if ((((i_data_V_last_V_0_state == 2'd1) & (i_data_V_last_V_0_ack_out == 1'b0)) | ((i_data_V_last_V_0_state == 2'd3) & (i_data_V_last_V_0_ack_out == 1'b0) & (i_data_V_last_V_0_vld_in == 1'b1)))) begin
            i_data_V_last_V_0_state <= 2'd1;
        end else if ((((i_data_V_last_V_0_state == 2'd1) & (i_data_V_last_V_0_ack_out == 1'b1)) | ((i_data_V_last_V_0_state == 2'd2) & (i_data_V_last_V_0_vld_in == 1'b1)) | (~((i_data_V_last_V_0_vld_in == 1'b0) & (i_data_V_last_V_0_ack_out == 1'b1)) & ~((i_data_V_last_V_0_ack_out == 1'b0) & (i_data_V_last_V_0_vld_in == 1'b1)) & (i_data_V_last_V_0_state == 2'd3)))) begin
            i_data_V_last_V_0_state <= 2'd3;
        end else begin
            i_data_V_last_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        loadCount_V <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
            if ((ap_reg_pp0_iter9_currentState_load_reg_797 == 1'd1)) begin
                loadCount_V <= tmp_2_fu_777_p2;
            end else if ((ap_reg_pp0_iter9_currentState_load_reg_797 == 1'd0)) begin
                loadCount_V <= 32'd0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        o_data_V_data_V_1_sel_rd <= 1'b0;
    end else begin
        if (((o_data_V_data_V_1_ack_out == 1'b1) & (o_data_V_data_V_1_vld_out == 1'b1))) begin
            o_data_V_data_V_1_sel_rd <= ~o_data_V_data_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        o_data_V_data_V_1_sel_wr <= 1'b0;
    end else begin
        if (((o_data_V_data_V_1_ack_in == 1'b1) & (o_data_V_data_V_1_vld_in == 1'b1))) begin
            o_data_V_data_V_1_sel_wr <= ~o_data_V_data_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        o_data_V_data_V_1_state <= 2'd0;
    end else begin
        if ((((o_data_V_data_V_1_state == 2'd2) & (o_data_V_data_V_1_vld_in == 1'b0)) | ((o_data_V_data_V_1_state == 2'd3) & (o_data_V_data_V_1_vld_in == 1'b0) & (o_data_V_data_V_1_ack_out == 1'b1)))) begin
            o_data_V_data_V_1_state <= 2'd2;
        end else if ((((o_data_V_data_V_1_state == 2'd1) & (o_data_V_data_V_1_ack_out == 1'b0)) | ((o_data_V_data_V_1_state == 2'd3) & (o_data_V_data_V_1_ack_out == 1'b0) & (o_data_V_data_V_1_vld_in == 1'b1)))) begin
            o_data_V_data_V_1_state <= 2'd1;
        end else if (((~((o_data_V_data_V_1_vld_in == 1'b0) & (o_data_V_data_V_1_ack_out == 1'b1)) & ~((o_data_V_data_V_1_ack_out == 1'b0) & (o_data_V_data_V_1_vld_in == 1'b1)) & (o_data_V_data_V_1_state == 2'd3)) | ((o_data_V_data_V_1_state == 2'd1) & (o_data_V_data_V_1_ack_out == 1'b1)) | ((o_data_V_data_V_1_state == 2'd2) & (o_data_V_data_V_1_vld_in == 1'b1)))) begin
            o_data_V_data_V_1_state <= 2'd3;
        end else begin
            o_data_V_data_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        o_data_V_last_V_1_sel_rd <= 1'b0;
    end else begin
        if (((o_data_V_last_V_1_ack_out == 1'b1) & (o_data_V_last_V_1_vld_out == 1'b1))) begin
            o_data_V_last_V_1_sel_rd <= ~o_data_V_last_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        o_data_V_last_V_1_sel_wr <= 1'b0;
    end else begin
        if (((o_data_V_last_V_1_ack_in == 1'b1) & (o_data_V_last_V_1_vld_in == 1'b1))) begin
            o_data_V_last_V_1_sel_wr <= ~o_data_V_last_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        o_data_V_last_V_1_state <= 2'd0;
    end else begin
        if ((((o_data_V_last_V_1_state == 2'd2) & (o_data_V_last_V_1_vld_in == 1'b0)) | ((o_data_V_last_V_1_state == 2'd3) & (o_data_V_last_V_1_vld_in == 1'b0) & (o_data_V_last_V_1_ack_out == 1'b1)))) begin
            o_data_V_last_V_1_state <= 2'd2;
        end else if ((((o_data_V_last_V_1_state == 2'd1) & (o_data_V_last_V_1_ack_out == 1'b0)) | ((o_data_V_last_V_1_state == 2'd3) & (o_data_V_last_V_1_ack_out == 1'b0) & (o_data_V_last_V_1_vld_in == 1'b1)))) begin
            o_data_V_last_V_1_state <= 2'd1;
        end else if (((~((o_data_V_last_V_1_vld_in == 1'b0) & (o_data_V_last_V_1_ack_out == 1'b1)) & ~((o_data_V_last_V_1_ack_out == 1'b0) & (o_data_V_last_V_1_vld_in == 1'b1)) & (o_data_V_last_V_1_state == 2'd3)) | ((o_data_V_last_V_1_state == 2'd1) & (o_data_V_last_V_1_ack_out == 1'b1)) | ((o_data_V_last_V_1_state == 2'd2) & (o_data_V_last_V_1_vld_in == 1'b1)))) begin
            o_data_V_last_V_1_state <= 2'd3;
        end else begin
            o_data_V_last_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        phaseClass_V <= 4'd0;
    end else begin
        if ((1'b1 == ap_condition_502)) begin
            if ((currentState_load_reg_797 == 1'd1)) begin
                phaseClass_V <= tmp_4_fu_309_p2;
            end else if ((currentState_load_reg_797 == 1'd0)) begin
                phaseClass_V <= 4'd0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_502)) begin
        if (((currentState_load_reg_797 == 1'd1) & (cond_i_fu_239_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter2_p_0320_2_i_reg_174 <= 16'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_p_0320_2_i_reg_174 <= ap_phi_reg_pp0_iter1_p_0320_2_i_reg_174;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_502)) begin
        if (((currentState_load_reg_797 == 1'd1) & (cond_i_fu_239_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter2_p_0324_2_i_reg_163 <= 16'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_p_0324_2_i_reg_163 <= ap_phi_reg_pp0_iter1_p_0324_2_i_reg_163;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_502)) begin
        if (((currentState_load_reg_797 == 1'd1) & (cond_i_fu_239_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter2_p_0332_2_i_reg_152 <= 16'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_p_0332_2_i_reg_152 <= ap_phi_reg_pp0_iter1_p_0332_2_i_reg_152;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_502)) begin
        if (((currentState_load_reg_797 == 1'd1) & (cond_i_fu_239_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter2_p_0336_2_i_reg_141 <= 16'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_p_0336_2_i_reg_141 <= ap_phi_reg_pp0_iter1_p_0336_2_i_reg_141;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        if (((ap_reg_pp0_iter2_cond_i_reg_806 == 1'd1) & (ap_reg_pp0_iter2_currentState_load_reg_797 == 1'd1))) begin
            ap_phi_reg_pp0_iter4_p_0320_2_i_reg_174 <= corHelperQPos_V_i_fu_686_p2;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter4_p_0320_2_i_reg_174 <= ap_phi_reg_pp0_iter3_p_0320_2_i_reg_174;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        if (((ap_reg_pp0_iter2_cond_i_reg_806 == 1'd1) & (ap_reg_pp0_iter2_currentState_load_reg_797 == 1'd1))) begin
            ap_phi_reg_pp0_iter4_p_0324_2_i_reg_163 <= corHelperQNeg_V_7_i_fu_704_p2;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter4_p_0324_2_i_reg_163 <= ap_phi_reg_pp0_iter3_p_0324_2_i_reg_163;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        if (((ap_reg_pp0_iter2_cond_i_reg_806 == 1'd1) & (ap_reg_pp0_iter2_currentState_load_reg_797 == 1'd1))) begin
            ap_phi_reg_pp0_iter4_p_0332_2_i_reg_152 <= corHelperIPos_V_i_fu_677_p2;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter4_p_0332_2_i_reg_152 <= ap_phi_reg_pp0_iter3_p_0332_2_i_reg_152;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        if (((ap_reg_pp0_iter2_cond_i_reg_806 == 1'd1) & (ap_reg_pp0_iter2_currentState_load_reg_797 == 1'd1))) begin
            ap_phi_reg_pp0_iter4_p_0336_2_i_reg_141 <= corHelperINeg_V_7_i_fu_695_p2;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter4_p_0336_2_i_reg_141 <= ap_phi_reg_pp0_iter3_p_0336_2_i_reg_141;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_0320_2_i_reg_174 <= ap_phi_reg_pp0_iter0_p_0320_2_i_reg_174;
        ap_phi_reg_pp0_iter1_p_0324_2_i_reg_163 <= ap_phi_reg_pp0_iter0_p_0324_2_i_reg_163;
        ap_phi_reg_pp0_iter1_p_0332_2_i_reg_152 <= ap_phi_reg_pp0_iter0_p_0332_2_i_reg_152;
        ap_phi_reg_pp0_iter1_p_0336_2_i_reg_141 <= ap_phi_reg_pp0_iter0_p_0336_2_i_reg_141;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_reg_pp0_iter3_p_0320_2_i_reg_174 <= ap_phi_reg_pp0_iter2_p_0320_2_i_reg_174;
        ap_phi_reg_pp0_iter3_p_0324_2_i_reg_163 <= ap_phi_reg_pp0_iter2_p_0324_2_i_reg_163;
        ap_phi_reg_pp0_iter3_p_0332_2_i_reg_152 <= ap_phi_reg_pp0_iter2_p_0332_2_i_reg_152;
        ap_phi_reg_pp0_iter3_p_0336_2_i_reg_141 <= ap_phi_reg_pp0_iter2_p_0336_2_i_reg_141;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_reg_pp0_iter1_currentState_load_reg_797 <= currentState_load_reg_797;
        currentState_load_reg_797 <= currentState;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_reg_pp0_iter2_cond_i_reg_806 <= cond_i_reg_806;
        ap_reg_pp0_iter2_currentState_load_reg_797 <= ap_reg_pp0_iter1_currentState_load_reg_797;
        ap_reg_pp0_iter2_tmp_last_V_reg_801 <= tmp_last_V_reg_801;
        ap_reg_pp0_iter3_currentState_load_reg_797 <= ap_reg_pp0_iter2_currentState_load_reg_797;
        ap_reg_pp0_iter3_tmp_last_V_reg_801 <= ap_reg_pp0_iter2_tmp_last_V_reg_801;
        ap_reg_pp0_iter4_currentState_load_reg_797 <= ap_reg_pp0_iter3_currentState_load_reg_797;
        ap_reg_pp0_iter4_tmp_last_V_reg_801 <= ap_reg_pp0_iter3_tmp_last_V_reg_801;
        ap_reg_pp0_iter5_currentState_load_reg_797 <= ap_reg_pp0_iter4_currentState_load_reg_797;
        ap_reg_pp0_iter5_tmp_last_V_reg_801 <= ap_reg_pp0_iter4_tmp_last_V_reg_801;
        ap_reg_pp0_iter6_currentState_load_reg_797 <= ap_reg_pp0_iter5_currentState_load_reg_797;
        ap_reg_pp0_iter6_tmp_last_V_reg_801 <= ap_reg_pp0_iter5_tmp_last_V_reg_801;
        ap_reg_pp0_iter7_currentState_load_reg_797 <= ap_reg_pp0_iter6_currentState_load_reg_797;
        ap_reg_pp0_iter7_tmp_last_V_reg_801 <= ap_reg_pp0_iter6_tmp_last_V_reg_801;
        ap_reg_pp0_iter8_currentState_load_reg_797 <= ap_reg_pp0_iter7_currentState_load_reg_797;
        ap_reg_pp0_iter8_tmp_last_V_reg_801 <= ap_reg_pp0_iter7_tmp_last_V_reg_801;
        ap_reg_pp0_iter9_currentState_load_reg_797 <= ap_reg_pp0_iter8_currentState_load_reg_797;
        ap_reg_pp0_iter9_tmp_5_reg_937 <= tmp_5_reg_937;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (currentState_load_reg_797 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cond_i_reg_806 <= cond_i_fu_239_p2;
        tmp_last_V_reg_801 <= i_data_V_last_V_0_data_out;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (cond_i_reg_806 == 1'd1) & (ap_reg_pp0_iter1_currentState_load_reg_797 == 1'd1))) begin
        cor_phaseClass0i_V_1_2_reg_830 <= cor_phaseClass0i_V_12;
        cor_phaseClass0q_V_1_2_reg_835 <= cor_phaseClass0q_V_12;
        tmp11_reg_860 <= tmp11_fu_627_p2;
        tmp12_reg_865 <= tmp12_fu_633_p2;
        tmp13_reg_870 <= tmp13_fu_645_p2;
        tmp18_reg_875 <= tmp18_fu_650_p2;
        tmp19_reg_880 <= tmp19_fu_656_p2;
        tmp1_reg_840 <= tmp1_fu_579_p2;
        tmp20_reg_885 <= tmp20_fu_668_p2;
        tmp2_reg_845 <= tmp2_fu_597_p2;
        tmp6_reg_850 <= tmp6_fu_603_p2;
        tmp7_reg_855 <= tmp7_fu_621_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (cond_i_fu_239_p2 == 1'd1) & (currentState_load_reg_797 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cor_phaseClass0i_V_1_5_reg_810 <= cor_phaseClass0i_V_1;
        cor_phaseClass0q_V_1_5_reg_815 <= cor_phaseClass0q_V_1;
        tmp15_reg_820 <= tmp15_fu_291_p2;
        tmp22_reg_825 <= tmp22_fu_303_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((i_data_V_data_V_0_load_A == 1'b1)) begin
        i_data_V_data_V_0_payload_A <= i_data_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((i_data_V_data_V_0_load_B == 1'b1)) begin
        i_data_V_data_V_0_payload_B <= i_data_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((i_data_V_last_V_0_load_A == 1'b1)) begin
        i_data_V_last_V_0_payload_A <= i_data_TLAST;
    end
end

always @ (posedge ap_clk) begin
    if ((i_data_V_last_V_0_load_B == 1'b1)) begin
        i_data_V_last_V_0_payload_B <= i_data_TLAST;
    end
end

always @ (posedge ap_clk) begin
    if ((o_data_V_data_V_1_load_A == 1'b1)) begin
        o_data_V_data_V_1_payload_A <= o_data_V_data_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((o_data_V_data_V_1_load_B == 1'b1)) begin
        o_data_V_data_V_1_payload_B <= o_data_V_data_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((o_data_V_last_V_1_load_A == 1'b1)) begin
        o_data_V_last_V_1_payload_A <= ap_reg_pp0_iter8_tmp_last_V_reg_801;
    end
end

always @ (posedge ap_clk) begin
    if ((o_data_V_last_V_1_load_B == 1'b1)) begin
        o_data_V_last_V_1_payload_B <= ap_reg_pp0_iter8_tmp_last_V_reg_801;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter7_currentState_load_reg_797 == 1'd1))) begin
        p_Result_s_reg_932 <= p_Result_s_fu_755_p3;
        tmp_5_reg_937 <= tmp_5_fu_761_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter3_currentState_load_reg_797 == 1'd1))) begin
        resi_V_2_reg_910 <= resi_V_2_fu_727_p3;
        resq_V_2_reg_916 <= resq_V_2_fu_747_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter6_currentState_load_reg_797 == 1'd1))) begin
        resi_V_3_reg_922 <= grp_fu_789_p2;
        resq_V_3_reg_927 <= grp_fu_793_p2;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (1'b1 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

assign ap_reset_idle_pp0 = 1'b0;

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_789_ce = 1'b1;
    end else begin
        grp_fu_789_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_793_ce = 1'b1;
    end else begin
        grp_fu_793_ce = 1'b0;
    end
end

always @ (*) begin
    if (((currentState_load_reg_797 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_data_TDATA_blk_n = i_data_V_data_V_0_state[1'd0];
    end else begin
        i_data_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (currentState_load_reg_797 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_data_V_data_V_0_ack_out = 1'b1;
    end else begin
        i_data_V_data_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((i_data_V_data_V_0_sel == 1'b1)) begin
        i_data_V_data_V_0_data_out = i_data_V_data_V_0_payload_B;
    end else begin
        i_data_V_data_V_0_data_out = i_data_V_data_V_0_payload_A;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (currentState_load_reg_797 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_data_V_last_V_0_ack_out = 1'b1;
    end else begin
        i_data_V_last_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((i_data_V_last_V_0_sel == 1'b1)) begin
        i_data_V_last_V_0_data_out = i_data_V_last_V_0_payload_B;
    end else begin
        i_data_V_last_V_0_data_out = i_data_V_last_V_0_payload_A;
    end
end

always @ (*) begin
    if ((((ap_reg_pp0_iter9_tmp_5_reg_937 == 1'd1) & (ap_reg_pp0_iter9_currentState_load_reg_797 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter10 == 1'b1)) | ((ap_reg_pp0_iter9_currentState_load_reg_797 == 1'd1) & (ap_reg_pp0_iter9_tmp_5_reg_937 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter10 == 1'b1)) | ((tmp_5_reg_937 == 1'd1) & (ap_reg_pp0_iter8_currentState_load_reg_797 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter9 == 1'b1)) | ((ap_reg_pp0_iter8_currentState_load_reg_797 == 1'd1) & (tmp_5_reg_937 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter9 == 1'b1)))) begin
        o_data_TDATA_blk_n = o_data_V_data_V_1_state[1'd1];
    end else begin
        o_data_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        if ((ap_predicate_op139_write_state10 == 1'b1)) begin
            o_data_V_data_V_1_data_in = 32'd0;
        end else if ((ap_predicate_op138_write_state10 == 1'b1)) begin
            o_data_V_data_V_1_data_in = p_Result_s_reg_932;
        end else begin
            o_data_V_data_V_1_data_in = 'bx;
        end
    end else begin
        o_data_V_data_V_1_data_in = 'bx;
    end
end

always @ (*) begin
    if ((o_data_V_data_V_1_sel == 1'b1)) begin
        o_data_V_data_V_1_data_out = o_data_V_data_V_1_payload_B;
    end else begin
        o_data_V_data_V_1_data_out = o_data_V_data_V_1_payload_A;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op139_write_state10 == 1'b1) & (ap_enable_reg_pp0_iter9 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op138_write_state10 == 1'b1) & (ap_enable_reg_pp0_iter9 == 1'b1)))) begin
        o_data_V_data_V_1_vld_in = 1'b1;
    end else begin
        o_data_V_data_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((o_data_V_last_V_1_sel == 1'b1)) begin
        o_data_V_last_V_1_data_out = o_data_V_last_V_1_payload_B;
    end else begin
        o_data_V_last_V_1_data_out = o_data_V_last_V_1_payload_A;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op139_write_state10 == 1'b1) & (ap_enable_reg_pp0_iter9 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op138_write_state10 == 1'b1) & (ap_enable_reg_pp0_iter9 == 1'b1)))) begin
        o_data_V_last_V_1_vld_in = 1'b1;
    end else begin
        o_data_V_last_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter10 == 1'b1) & ((o_data_V_last_V_1_ack_in == 1'b0) | (o_data_V_data_V_1_ack_in == 1'b0))) | ((currentState_load_reg_797 == 1'd1) & (i_data_V_data_V_0_vld_out == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter10 == 1'b1) & ((o_data_V_last_V_1_ack_in == 1'b0) | (o_data_V_data_V_1_ack_in == 1'b0) | (1'b1 == ap_block_state11_io))) | ((1'b1 == ap_block_state10_io) & (ap_enable_reg_pp0_iter9 == 1'b1)) | ((currentState_load_reg_797 == 1'd1) & (i_data_V_data_V_0_vld_out == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter10 == 1'b1) & ((o_data_V_last_V_1_ack_in == 1'b0) | (o_data_V_data_V_1_ack_in == 1'b0) | (1'b1 == ap_block_state11_io))) | ((1'b1 == ap_block_state10_io) & (ap_enable_reg_pp0_iter9 == 1'b1)) | ((currentState_load_reg_797 == 1'd1) & (i_data_V_data_V_0_vld_out == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_state10_io = (((o_data_V_data_V_1_ack_in == 1'b0) & (ap_predicate_op139_write_state10 == 1'b1)) | ((o_data_V_data_V_1_ack_in == 1'b0) & (ap_predicate_op138_write_state10 == 1'b1)));
end

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state11_io = (((o_data_V_data_V_1_ack_in == 1'b0) & (ap_predicate_op161_write_state11 == 1'b1)) | ((o_data_V_data_V_1_ack_in == 1'b0) & (ap_predicate_op159_write_state11 == 1'b1)));
end

always @ (*) begin
    ap_block_state11_pp0_stage0_iter10 = ((o_data_V_last_V_1_ack_in == 1'b0) | (o_data_V_data_V_1_ack_in == 1'b0));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((currentState_load_reg_797 == 1'd1) & (i_data_V_data_V_0_vld_out == 1'b0));
end

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_502 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_p_0320_2_i_reg_174 = 'bx;

assign ap_phi_reg_pp0_iter0_p_0324_2_i_reg_163 = 'bx;

assign ap_phi_reg_pp0_iter0_p_0332_2_i_reg_152 = 'bx;

assign ap_phi_reg_pp0_iter0_p_0336_2_i_reg_141 = 'bx;

always @ (*) begin
    ap_predicate_op138_write_state10 = ((ap_reg_pp0_iter8_currentState_load_reg_797 == 1'd1) & (tmp_5_reg_937 == 1'd0));
end

always @ (*) begin
    ap_predicate_op139_write_state10 = ((tmp_5_reg_937 == 1'd1) & (ap_reg_pp0_iter8_currentState_load_reg_797 == 1'd1));
end

always @ (*) begin
    ap_predicate_op159_write_state11 = ((ap_reg_pp0_iter9_currentState_load_reg_797 == 1'd1) & (ap_reg_pp0_iter9_tmp_5_reg_937 == 1'd0));
end

always @ (*) begin
    ap_predicate_op161_write_state11 = ((ap_reg_pp0_iter9_tmp_5_reg_937 == 1'd1) & (ap_reg_pp0_iter9_currentState_load_reg_797 == 1'd1));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign cond_i_fu_239_p2 = ((phaseClass_V == 4'd0) ? 1'b1 : 1'b0);

assign corHelperINeg_V_7_i_fu_695_p2 = (tmp13_reg_870 + tmp10_fu_691_p2);

assign corHelperIPos_V_i_fu_677_p2 = (tmp2_reg_845 + tmp_fu_673_p2);

assign corHelperQNeg_V_7_i_fu_704_p2 = (tmp20_reg_885 + tmp17_fu_700_p2);

assign corHelperQPos_V_i_fu_686_p2 = (tmp7_reg_855 + tmp5_fu_682_p2);

assign i_data_TREADY = i_data_V_last_V_0_state[1'd1];

assign i_data_V_data_V_0_ack_in = i_data_V_data_V_0_state[1'd1];

assign i_data_V_data_V_0_load_A = (i_data_V_data_V_0_state_cmp_full & ~i_data_V_data_V_0_sel_wr);

assign i_data_V_data_V_0_load_B = (i_data_V_data_V_0_state_cmp_full & i_data_V_data_V_0_sel_wr);

assign i_data_V_data_V_0_sel = i_data_V_data_V_0_sel_rd;

assign i_data_V_data_V_0_state_cmp_full = ((i_data_V_data_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign i_data_V_data_V_0_vld_in = i_data_TVALID;

assign i_data_V_data_V_0_vld_out = i_data_V_data_V_0_state[1'd0];

assign i_data_V_last_V_0_ack_in = i_data_V_last_V_0_state[1'd1];

assign i_data_V_last_V_0_load_A = (i_data_V_last_V_0_state_cmp_full & ~i_data_V_last_V_0_sel_wr);

assign i_data_V_last_V_0_load_B = (i_data_V_last_V_0_state_cmp_full & i_data_V_last_V_0_sel_wr);

assign i_data_V_last_V_0_sel = i_data_V_last_V_0_sel_rd;

assign i_data_V_last_V_0_state_cmp_full = ((i_data_V_last_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign i_data_V_last_V_0_vld_in = i_data_TVALID;

assign i_data_V_last_V_0_vld_out = i_data_V_last_V_0_state[1'd0];

assign o_data_TDATA = o_data_V_data_V_1_data_out;

assign o_data_TLAST = o_data_V_last_V_1_data_out;

assign o_data_TVALID = o_data_V_last_V_1_state[1'd0];

assign o_data_V_data_V_1_ack_in = o_data_V_data_V_1_state[1'd1];

assign o_data_V_data_V_1_ack_out = o_data_TREADY;

assign o_data_V_data_V_1_load_A = (o_data_V_data_V_1_state_cmp_full & ~o_data_V_data_V_1_sel_wr);

assign o_data_V_data_V_1_load_B = (o_data_V_data_V_1_state_cmp_full & o_data_V_data_V_1_sel_wr);

assign o_data_V_data_V_1_sel = o_data_V_data_V_1_sel_rd;

assign o_data_V_data_V_1_state_cmp_full = ((o_data_V_data_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign o_data_V_data_V_1_vld_out = o_data_V_data_V_1_state[1'd0];

assign o_data_V_last_V_1_ack_in = o_data_V_last_V_1_state[1'd1];

assign o_data_V_last_V_1_ack_out = o_data_TREADY;

assign o_data_V_last_V_1_load_A = (o_data_V_last_V_1_state_cmp_full & ~o_data_V_last_V_1_sel_wr);

assign o_data_V_last_V_1_load_B = (o_data_V_last_V_1_state_cmp_full & o_data_V_last_V_1_sel_wr);

assign o_data_V_last_V_1_sel = o_data_V_last_V_1_sel_rd;

assign o_data_V_last_V_1_state_cmp_full = ((o_data_V_last_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign o_data_V_last_V_1_vld_out = o_data_V_last_V_1_state[1'd0];

assign op2_V_read_assign_1_fu_223_p4 = {{i_data_V_data_V_0_data_out[31:16]}};

assign p_Result_s_fu_755_p3 = {{resq_V_3_reg_927}, {resi_V_3_reg_922}};

assign resi_V_1_fu_721_p2 = (ap_phi_reg_pp0_iter4_p_0336_2_i_reg_141 - ap_phi_reg_pp0_iter4_p_0332_2_i_reg_152);

assign resi_V_2_fu_727_p3 = ((tmp_4_i_fu_709_p2[0:0] === 1'b1) ? resi_V_fu_715_p2 : resi_V_1_fu_721_p2);

assign resi_V_fu_715_p2 = (ap_phi_reg_pp0_iter4_p_0332_2_i_reg_152 - ap_phi_reg_pp0_iter4_p_0336_2_i_reg_141);

assign resq_V_1_fu_741_p2 = (ap_phi_reg_pp0_iter4_p_0324_2_i_reg_163 - ap_phi_reg_pp0_iter4_p_0320_2_i_reg_174);

assign resq_V_2_fu_747_p3 = ((tmp_4_i_fu_709_p2[0:0] === 1'b1) ? resq_V_fu_735_p2 : resq_V_1_fu_741_p2);

assign resq_V_fu_735_p2 = (ap_phi_reg_pp0_iter4_p_0320_2_i_reg_174 - ap_phi_reg_pp0_iter4_p_0324_2_i_reg_163);

assign tmp10_fu_691_p2 = (tmp12_reg_865 + tmp11_reg_860);

assign tmp11_fu_627_p2 = (cor_phaseClass0i_V_11 + cor_phaseClass0i_V_14);

assign tmp12_fu_633_p2 = (cor_phaseClass0i_V_10 + cor_phaseClass0i_V_9);

assign tmp13_fu_645_p2 = (tmp15_reg_820 + tmp14_fu_639_p2);

assign tmp14_fu_639_p2 = (cor_phaseClass0i_V_4 + cor_phaseClass0i_V_3);

assign tmp15_fu_291_p2 = (tmp16_fu_285_p2 + cor_phaseClass0i_V_1);

assign tmp16_fu_285_p2 = (cor_phaseClass0i_V_0 + tmp_1_fu_213_p1);

assign tmp17_fu_700_p2 = (tmp19_reg_880 + tmp18_reg_875);

assign tmp18_fu_650_p2 = (cor_phaseClass0q_V_11 + cor_phaseClass0q_V_14);

assign tmp19_fu_656_p2 = (cor_phaseClass0q_V_10 + cor_phaseClass0q_V_9);

assign tmp1_fu_579_p2 = (cor_phaseClass0i_V_13 + cor_phaseClass0i_V_8);

assign tmp20_fu_668_p2 = (tmp22_reg_825 + tmp21_fu_662_p2);

assign tmp21_fu_662_p2 = (cor_phaseClass0q_V_4 + cor_phaseClass0q_V_3);

assign tmp22_fu_303_p2 = (tmp23_fu_297_p2 + cor_phaseClass0q_V_1);

assign tmp23_fu_297_p2 = (cor_phaseClass0q_V_0 + op2_V_read_assign_1_fu_223_p4);

assign tmp2_fu_597_p2 = (tmp4_fu_591_p2 + tmp3_fu_585_p2);

assign tmp3_fu_585_p2 = (cor_phaseClass0i_V_7 + cor_phaseClass0i_V_6);

assign tmp4_fu_591_p2 = (cor_phaseClass0i_V_5 + cor_phaseClass0i_V_2);

assign tmp5_fu_682_p2 = (tmp6_reg_850 + cor_phaseClass0q_V_1_2_reg_835);

assign tmp6_fu_603_p2 = (cor_phaseClass0q_V_13 + cor_phaseClass0q_V_8);

assign tmp7_fu_621_p2 = (tmp9_fu_615_p2 + tmp8_fu_609_p2);

assign tmp8_fu_609_p2 = (cor_phaseClass0q_V_7 + cor_phaseClass0q_V_6);

assign tmp9_fu_615_p2 = (cor_phaseClass0q_V_5 + cor_phaseClass0q_V_2);

assign tmp_1_fu_213_p1 = i_data_V_data_V_0_data_out[15:0];

assign tmp_2_fu_777_p2 = (loadCount_V + 32'd1);

assign tmp_4_fu_309_p2 = (phaseClass_V + 4'd1);

assign tmp_4_i_fu_709_p2 = (($signed(ap_phi_reg_pp0_iter4_p_0332_2_i_reg_152) > $signed(ap_phi_reg_pp0_iter4_p_0336_2_i_reg_141)) ? 1'b1 : 1'b0);

assign tmp_5_fu_761_p2 = ((p_Result_s_fu_755_p3 == 32'd0) ? 1'b1 : 1'b0);

assign tmp_fu_673_p2 = (tmp1_reg_840 + cor_phaseClass0i_V_1_2_reg_830);

endmodule //correlateTop
