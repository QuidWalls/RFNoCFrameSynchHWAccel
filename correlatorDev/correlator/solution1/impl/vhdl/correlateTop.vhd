-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity correlateTop is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    i_data_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    i_data_TVALID : IN STD_LOGIC;
    i_data_TREADY : OUT STD_LOGIC;
    i_data_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    o_data_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    o_data_TVALID : OUT STD_LOGIC;
    o_data_TREADY : IN STD_LOGIC;
    o_data_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    start_V : IN STD_LOGIC_VECTOR (0 downto 0);
    phaseClass_V : IN STD_LOGIC_VECTOR (3 downto 0) );
end;


architecture behav of correlateTop is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "correlateTop,hls_ip_2017_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7k160tfbg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=7.637000,HLS_SYN_LAT=3,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=621,HLS_SYN_LUT=782}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";

    signal ap_rst_n_inv : STD_LOGIC;
    signal i_data_data_V_0_data_out : STD_LOGIC_VECTOR (31 downto 0);
    signal i_data_data_V_0_vld_in : STD_LOGIC;
    signal i_data_data_V_0_vld_out : STD_LOGIC;
    signal i_data_data_V_0_ack_in : STD_LOGIC;
    signal i_data_data_V_0_ack_out : STD_LOGIC;
    signal i_data_data_V_0_payload_A : STD_LOGIC_VECTOR (31 downto 0);
    signal i_data_data_V_0_payload_B : STD_LOGIC_VECTOR (31 downto 0);
    signal i_data_data_V_0_sel_rd : STD_LOGIC := '0';
    signal i_data_data_V_0_sel_wr : STD_LOGIC := '0';
    signal i_data_data_V_0_sel : STD_LOGIC;
    signal i_data_data_V_0_load_A : STD_LOGIC;
    signal i_data_data_V_0_load_B : STD_LOGIC;
    signal i_data_data_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal i_data_data_V_0_state_cmp_full : STD_LOGIC;
    signal i_data_last_V_0_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal i_data_last_V_0_vld_in : STD_LOGIC;
    signal i_data_last_V_0_vld_out : STD_LOGIC;
    signal i_data_last_V_0_ack_in : STD_LOGIC;
    signal i_data_last_V_0_ack_out : STD_LOGIC;
    signal i_data_last_V_0_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal i_data_last_V_0_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal i_data_last_V_0_sel_rd : STD_LOGIC := '0';
    signal i_data_last_V_0_sel_wr : STD_LOGIC := '0';
    signal i_data_last_V_0_sel : STD_LOGIC;
    signal i_data_last_V_0_load_A : STD_LOGIC;
    signal i_data_last_V_0_load_B : STD_LOGIC;
    signal i_data_last_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal i_data_last_V_0_state_cmp_full : STD_LOGIC;
    signal o_data_data_V_1_data_out : STD_LOGIC_VECTOR (31 downto 0);
    signal o_data_data_V_1_vld_in : STD_LOGIC;
    signal o_data_data_V_1_vld_out : STD_LOGIC;
    signal o_data_data_V_1_ack_in : STD_LOGIC;
    signal o_data_data_V_1_ack_out : STD_LOGIC;
    signal o_data_data_V_1_payload_A : STD_LOGIC_VECTOR (31 downto 0);
    signal o_data_data_V_1_payload_B : STD_LOGIC_VECTOR (31 downto 0);
    signal o_data_data_V_1_sel_rd : STD_LOGIC := '0';
    signal o_data_data_V_1_sel_wr : STD_LOGIC := '0';
    signal o_data_data_V_1_sel : STD_LOGIC;
    signal o_data_data_V_1_load_A : STD_LOGIC;
    signal o_data_data_V_1_load_B : STD_LOGIC;
    signal o_data_data_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal o_data_data_V_1_state_cmp_full : STD_LOGIC;
    signal o_data_last_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal o_data_last_V_1_vld_in : STD_LOGIC;
    signal o_data_last_V_1_vld_out : STD_LOGIC;
    signal o_data_last_V_1_ack_in : STD_LOGIC;
    signal o_data_last_V_1_ack_out : STD_LOGIC;
    signal o_data_last_V_1_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal o_data_last_V_1_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal o_data_last_V_1_sel_rd : STD_LOGIC := '0';
    signal o_data_last_V_1_sel_wr : STD_LOGIC := '0';
    signal o_data_last_V_1_sel : STD_LOGIC;
    signal o_data_last_V_1_load_A : STD_LOGIC;
    signal o_data_last_V_1_load_B : STD_LOGIC;
    signal o_data_last_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal o_data_last_V_1_state_cmp_full : STD_LOGIC;
    signal currentState : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal loadCount_V : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal cor_phaseClass0_V_14 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal cor_phaseClass0_V_13 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal cor_phaseClass0_V_12 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal cor_phaseClass0_V_11 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal cor_phaseClass0_V_10 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal cor_phaseClass0_V_9 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal cor_phaseClass0_V_8 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal cor_phaseClass0_V_7 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal cor_phaseClass0_V_6 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal cor_phaseClass0_V_5 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal cor_phaseClass0_V_4 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal cor_phaseClass0_V_3 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal cor_phaseClass0_V_2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal cor_phaseClass0_V_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal cor_phaseClass0_V_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal i_data_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal currentState_load_reg_463 : STD_LOGIC_VECTOR (0 downto 0);
    signal o_data_TDATA_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_reg_pp0_iter1_currentState_load_reg_463 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_reg_pp0_iter2_currentState_load_reg_463 : STD_LOGIC_VECTOR (0 downto 0);
    signal start_V_read_read_fu_92_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal start_V_read_reg_459 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state3_io : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state4_io : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_reg_pp0_iter1_start_V_read_reg_459 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter2_start_V_read_reg_459 : STD_LOGIC_VECTOR (0 downto 0);
    signal currentState_load_load_fu_144_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal cond_i_fu_148_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cond_i_reg_467 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_data_last_V_tmp_reg_471 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_5_1_i_fu_358_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_2_4_i_fu_400_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal o_data_data_V_tmp_fu_432_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_phi_reg_pp0_iter0_p_Val2_1_reg_116 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_p_Val2_1_reg_116 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter2_p_Val2_1_reg_116 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter0_p_Val2_2_reg_127 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_p_Val2_2_reg_127 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter2_p_Val2_2_reg_127 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_2_fu_447_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_162_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp2_fu_328_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp1_fu_322_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp5_fu_346_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp4_fu_340_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp3_fu_352_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_fu_334_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp8_fu_370_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp7_fu_364_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp11_fu_388_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp10_fu_382_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp9_fu_394_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp6_fu_376_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_i_fu_406_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_8_i_fu_418_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_9_i_fu_412_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal res_V_fu_424_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_365 : BOOLEAN;
    signal ap_condition_367 : BOOLEAN;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    cor_phaseClass0_V_0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                cor_phaseClass0_V_0 <= ap_const_lv16_0;
            else
                if (((cond_i_reg_467 = ap_const_lv1_1) and (currentState_load_reg_463 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    cor_phaseClass0_V_0 <= tmp_1_fu_162_p1;
                end if; 
            end if;
        end if;
    end process;


    cor_phaseClass0_V_1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                cor_phaseClass0_V_1 <= ap_const_lv16_0;
            else
                if (((cond_i_reg_467 = ap_const_lv1_1) and (currentState_load_reg_463 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    cor_phaseClass0_V_1 <= cor_phaseClass0_V_0;
                end if; 
            end if;
        end if;
    end process;


    cor_phaseClass0_V_10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                cor_phaseClass0_V_10 <= ap_const_lv16_0;
            else
                if (((cond_i_reg_467 = ap_const_lv1_1) and (currentState_load_reg_463 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    cor_phaseClass0_V_10 <= cor_phaseClass0_V_9;
                end if; 
            end if;
        end if;
    end process;


    cor_phaseClass0_V_11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                cor_phaseClass0_V_11 <= ap_const_lv16_0;
            else
                if (((cond_i_reg_467 = ap_const_lv1_1) and (currentState_load_reg_463 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    cor_phaseClass0_V_11 <= cor_phaseClass0_V_10;
                end if; 
            end if;
        end if;
    end process;


    cor_phaseClass0_V_12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                cor_phaseClass0_V_12 <= ap_const_lv16_0;
            else
                if (((cond_i_reg_467 = ap_const_lv1_1) and (currentState_load_reg_463 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    cor_phaseClass0_V_12 <= cor_phaseClass0_V_11;
                end if; 
            end if;
        end if;
    end process;


    cor_phaseClass0_V_13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                cor_phaseClass0_V_13 <= ap_const_lv16_0;
            else
                if (((cond_i_reg_467 = ap_const_lv1_1) and (currentState_load_reg_463 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    cor_phaseClass0_V_13 <= cor_phaseClass0_V_12;
                end if; 
            end if;
        end if;
    end process;


    cor_phaseClass0_V_14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                cor_phaseClass0_V_14 <= ap_const_lv16_0;
            else
                if (((cond_i_reg_467 = ap_const_lv1_1) and (currentState_load_reg_463 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    cor_phaseClass0_V_14 <= cor_phaseClass0_V_13;
                end if; 
            end if;
        end if;
    end process;


    cor_phaseClass0_V_2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                cor_phaseClass0_V_2 <= ap_const_lv16_0;
            else
                if (((cond_i_reg_467 = ap_const_lv1_1) and (currentState_load_reg_463 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    cor_phaseClass0_V_2 <= cor_phaseClass0_V_1;
                end if; 
            end if;
        end if;
    end process;


    cor_phaseClass0_V_3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                cor_phaseClass0_V_3 <= ap_const_lv16_0;
            else
                if (((cond_i_reg_467 = ap_const_lv1_1) and (currentState_load_reg_463 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    cor_phaseClass0_V_3 <= cor_phaseClass0_V_2;
                end if; 
            end if;
        end if;
    end process;


    cor_phaseClass0_V_4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                cor_phaseClass0_V_4 <= ap_const_lv16_0;
            else
                if (((cond_i_reg_467 = ap_const_lv1_1) and (currentState_load_reg_463 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    cor_phaseClass0_V_4 <= cor_phaseClass0_V_3;
                end if; 
            end if;
        end if;
    end process;


    cor_phaseClass0_V_5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                cor_phaseClass0_V_5 <= ap_const_lv16_0;
            else
                if (((cond_i_reg_467 = ap_const_lv1_1) and (currentState_load_reg_463 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    cor_phaseClass0_V_5 <= cor_phaseClass0_V_4;
                end if; 
            end if;
        end if;
    end process;


    cor_phaseClass0_V_6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                cor_phaseClass0_V_6 <= ap_const_lv16_0;
            else
                if (((cond_i_reg_467 = ap_const_lv1_1) and (currentState_load_reg_463 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    cor_phaseClass0_V_6 <= cor_phaseClass0_V_5;
                end if; 
            end if;
        end if;
    end process;


    cor_phaseClass0_V_7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                cor_phaseClass0_V_7 <= ap_const_lv16_0;
            else
                if (((cond_i_reg_467 = ap_const_lv1_1) and (currentState_load_reg_463 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    cor_phaseClass0_V_7 <= cor_phaseClass0_V_6;
                end if; 
            end if;
        end if;
    end process;


    cor_phaseClass0_V_8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                cor_phaseClass0_V_8 <= ap_const_lv16_0;
            else
                if (((cond_i_reg_467 = ap_const_lv1_1) and (currentState_load_reg_463 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    cor_phaseClass0_V_8 <= cor_phaseClass0_V_7;
                end if; 
            end if;
        end if;
    end process;


    cor_phaseClass0_V_9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                cor_phaseClass0_V_9 <= ap_const_lv16_0;
            else
                if (((cond_i_reg_467 = ap_const_lv1_1) and (currentState_load_reg_463 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    cor_phaseClass0_V_9 <= cor_phaseClass0_V_8;
                end if; 
            end if;
        end if;
    end process;


    currentState_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                currentState <= ap_const_lv1_0;
            else
                if ((((start_V_read_read_fu_92_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (currentState_load_load_fu_144_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((currentState_load_load_fu_144_p1 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
                    currentState <= ap_const_lv1_1;
                end if; 
            end if;
        end if;
    end process;


    i_data_data_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                i_data_data_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((i_data_data_V_0_ack_out = ap_const_logic_1) and (i_data_data_V_0_vld_out = ap_const_logic_1))) then 
                                        i_data_data_V_0_sel_rd <= not(i_data_data_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    i_data_data_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                i_data_data_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((i_data_data_V_0_ack_in = ap_const_logic_1) and (i_data_data_V_0_vld_in = ap_const_logic_1))) then 
                                        i_data_data_V_0_sel_wr <= not(i_data_data_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    i_data_data_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                i_data_data_V_0_state <= ap_const_lv2_0;
            else
                if ((((i_data_data_V_0_vld_in = ap_const_logic_0) and (i_data_data_V_0_state = ap_const_lv2_2)) or ((i_data_data_V_0_vld_in = ap_const_logic_0) and (i_data_data_V_0_state = ap_const_lv2_3) and (i_data_data_V_0_ack_out = ap_const_logic_1)))) then 
                    i_data_data_V_0_state <= ap_const_lv2_2;
                elsif ((((i_data_data_V_0_ack_out = ap_const_logic_0) and (i_data_data_V_0_state = ap_const_lv2_1)) or ((i_data_data_V_0_ack_out = ap_const_logic_0) and (i_data_data_V_0_state = ap_const_lv2_3) and (i_data_data_V_0_vld_in = ap_const_logic_1)))) then 
                    i_data_data_V_0_state <= ap_const_lv2_1;
                elsif (((not(((i_data_data_V_0_vld_in = ap_const_logic_0) and (i_data_data_V_0_ack_out = ap_const_logic_1))) and not(((i_data_data_V_0_ack_out = ap_const_logic_0) and (i_data_data_V_0_vld_in = ap_const_logic_1))) and (i_data_data_V_0_state = ap_const_lv2_3)) or ((i_data_data_V_0_state = ap_const_lv2_1) and (i_data_data_V_0_ack_out = ap_const_logic_1)) or ((i_data_data_V_0_state = ap_const_lv2_2) and (i_data_data_V_0_vld_in = ap_const_logic_1)))) then 
                    i_data_data_V_0_state <= ap_const_lv2_3;
                else 
                    i_data_data_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    i_data_last_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                i_data_last_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((i_data_last_V_0_ack_out = ap_const_logic_1) and (i_data_last_V_0_vld_out = ap_const_logic_1))) then 
                                        i_data_last_V_0_sel_rd <= not(i_data_last_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    i_data_last_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                i_data_last_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((i_data_last_V_0_ack_in = ap_const_logic_1) and (i_data_last_V_0_vld_in = ap_const_logic_1))) then 
                                        i_data_last_V_0_sel_wr <= not(i_data_last_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    i_data_last_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                i_data_last_V_0_state <= ap_const_lv2_0;
            else
                if ((((i_data_last_V_0_state = ap_const_lv2_3) and (i_data_last_V_0_vld_in = ap_const_logic_0) and (i_data_last_V_0_ack_out = ap_const_logic_1)) or ((i_data_last_V_0_state = ap_const_lv2_2) and (i_data_last_V_0_vld_in = ap_const_logic_0)))) then 
                    i_data_last_V_0_state <= ap_const_lv2_2;
                elsif ((((i_data_last_V_0_state = ap_const_lv2_1) and (i_data_last_V_0_ack_out = ap_const_logic_0)) or ((i_data_last_V_0_state = ap_const_lv2_3) and (i_data_last_V_0_ack_out = ap_const_logic_0) and (i_data_last_V_0_vld_in = ap_const_logic_1)))) then 
                    i_data_last_V_0_state <= ap_const_lv2_1;
                elsif ((((i_data_last_V_0_state = ap_const_lv2_1) and (i_data_last_V_0_ack_out = ap_const_logic_1)) or ((i_data_last_V_0_state = ap_const_lv2_2) and (i_data_last_V_0_vld_in = ap_const_logic_1)) or (not(((i_data_last_V_0_vld_in = ap_const_logic_0) and (i_data_last_V_0_ack_out = ap_const_logic_1))) and not(((i_data_last_V_0_ack_out = ap_const_logic_0) and (i_data_last_V_0_vld_in = ap_const_logic_1))) and (i_data_last_V_0_state = ap_const_lv2_3)))) then 
                    i_data_last_V_0_state <= ap_const_lv2_3;
                else 
                    i_data_last_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    loadCount_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                loadCount_V <= ap_const_lv32_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
                    if ((ap_reg_pp0_iter2_currentState_load_reg_463 = ap_const_lv1_1)) then 
                        loadCount_V <= tmp_2_fu_447_p2;
                    elsif (((ap_reg_pp0_iter2_start_V_read_reg_459 = ap_const_lv1_1) and (ap_reg_pp0_iter2_currentState_load_reg_463 = ap_const_lv1_0))) then 
                        loadCount_V <= ap_const_lv32_0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    o_data_data_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                o_data_data_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((o_data_data_V_1_ack_out = ap_const_logic_1) and (o_data_data_V_1_vld_out = ap_const_logic_1))) then 
                                        o_data_data_V_1_sel_rd <= not(o_data_data_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    o_data_data_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                o_data_data_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((o_data_data_V_1_ack_in = ap_const_logic_1) and (o_data_data_V_1_vld_in = ap_const_logic_1))) then 
                                        o_data_data_V_1_sel_wr <= not(o_data_data_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    o_data_data_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                o_data_data_V_1_state <= ap_const_lv2_0;
            else
                if ((((o_data_data_V_1_state = ap_const_lv2_2) and (o_data_data_V_1_vld_in = ap_const_logic_0)) or ((o_data_data_V_1_state = ap_const_lv2_3) and (o_data_data_V_1_vld_in = ap_const_logic_0) and (o_data_data_V_1_ack_out = ap_const_logic_1)))) then 
                    o_data_data_V_1_state <= ap_const_lv2_2;
                elsif ((((o_data_data_V_1_state = ap_const_lv2_1) and (o_data_data_V_1_ack_out = ap_const_logic_0)) or ((o_data_data_V_1_state = ap_const_lv2_3) and (o_data_data_V_1_ack_out = ap_const_logic_0) and (o_data_data_V_1_vld_in = ap_const_logic_1)))) then 
                    o_data_data_V_1_state <= ap_const_lv2_1;
                elsif (((not(((o_data_data_V_1_vld_in = ap_const_logic_0) and (o_data_data_V_1_ack_out = ap_const_logic_1))) and not(((o_data_data_V_1_ack_out = ap_const_logic_0) and (o_data_data_V_1_vld_in = ap_const_logic_1))) and (o_data_data_V_1_state = ap_const_lv2_3)) or ((o_data_data_V_1_state = ap_const_lv2_1) and (o_data_data_V_1_ack_out = ap_const_logic_1)) or ((o_data_data_V_1_state = ap_const_lv2_2) and (o_data_data_V_1_vld_in = ap_const_logic_1)))) then 
                    o_data_data_V_1_state <= ap_const_lv2_3;
                else 
                    o_data_data_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    o_data_last_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                o_data_last_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((o_data_last_V_1_ack_out = ap_const_logic_1) and (o_data_last_V_1_vld_out = ap_const_logic_1))) then 
                                        o_data_last_V_1_sel_rd <= not(o_data_last_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    o_data_last_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                o_data_last_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((o_data_last_V_1_ack_in = ap_const_logic_1) and (o_data_last_V_1_vld_in = ap_const_logic_1))) then 
                                        o_data_last_V_1_sel_wr <= not(o_data_last_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    o_data_last_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                o_data_last_V_1_state <= ap_const_lv2_0;
            else
                if ((((o_data_last_V_1_state = ap_const_lv2_2) and (o_data_last_V_1_vld_in = ap_const_logic_0)) or ((o_data_last_V_1_state = ap_const_lv2_3) and (o_data_last_V_1_vld_in = ap_const_logic_0) and (o_data_last_V_1_ack_out = ap_const_logic_1)))) then 
                    o_data_last_V_1_state <= ap_const_lv2_2;
                elsif ((((o_data_last_V_1_state = ap_const_lv2_1) and (o_data_last_V_1_ack_out = ap_const_logic_0)) or ((o_data_last_V_1_state = ap_const_lv2_3) and (o_data_last_V_1_ack_out = ap_const_logic_0) and (o_data_last_V_1_vld_in = ap_const_logic_1)))) then 
                    o_data_last_V_1_state <= ap_const_lv2_1;
                elsif (((not(((o_data_last_V_1_vld_in = ap_const_logic_0) and (o_data_last_V_1_ack_out = ap_const_logic_1))) and not(((o_data_last_V_1_ack_out = ap_const_logic_0) and (o_data_last_V_1_vld_in = ap_const_logic_1))) and (o_data_last_V_1_state = ap_const_lv2_3)) or ((o_data_last_V_1_state = ap_const_lv2_1) and (o_data_last_V_1_ack_out = ap_const_logic_1)) or ((o_data_last_V_1_state = ap_const_lv2_2) and (o_data_last_V_1_vld_in = ap_const_logic_1)))) then 
                    o_data_last_V_1_state <= ap_const_lv2_3;
                else 
                    o_data_last_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_p_Val2_1_reg_116_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_365)) then
                if (((currentState_load_load_fu_144_p1 = ap_const_lv1_1) and (cond_i_fu_148_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_p_Val2_1_reg_116 <= ap_const_lv16_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_p_Val2_1_reg_116 <= ap_phi_reg_pp0_iter0_p_Val2_1_reg_116;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_p_Val2_2_reg_127_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_365)) then
                if (((currentState_load_load_fu_144_p1 = ap_const_lv1_1) and (cond_i_fu_148_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_p_Val2_2_reg_127 <= ap_const_lv16_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_p_Val2_2_reg_127 <= ap_phi_reg_pp0_iter0_p_Val2_2_reg_127;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter2_p_Val2_1_reg_116_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_367)) then
                if (((cond_i_reg_467 = ap_const_lv1_1) and (currentState_load_reg_463 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter2_p_Val2_1_reg_116 <= p_Val2_2_4_i_fu_400_p2;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter2_p_Val2_1_reg_116 <= ap_phi_reg_pp0_iter1_p_Val2_1_reg_116;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter2_p_Val2_2_reg_127_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_367)) then
                if (((cond_i_reg_467 = ap_const_lv1_1) and (currentState_load_reg_463 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter2_p_Val2_2_reg_127 <= p_Val2_5_1_i_fu_358_p2;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter2_p_Val2_2_reg_127 <= ap_phi_reg_pp0_iter1_p_Val2_2_reg_127;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_reg_pp0_iter1_currentState_load_reg_463 <= currentState_load_reg_463;
                ap_reg_pp0_iter1_start_V_read_reg_459 <= start_V_read_reg_459;
                currentState_load_reg_463 <= currentState;
                start_V_read_reg_459 <= start_V;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                ap_reg_pp0_iter2_currentState_load_reg_463 <= ap_reg_pp0_iter1_currentState_load_reg_463;
                ap_reg_pp0_iter2_start_V_read_reg_459 <= ap_reg_pp0_iter1_start_V_read_reg_459;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((currentState_load_load_fu_144_p1 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                cond_i_reg_467 <= cond_i_fu_148_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((i_data_data_V_0_load_A = ap_const_logic_1)) then
                i_data_data_V_0_payload_A <= i_data_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((i_data_data_V_0_load_B = ap_const_logic_1)) then
                i_data_data_V_0_payload_B <= i_data_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((i_data_last_V_0_load_A = ap_const_logic_1)) then
                i_data_last_V_0_payload_A <= i_data_TLAST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((i_data_last_V_0_load_B = ap_const_logic_1)) then
                i_data_last_V_0_payload_B <= i_data_TLAST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((currentState_load_reg_463 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                i_data_last_V_tmp_reg_471 <= i_data_last_V_0_data_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((o_data_data_V_1_load_A = ap_const_logic_1)) then
                o_data_data_V_1_payload_A <= o_data_data_V_tmp_fu_432_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((o_data_data_V_1_load_B = ap_const_logic_1)) then
                o_data_data_V_1_payload_B <= o_data_data_V_tmp_fu_432_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((o_data_last_V_1_load_A = ap_const_logic_1)) then
                o_data_last_V_1_payload_A <= i_data_last_V_tmp_reg_471;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((o_data_last_V_1_load_B = ap_const_logic_1)) then
                o_data_last_V_1_payload_B <= i_data_last_V_tmp_reg_471;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(i_data_data_V_0_vld_out, o_data_data_V_1_ack_in, o_data_last_V_1_ack_in, ap_enable_reg_pp0_iter1, currentState_load_reg_463, ap_enable_reg_pp0_iter3)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and ((o_data_last_V_1_ack_in = ap_const_logic_0) or (o_data_data_V_1_ack_in = ap_const_logic_0))) or ((currentState_load_reg_463 = ap_const_lv1_1) and (i_data_data_V_0_vld_out = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(i_data_data_V_0_vld_out, o_data_data_V_1_ack_in, o_data_last_V_1_ack_in, ap_enable_reg_pp0_iter1, currentState_load_reg_463, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_block_state3_io, ap_block_state4_io)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and ((o_data_last_V_1_ack_in = ap_const_logic_0) or (o_data_data_V_1_ack_in = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state4_io))) or ((ap_const_boolean_1 = ap_block_state3_io) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((currentState_load_reg_463 = ap_const_lv1_1) and (i_data_data_V_0_vld_out = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(i_data_data_V_0_vld_out, o_data_data_V_1_ack_in, o_data_last_V_1_ack_in, ap_enable_reg_pp0_iter1, currentState_load_reg_463, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_block_state3_io, ap_block_state4_io)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and ((o_data_last_V_1_ack_in = ap_const_logic_0) or (o_data_data_V_1_ack_in = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state4_io))) or ((ap_const_boolean_1 = ap_block_state3_io) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((currentState_load_reg_463 = ap_const_lv1_1) and (i_data_data_V_0_vld_out = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state2_pp0_stage0_iter1_assign_proc : process(i_data_data_V_0_vld_out, currentState_load_reg_463)
    begin
                ap_block_state2_pp0_stage0_iter1 <= ((currentState_load_reg_463 = ap_const_lv1_1) and (i_data_data_V_0_vld_out = ap_const_logic_0));
    end process;


    ap_block_state3_io_assign_proc : process(o_data_data_V_1_ack_in, ap_reg_pp0_iter1_currentState_load_reg_463)
    begin
                ap_block_state3_io <= ((ap_reg_pp0_iter1_currentState_load_reg_463 = ap_const_lv1_1) and (o_data_data_V_1_ack_in = ap_const_logic_0));
    end process;

        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_io_assign_proc : process(o_data_data_V_1_ack_in, ap_reg_pp0_iter2_currentState_load_reg_463)
    begin
                ap_block_state4_io <= ((ap_reg_pp0_iter2_currentState_load_reg_463 = ap_const_lv1_1) and (o_data_data_V_1_ack_in = ap_const_logic_0));
    end process;


    ap_block_state4_pp0_stage0_iter3_assign_proc : process(o_data_data_V_1_ack_in, o_data_last_V_1_ack_in)
    begin
                ap_block_state4_pp0_stage0_iter3 <= ((o_data_last_V_1_ack_in = ap_const_logic_0) or (o_data_data_V_1_ack_in = ap_const_logic_0));
    end process;


    ap_condition_365_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
                ap_condition_365 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_367_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
                ap_condition_367 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_const_logic_1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_p_Val2_1_reg_116 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_p_Val2_2_reg_127 <= "XXXXXXXXXXXXXXXX";
    ap_reset_idle_pp0 <= ap_const_logic_0;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    cond_i_fu_148_p2 <= "1" when (phaseClass_V = ap_const_lv4_8) else "0";
    currentState_load_load_fu_144_p1 <= currentState;

    i_data_TDATA_blk_n_assign_proc : process(i_data_data_V_0_state, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, currentState_load_reg_463)
    begin
        if (((currentState_load_reg_463 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            i_data_TDATA_blk_n <= i_data_data_V_0_state(0);
        else 
            i_data_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    i_data_TREADY <= i_data_last_V_0_state(1);
    i_data_data_V_0_ack_in <= i_data_data_V_0_state(1);

    i_data_data_V_0_ack_out_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, currentState_load_reg_463, ap_block_pp0_stage0_11001)
    begin
        if (((currentState_load_reg_463 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            i_data_data_V_0_ack_out <= ap_const_logic_1;
        else 
            i_data_data_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    i_data_data_V_0_data_out_assign_proc : process(i_data_data_V_0_payload_A, i_data_data_V_0_payload_B, i_data_data_V_0_sel)
    begin
        if ((i_data_data_V_0_sel = ap_const_logic_1)) then 
            i_data_data_V_0_data_out <= i_data_data_V_0_payload_B;
        else 
            i_data_data_V_0_data_out <= i_data_data_V_0_payload_A;
        end if; 
    end process;

    i_data_data_V_0_load_A <= (i_data_data_V_0_state_cmp_full and not(i_data_data_V_0_sel_wr));
    i_data_data_V_0_load_B <= (i_data_data_V_0_state_cmp_full and i_data_data_V_0_sel_wr);
    i_data_data_V_0_sel <= i_data_data_V_0_sel_rd;
    i_data_data_V_0_state_cmp_full <= '0' when (i_data_data_V_0_state = ap_const_lv2_1) else '1';
    i_data_data_V_0_vld_in <= i_data_TVALID;
    i_data_data_V_0_vld_out <= i_data_data_V_0_state(0);
    i_data_last_V_0_ack_in <= i_data_last_V_0_state(1);

    i_data_last_V_0_ack_out_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, currentState_load_reg_463, ap_block_pp0_stage0_11001)
    begin
        if (((currentState_load_reg_463 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            i_data_last_V_0_ack_out <= ap_const_logic_1;
        else 
            i_data_last_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    i_data_last_V_0_data_out_assign_proc : process(i_data_last_V_0_payload_A, i_data_last_V_0_payload_B, i_data_last_V_0_sel)
    begin
        if ((i_data_last_V_0_sel = ap_const_logic_1)) then 
            i_data_last_V_0_data_out <= i_data_last_V_0_payload_B;
        else 
            i_data_last_V_0_data_out <= i_data_last_V_0_payload_A;
        end if; 
    end process;

    i_data_last_V_0_load_A <= (i_data_last_V_0_state_cmp_full and not(i_data_last_V_0_sel_wr));
    i_data_last_V_0_load_B <= (i_data_last_V_0_state_cmp_full and i_data_last_V_0_sel_wr);
    i_data_last_V_0_sel <= i_data_last_V_0_sel_rd;
    i_data_last_V_0_state_cmp_full <= '0' when (i_data_last_V_0_state = ap_const_lv2_1) else '1';
    i_data_last_V_0_vld_in <= i_data_TVALID;
    i_data_last_V_0_vld_out <= i_data_last_V_0_state(0);
    o_data_TDATA <= o_data_data_V_1_data_out;

    o_data_TDATA_blk_n_assign_proc : process(o_data_data_V_1_state, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, ap_reg_pp0_iter1_currentState_load_reg_463, ap_enable_reg_pp0_iter3, ap_reg_pp0_iter2_currentState_load_reg_463)
    begin
        if ((((ap_reg_pp0_iter2_currentState_load_reg_463 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_reg_pp0_iter1_currentState_load_reg_463 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            o_data_TDATA_blk_n <= o_data_data_V_1_state(1);
        else 
            o_data_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    o_data_TLAST <= o_data_last_V_1_data_out;
    o_data_TVALID <= o_data_last_V_1_state(0);
    o_data_data_V_1_ack_in <= o_data_data_V_1_state(1);
    o_data_data_V_1_ack_out <= o_data_TREADY;

    o_data_data_V_1_data_out_assign_proc : process(o_data_data_V_1_payload_A, o_data_data_V_1_payload_B, o_data_data_V_1_sel)
    begin
        if ((o_data_data_V_1_sel = ap_const_logic_1)) then 
            o_data_data_V_1_data_out <= o_data_data_V_1_payload_B;
        else 
            o_data_data_V_1_data_out <= o_data_data_V_1_payload_A;
        end if; 
    end process;

    o_data_data_V_1_load_A <= (o_data_data_V_1_state_cmp_full and not(o_data_data_V_1_sel_wr));
    o_data_data_V_1_load_B <= (o_data_data_V_1_state_cmp_full and o_data_data_V_1_sel_wr);
    o_data_data_V_1_sel <= o_data_data_V_1_sel_rd;
    o_data_data_V_1_state_cmp_full <= '0' when (o_data_data_V_1_state = ap_const_lv2_1) else '1';

    o_data_data_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter2, ap_reg_pp0_iter1_currentState_load_reg_463, ap_block_pp0_stage0_11001)
    begin
        if (((ap_reg_pp0_iter1_currentState_load_reg_463 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            o_data_data_V_1_vld_in <= ap_const_logic_1;
        else 
            o_data_data_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    o_data_data_V_1_vld_out <= o_data_data_V_1_state(0);
        o_data_data_V_tmp_fu_432_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(res_V_fu_424_p3),32));

    o_data_last_V_1_ack_in <= o_data_last_V_1_state(1);
    o_data_last_V_1_ack_out <= o_data_TREADY;

    o_data_last_V_1_data_out_assign_proc : process(o_data_last_V_1_payload_A, o_data_last_V_1_payload_B, o_data_last_V_1_sel)
    begin
        if ((o_data_last_V_1_sel = ap_const_logic_1)) then 
            o_data_last_V_1_data_out <= o_data_last_V_1_payload_B;
        else 
            o_data_last_V_1_data_out <= o_data_last_V_1_payload_A;
        end if; 
    end process;

    o_data_last_V_1_load_A <= (o_data_last_V_1_state_cmp_full and not(o_data_last_V_1_sel_wr));
    o_data_last_V_1_load_B <= (o_data_last_V_1_state_cmp_full and o_data_last_V_1_sel_wr);
    o_data_last_V_1_sel <= o_data_last_V_1_sel_rd;
    o_data_last_V_1_state_cmp_full <= '0' when (o_data_last_V_1_state = ap_const_lv2_1) else '1';

    o_data_last_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter2, ap_reg_pp0_iter1_currentState_load_reg_463, ap_block_pp0_stage0_11001)
    begin
        if (((ap_reg_pp0_iter1_currentState_load_reg_463 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            o_data_last_V_1_vld_in <= ap_const_logic_1;
        else 
            o_data_last_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    o_data_last_V_1_vld_out <= o_data_last_V_1_state(0);
    p_Val2_2_4_i_fu_400_p2 <= std_logic_vector(unsigned(tmp9_fu_394_p2) + unsigned(tmp6_fu_376_p2));
    p_Val2_5_1_i_fu_358_p2 <= std_logic_vector(unsigned(tmp3_fu_352_p2) + unsigned(tmp_fu_334_p2));
    p_Val2_8_i_fu_418_p2 <= std_logic_vector(unsigned(ap_phi_reg_pp0_iter2_p_Val2_2_reg_127) - unsigned(ap_phi_reg_pp0_iter2_p_Val2_1_reg_116));
    p_Val2_9_i_fu_412_p2 <= std_logic_vector(unsigned(ap_phi_reg_pp0_iter2_p_Val2_1_reg_116) - unsigned(ap_phi_reg_pp0_iter2_p_Val2_2_reg_127));
    res_V_fu_424_p3 <= 
        p_Val2_8_i_fu_418_p2 when (tmp_i_fu_406_p2(0) = '1') else 
        p_Val2_9_i_fu_412_p2;
    start_V_read_read_fu_92_p2 <= start_V;
    tmp10_fu_382_p2 <= std_logic_vector(unsigned(cor_phaseClass0_V_2) + unsigned(cor_phaseClass0_V_1));
    tmp11_fu_388_p2 <= std_logic_vector(unsigned(cor_phaseClass0_V_0) + unsigned(tmp_1_fu_162_p1));
    tmp1_fu_322_p2 <= std_logic_vector(unsigned(cor_phaseClass0_V_11) + unsigned(cor_phaseClass0_V_13));
    tmp2_fu_328_p2 <= std_logic_vector(unsigned(cor_phaseClass0_V_10) + unsigned(cor_phaseClass0_V_8));
    tmp3_fu_352_p2 <= std_logic_vector(unsigned(tmp5_fu_346_p2) + unsigned(tmp4_fu_340_p2));
    tmp4_fu_340_p2 <= std_logic_vector(unsigned(cor_phaseClass0_V_6) + unsigned(cor_phaseClass0_V_5));
    tmp5_fu_346_p2 <= std_logic_vector(unsigned(cor_phaseClass0_V_4) + unsigned(cor_phaseClass0_V_3));
    tmp6_fu_376_p2 <= std_logic_vector(unsigned(tmp8_fu_370_p2) + unsigned(tmp7_fu_364_p2));
    tmp7_fu_364_p2 <= std_logic_vector(unsigned(cor_phaseClass0_V_12) + unsigned(cor_phaseClass0_V_14));
    tmp8_fu_370_p2 <= std_logic_vector(unsigned(cor_phaseClass0_V_9) + unsigned(cor_phaseClass0_V_7));
    tmp9_fu_394_p2 <= std_logic_vector(unsigned(tmp11_fu_388_p2) + unsigned(tmp10_fu_382_p2));
    tmp_1_fu_162_p1 <= i_data_data_V_0_data_out(16 - 1 downto 0);
    tmp_2_fu_447_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(loadCount_V));
    tmp_fu_334_p2 <= std_logic_vector(unsigned(tmp2_fu_328_p2) + unsigned(tmp1_fu_322_p2));
    tmp_i_fu_406_p2 <= "1" when (signed(ap_phi_reg_pp0_iter2_p_Val2_2_reg_127) > signed(ap_phi_reg_pp0_iter2_p_Val2_1_reg_116)) else "0";
end behav;
