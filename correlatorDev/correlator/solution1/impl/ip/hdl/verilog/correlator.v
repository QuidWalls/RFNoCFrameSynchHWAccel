// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="correlator,hls_ip_2017_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7k160tfbg484-1,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=3.769500,HLS_SYN_LAT=4,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=2,HLS_SYN_FF=2813,HLS_SYN_LUT=3091}" *)

module correlator (
        ap_clk,
        ap_rst_n,
        i_data_TDATA,
        i_data_TVALID,
        i_data_TREADY,
        i_data_TLAST,
        o_data_TDATA,
        o_data_TVALID,
        o_data_TREADY,
        o_data_TLAST,
        start_V,
        pnseq_in_V_V,
        pnseq_in_V_V_ap_vld,
        pnseq_in_V_V_ap_ack,
        pnseq_len_V
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst_n;
input  [31:0] i_data_TDATA;
input   i_data_TVALID;
output   i_data_TREADY;
input  [0:0] i_data_TLAST;
output  [31:0] o_data_TDATA;
output   o_data_TVALID;
input   o_data_TREADY;
output  [0:0] o_data_TLAST;
input  [0:0] start_V;
input  [0:0] pnseq_in_V_V;
input   pnseq_in_V_V_ap_vld;
output   pnseq_in_V_V_ap_ack;
input  [9:0] pnseq_len_V;

reg i_data_TREADY;
reg pnseq_in_V_V_ap_ack;

reg    ap_rst_n_inv;
reg   [31:0] o_data_V_data_V_1_data_out;
reg    o_data_V_data_V_1_vld_in;
wire    o_data_V_data_V_1_vld_out;
wire    o_data_V_data_V_1_ack_in;
wire    o_data_V_data_V_1_ack_out;
reg   [31:0] o_data_V_data_V_1_payload_A;
reg   [31:0] o_data_V_data_V_1_payload_B;
reg    o_data_V_data_V_1_sel_rd;
reg    o_data_V_data_V_1_sel_wr;
wire    o_data_V_data_V_1_sel;
wire    o_data_V_data_V_1_load_A;
wire    o_data_V_data_V_1_load_B;
reg   [1:0] o_data_V_data_V_1_state;
wire    o_data_V_data_V_1_state_cmp_full;
reg   [0:0] o_data_V_last_V_1_data_out;
reg    o_data_V_last_V_1_vld_in;
wire    o_data_V_last_V_1_vld_out;
wire    o_data_V_last_V_1_ack_in;
wire    o_data_V_last_V_1_ack_out;
reg   [0:0] o_data_V_last_V_1_payload_A;
reg   [0:0] o_data_V_last_V_1_payload_B;
reg    o_data_V_last_V_1_sel_rd;
reg    o_data_V_last_V_1_sel_wr;
wire    o_data_V_last_V_1_sel;
wire    o_data_V_last_V_1_load_A;
wire    o_data_V_last_V_1_load_B;
reg   [1:0] o_data_V_last_V_1_state;
wire    o_data_V_last_V_1_state_cmp_full;
reg   [0:0] currentwrState;
reg   [23:0] data_valid_reg_V;
reg   [9:0] pnseq_len_reg_V;
reg   [9:0] out_sample_cnt_V;
reg   [40:0] sq_sum_V;
reg   [39:0] sq_reg_i_V;
reg   [39:0] sq_reg_q_V;
reg   [19:0] sum_reg_i_V;
reg   [19:0] sum_reg_q_V;
reg   [18:0] sum3_reg_i_V_0;
reg   [18:0] sum3_reg_i_V_1;
reg   [18:0] sum3_reg_q_V_0;
reg   [18:0] sum3_reg_q_V_1;
reg   [17:0] sum2_reg_i_V_0;
reg   [17:0] sum2_reg_i_V_1;
reg   [17:0] sum2_reg_q_V_0;
reg   [17:0] sum2_reg_q_V_1;
reg   [17:0] sum2_reg_i_V_2;
reg   [17:0] sum2_reg_i_V_3;
reg   [17:0] sum2_reg_q_V_2;
reg   [17:0] sum2_reg_q_V_3;
reg   [16:0] sum1_reg_i_V_0;
reg   [16:0] sum1_reg_i_V_1;
reg   [16:0] sum1_reg_q_V_0;
reg   [16:0] sum1_reg_q_V_1;
reg   [16:0] sum1_reg_i_V_2;
reg   [16:0] sum1_reg_i_V_3;
reg   [16:0] sum1_reg_q_V_2;
reg   [16:0] sum1_reg_q_V_3;
reg   [16:0] sum1_reg_i_V_4;
reg   [16:0] sum1_reg_i_V_5;
reg   [16:0] sum1_reg_q_V_4;
reg   [16:0] sum1_reg_q_V_5;
reg   [16:0] sum1_reg_i_V_6;
reg   [16:0] sum1_reg_i_V_7;
reg   [16:0] sum1_reg_q_V_6;
reg   [16:0] sum1_reg_q_V_7;
reg   [15:0] adder_in_reg_i_V_0;
reg   [15:0] adder_in_reg_i_V_1;
reg   [15:0] adder_in_reg_q_V_0;
reg   [15:0] adder_in_reg_q_V_1;
reg   [15:0] adder_in_reg_i_V_2;
reg   [15:0] adder_in_reg_i_V_3;
reg   [15:0] adder_in_reg_q_V_2;
reg   [15:0] adder_in_reg_q_V_3;
reg   [15:0] adder_in_reg_i_V_4;
reg   [15:0] adder_in_reg_i_V_5;
reg   [15:0] adder_in_reg_q_V_4;
reg   [15:0] adder_in_reg_q_V_5;
reg   [15:0] adder_in_reg_i_V_6;
reg   [15:0] adder_in_reg_i_V_7;
reg   [15:0] adder_in_reg_q_V_6;
reg   [15:0] adder_in_reg_q_V_7;
reg   [15:0] adder_in_reg_i_V_8;
reg   [15:0] adder_in_reg_i_V_9;
reg   [15:0] adder_in_reg_q_V_8;
reg   [15:0] adder_in_reg_q_V_9;
reg   [15:0] adder_in_reg_i_V_10;
reg   [15:0] adder_in_reg_i_V_11;
reg   [15:0] adder_in_reg_q_V_10;
reg   [15:0] adder_in_reg_q_V_11;
reg   [15:0] adder_in_reg_i_V_12;
reg   [15:0] adder_in_reg_i_V_13;
reg   [15:0] adder_in_reg_q_V_12;
reg   [15:0] adder_in_reg_q_V_13;
reg   [15:0] adder_in_reg_i_V_14;
reg   [15:0] adder_in_reg_i_V_15;
reg   [15:0] adder_in_reg_q_V_14;
reg   [15:0] adder_in_reg_q_V_15;
reg   [15:0] product_reg_i_V_0;
reg   [15:0] product_reg_i_V_1;
reg   [15:0] product_reg_q_V_0;
reg   [15:0] product_reg_i_V_2;
reg   [15:0] product_reg_q_V_1;
reg   [15:0] product_reg_i_V_3;
reg   [15:0] product_reg_q_V_2;
reg   [15:0] product_reg_i_V_4;
reg   [15:0] product_reg_q_V_3;
reg   [15:0] product_reg_i_V_5;
reg   [15:0] product_reg_q_V_4;
reg   [15:0] product_reg_i_V_6;
reg   [15:0] product_reg_q_V_5;
reg   [15:0] product_reg_i_V_7;
reg   [15:0] product_reg_q_V_6;
reg   [15:0] product_reg_i_V_8;
reg   [15:0] product_reg_q_V_7;
reg   [15:0] product_reg_i_V_9;
reg   [15:0] product_reg_q_V_8;
reg   [15:0] product_reg_i_V_10;
reg   [15:0] product_reg_q_V_9;
reg   [15:0] product_reg_i_V_11;
reg   [15:0] product_reg_q_V_10;
reg   [15:0] product_reg_i_V_12;
reg   [15:0] product_reg_q_V_11;
reg   [15:0] product_reg_i_V_13;
reg   [15:0] product_reg_q_V_12;
reg   [15:0] product_reg_i_V_14;
reg   [15:0] product_reg_q_V_13;
reg   [15:0] product_reg_i_V_15;
reg   [15:0] product_reg_q_V_14;
reg   [0:0] pn_seq_V_0;
reg   [15:0] data_reg_i_V_0;
reg   [15:0] data_reg_q_V_0;
reg   [15:0] product_reg_q_V_15;
reg   [0:0] pn_seq_V_1;
reg   [15:0] data_reg_i_V_1;
reg   [15:0] data_reg_q_V_1;
reg   [0:0] pn_seq_V_2;
reg   [15:0] data_reg_i_V_2;
reg   [15:0] data_reg_q_V_2;
reg   [0:0] pn_seq_V_3;
reg   [15:0] data_reg_i_V_3;
reg   [15:0] data_reg_q_V_3;
reg   [0:0] pn_seq_V_4;
reg   [15:0] data_reg_i_V_4;
reg   [15:0] data_reg_q_V_4;
reg   [0:0] pn_seq_V_5;
reg   [15:0] data_reg_i_V_5;
reg   [15:0] data_reg_q_V_5;
reg   [0:0] pn_seq_V_6;
reg   [15:0] data_reg_i_V_6;
reg   [15:0] data_reg_q_V_6;
reg   [0:0] pn_seq_V_7;
reg   [15:0] data_reg_i_V_7;
reg   [15:0] data_reg_q_V_7;
reg   [0:0] pn_seq_V_8;
reg   [15:0] data_reg_i_V_8;
reg   [15:0] data_reg_q_V_8;
reg   [0:0] pn_seq_V_9;
reg   [15:0] data_reg_i_V_9;
reg   [15:0] data_reg_q_V_9;
reg   [0:0] pn_seq_V_10;
reg   [15:0] data_reg_i_V_10;
reg   [15:0] data_reg_q_V_10;
reg   [0:0] pn_seq_V_11;
reg   [15:0] data_reg_i_V_11;
reg   [15:0] data_reg_q_V_11;
reg   [0:0] pn_seq_V_12;
reg   [15:0] data_reg_i_V_12;
reg   [15:0] data_reg_q_V_12;
reg   [0:0] pn_seq_V_13;
reg   [15:0] data_reg_i_V_13;
reg   [15:0] data_reg_q_V_13;
reg   [0:0] pn_seq_V_14;
reg   [15:0] data_reg_i_V_14;
reg   [15:0] data_reg_q_V_14;
reg   [0:0] pn_seq_V_15;
reg   [15:0] data_reg_i_V_15;
reg   [15:0] data_reg_q_V_15;
reg   [1:0] currentState;
reg   [9:0] load_cnt_V;
reg    i_data_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_pp0_stage0;
wire   [1:0] currentState_load_load_fu_3079_p1;
wire   [0:0] tmp_nbreadreq_fu_488_p4;
reg    o_data_TDATA_blk_n;
reg    ap_enable_reg_pp0_iter3;
reg   [0:0] currentwrState_load_reg_3552;
reg   [0:0] ap_reg_pp0_iter2_currentwrState_load_reg_3552;
reg    ap_enable_reg_pp0_iter4;
reg   [0:0] ap_reg_pp0_iter3_currentwrState_load_reg_3552;
reg    pnseq_in_V_V_blk_n;
wire   [0:0] start_V_read_read_fu_482_p2;
reg    ap_predicate_op606_read_state1;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
reg    ap_block_state4_io;
reg    ap_block_state5_pp0_stage0_iter4;
reg    ap_block_state5_io;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] currentwrState_load_load_fu_850_p1;
reg   [0:0] ap_reg_pp0_iter1_currentwrState_load_reg_3552;
wire   [0:0] grp_fu_843_p3;
wire   [0:0] tmp_last_V_fu_887_p2;
reg   [0:0] tmp_last_V_reg_3560;
reg   [0:0] ap_reg_pp0_iter1_tmp_last_V_reg_3560;
reg   [0:0] ap_reg_pp0_iter2_tmp_last_V_reg_3560;
wire  signed [39:0] lhs_V_10_cast_fu_923_p1;
wire  signed [39:0] lhs_V_11_cast_fu_937_p1;
wire   [8:0] tmp_14_fu_3313_p1;
wire  signed [31:0] out_sample_data_V_fu_3503_p1;
reg    ap_enable_reg_pp0_iter1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter2;
reg   [15:0] ap_phi_mux_storemerge3_phi_fu_525_p4;
wire   [15:0] ap_phi_reg_pp0_iter0_storemerge3_reg_522;
wire   [0:0] tmp_2_fu_1787_p2;
reg   [15:0] ap_phi_mux_storemerge4_phi_fu_535_p4;
wire   [15:0] ap_phi_reg_pp0_iter0_storemerge4_reg_532;
wire   [0:0] icmp_fu_1830_p2;
reg   [15:0] ap_phi_mux_storemerge5_phi_fu_545_p4;
wire   [15:0] ap_phi_reg_pp0_iter0_storemerge5_reg_542;
wire   [0:0] tmp_26_2_fu_1863_p2;
reg   [15:0] ap_phi_mux_storemerge6_phi_fu_555_p4;
wire   [15:0] ap_phi_reg_pp0_iter0_storemerge6_reg_552;
wire   [0:0] icmp6_fu_1906_p2;
reg   [15:0] ap_phi_mux_storemerge7_phi_fu_565_p4;
wire   [15:0] ap_phi_reg_pp0_iter0_storemerge7_reg_562;
wire   [0:0] tmp_26_4_fu_1939_p2;
reg   [15:0] ap_phi_mux_storemerge8_phi_fu_575_p4;
wire   [15:0] ap_phi_reg_pp0_iter0_storemerge8_reg_572;
wire   [0:0] tmp_26_5_fu_1972_p2;
reg   [15:0] ap_phi_mux_storemerge9_phi_fu_585_p4;
wire   [15:0] ap_phi_reg_pp0_iter0_storemerge9_reg_582;
wire   [0:0] tmp_26_6_fu_2005_p2;
reg   [15:0] ap_phi_mux_storemerge2_phi_fu_595_p4;
wire   [15:0] ap_phi_reg_pp0_iter0_storemerge2_reg_592;
wire   [0:0] icmp9_fu_2048_p2;
reg   [15:0] ap_phi_mux_storemerge10_phi_fu_605_p4;
wire   [15:0] ap_phi_reg_pp0_iter0_storemerge10_reg_602;
wire   [0:0] tmp_26_8_fu_2081_p2;
reg   [15:0] ap_phi_mux_storemerge11_phi_fu_615_p4;
wire   [15:0] ap_phi_reg_pp0_iter0_storemerge11_reg_612;
wire   [0:0] tmp_26_9_fu_2114_p2;
reg   [15:0] ap_phi_mux_storemerge12_phi_fu_625_p4;
wire   [15:0] ap_phi_reg_pp0_iter0_storemerge12_reg_622;
wire   [0:0] tmp_26_s_fu_2147_p2;
reg   [15:0] ap_phi_mux_storemerge13_phi_fu_635_p4;
wire   [15:0] ap_phi_reg_pp0_iter0_storemerge13_reg_632;
wire   [0:0] tmp_26_1_fu_2180_p2;
reg   [15:0] ap_phi_mux_storemerge14_phi_fu_645_p4;
wire   [15:0] ap_phi_reg_pp0_iter0_storemerge14_reg_642;
wire   [0:0] tmp_26_3_fu_2213_p2;
reg   [15:0] ap_phi_mux_storemerge15_phi_fu_655_p4;
wire   [15:0] ap_phi_reg_pp0_iter0_storemerge15_reg_652;
wire   [0:0] tmp_26_7_fu_2246_p2;
reg   [15:0] ap_phi_mux_storemerge16_phi_fu_665_p4;
wire   [15:0] ap_phi_reg_pp0_iter0_storemerge16_reg_662;
wire   [0:0] tmp_26_10_fu_2279_p2;
reg   [15:0] ap_phi_mux_storemerge17_phi_fu_675_p4;
wire   [15:0] ap_phi_reg_pp0_iter0_storemerge17_reg_672;
wire   [0:0] icmp1_fu_2322_p2;
reg   [15:0] ap_phi_mux_storemerge18_phi_fu_685_p4;
wire   [15:0] tmp_4_fu_2386_p2;
wire   [15:0] ap_phi_reg_pp0_iter0_storemerge18_reg_682;
wire   [0:0] pn_seq_V_0_load_load_fu_2355_p1;
reg   [15:0] ap_phi_mux_storemerge19_phi_fu_694_p4;
wire   [15:0] ap_phi_reg_pp0_iter0_storemerge19_reg_691;
wire   [0:0] pn_seq_V_1_load_load_fu_2399_p1;
wire   [15:0] tmp_35_1_fu_2430_p2;
reg   [15:0] ap_phi_mux_storemerge20_phi_fu_703_p4;
wire   [15:0] tmp_35_2_fu_2474_p2;
wire   [15:0] ap_phi_reg_pp0_iter0_storemerge20_reg_700;
wire   [0:0] pn_seq_V_2_load_load_fu_2443_p1;
reg   [15:0] ap_phi_mux_storemerge21_phi_fu_712_p4;
wire   [15:0] ap_phi_reg_pp0_iter0_storemerge21_reg_709;
wire   [0:0] pn_seq_V_3_load_load_fu_2487_p1;
wire   [15:0] tmp_35_3_fu_2518_p2;
reg   [15:0] ap_phi_mux_storemerge22_phi_fu_721_p4;
wire   [15:0] tmp_35_4_fu_2562_p2;
wire   [15:0] ap_phi_reg_pp0_iter0_storemerge22_reg_718;
wire   [0:0] pn_seq_V_4_load_load_fu_2531_p1;
reg   [15:0] ap_phi_mux_storemerge23_phi_fu_730_p4;
wire   [15:0] ap_phi_reg_pp0_iter0_storemerge23_reg_727;
wire   [0:0] pn_seq_V_5_load_load_fu_2575_p1;
wire   [15:0] tmp_35_5_fu_2606_p2;
reg   [15:0] ap_phi_mux_storemerge24_phi_fu_739_p4;
wire   [15:0] tmp_35_6_fu_2650_p2;
wire   [15:0] ap_phi_reg_pp0_iter0_storemerge24_reg_736;
wire   [0:0] pn_seq_V_6_load_load_fu_2619_p1;
reg   [15:0] ap_phi_mux_storemerge25_phi_fu_748_p4;
wire   [15:0] ap_phi_reg_pp0_iter0_storemerge25_reg_745;
wire   [0:0] pn_seq_V_7_load_load_fu_2663_p1;
wire   [15:0] tmp_35_7_fu_2694_p2;
reg   [15:0] ap_phi_mux_storemerge26_phi_fu_757_p4;
wire   [15:0] tmp_35_8_fu_2738_p2;
wire   [15:0] ap_phi_reg_pp0_iter0_storemerge26_reg_754;
wire   [0:0] pn_seq_V_8_load_load_fu_2707_p1;
reg   [15:0] ap_phi_mux_storemerge27_phi_fu_766_p4;
wire   [15:0] ap_phi_reg_pp0_iter0_storemerge27_reg_763;
wire   [0:0] pn_seq_V_9_load_load_fu_2751_p1;
wire   [15:0] tmp_35_9_fu_2782_p2;
reg   [15:0] ap_phi_mux_storemerge28_phi_fu_775_p4;
wire   [15:0] tmp_35_s_fu_2826_p2;
wire   [15:0] ap_phi_reg_pp0_iter0_storemerge28_reg_772;
wire   [0:0] pn_seq_V_10_load_load_fu_2795_p1;
reg   [15:0] ap_phi_mux_storemerge29_phi_fu_784_p4;
wire   [15:0] ap_phi_reg_pp0_iter0_storemerge29_reg_781;
wire   [0:0] pn_seq_V_11_load_load_fu_2839_p1;
wire   [15:0] tmp_35_10_fu_2870_p2;
reg   [15:0] ap_phi_mux_storemerge30_phi_fu_793_p4;
wire   [15:0] tmp_35_11_fu_2914_p2;
wire   [15:0] ap_phi_reg_pp0_iter0_storemerge30_reg_790;
wire   [0:0] pn_seq_V_12_load_load_fu_2883_p1;
reg   [15:0] ap_phi_mux_storemerge31_phi_fu_802_p4;
wire   [15:0] ap_phi_reg_pp0_iter0_storemerge31_reg_799;
wire   [0:0] pn_seq_V_13_load_load_fu_2927_p1;
wire   [15:0] tmp_35_12_fu_2958_p2;
reg   [15:0] ap_phi_mux_storemerge32_phi_fu_811_p4;
wire   [15:0] tmp_35_13_fu_3002_p2;
wire   [15:0] ap_phi_reg_pp0_iter0_storemerge32_reg_808;
wire   [0:0] pn_seq_V_14_load_load_fu_2971_p1;
reg   [15:0] ap_phi_mux_storemerge33_phi_fu_820_p4;
wire   [15:0] ap_phi_reg_pp0_iter0_storemerge33_reg_817;
wire   [0:0] pn_seq_V_15_load_load_fu_3015_p1;
wire   [15:0] tmp_35_14_fu_3046_p2;
reg   [23:0] ap_phi_mux_data_valid_reg_V_new_phi_fu_829_p12;
wire   [23:0] p_Result_2_fu_3063_p5;
wire   [23:0] ap_phi_reg_pp0_iter0_data_valid_reg_V_new_reg_826;
wire   [23:0] p_Result_s_fu_3304_p3;
wire   [23:0] p_Result_1_fu_3087_p2;
wire   [9:0] storemerge_fu_899_p3;
wire   [40:0] r_V_1_fu_3524_p2;
wire   [39:0] grp_fu_927_p2;
wire   [39:0] grp_fu_941_p2;
wire   [19:0] r_V_4_fu_963_p2;
wire   [19:0] r_V_5_fu_991_p2;
wire   [18:0] r_V_6_fu_1019_p2;
wire   [18:0] r_V_6_1_fu_1075_p2;
wire   [18:0] r_V_7_fu_1047_p2;
wire   [18:0] r_V_7_1_fu_1103_p2;
wire   [17:0] r_V_8_fu_1131_p2;
wire   [17:0] r_V_8_1_fu_1187_p2;
wire   [17:0] r_V_9_fu_1159_p2;
wire   [17:0] r_V_9_1_fu_1215_p2;
wire   [17:0] r_V_8_2_fu_1243_p2;
wire   [17:0] r_V_8_3_fu_1299_p2;
wire   [17:0] r_V_9_2_fu_1271_p2;
wire   [17:0] r_V_9_3_fu_1327_p2;
wire   [16:0] r_V_s_fu_1355_p2;
wire   [16:0] r_V_10_1_fu_1411_p2;
wire   [16:0] r_V_10_fu_1383_p2;
wire   [16:0] r_V_11_1_fu_1439_p2;
wire   [16:0] r_V_10_2_fu_1467_p2;
wire   [16:0] r_V_10_3_fu_1523_p2;
wire   [16:0] r_V_11_2_fu_1495_p2;
wire   [16:0] r_V_11_3_fu_1551_p2;
wire   [16:0] r_V_10_4_fu_1579_p2;
wire   [16:0] r_V_10_5_fu_1635_p2;
wire   [16:0] r_V_11_4_fu_1607_p2;
wire   [16:0] r_V_11_5_fu_1663_p2;
wire   [16:0] r_V_10_6_fu_1691_p2;
wire   [16:0] r_V_10_7_fu_1747_p2;
wire   [16:0] r_V_11_6_fu_1719_p2;
wire   [16:0] r_V_11_7_fu_1775_p2;
wire   [15:0] tmp_5_fu_2368_p2;
wire   [15:0] tmp_36_1_fu_2412_p2;
wire   [15:0] tmp_36_2_fu_2456_p2;
wire   [15:0] tmp_36_3_fu_2500_p2;
wire   [15:0] tmp_36_4_fu_2544_p2;
wire   [15:0] tmp_36_5_fu_2588_p2;
wire   [15:0] tmp_36_6_fu_2632_p2;
wire   [15:0] tmp_36_7_fu_2676_p2;
wire   [15:0] tmp_36_8_fu_2720_p2;
wire   [15:0] tmp_36_9_fu_2764_p2;
wire   [15:0] tmp_36_s_fu_2808_p2;
wire   [15:0] tmp_36_10_fu_2852_p2;
wire   [15:0] tmp_36_11_fu_2896_p2;
wire   [15:0] tmp_36_12_fu_2940_p2;
wire   [15:0] tmp_36_13_fu_2984_p2;
wire   [15:0] tmp_36_14_fu_3028_p2;
wire   [15:0] tmp_15_fu_3278_p1;
wire   [1:0] storemerge34_fu_3419_p3;
wire   [9:0] storemerge1_fu_3441_p2;
wire   [9:0] tmp_1_fu_3459_p2;
reg    ap_block_pp0_stage0_01001;
wire   [10:0] lhs_V_cast_fu_869_p1;
wire   [10:0] tmp_8_cast_fu_883_p1;
wire   [10:0] r_V_fu_873_p2;
wire   [9:0] tmp_s_fu_893_p2;
wire  signed [19:0] grp_fu_927_p0;
wire  signed [19:0] grp_fu_927_p1;
wire  signed [19:0] grp_fu_941_p0;
wire  signed [19:0] grp_fu_941_p1;
wire  signed [19:0] lhs_V_fu_951_p1;
wire  signed [19:0] rhs_V_fu_959_p1;
wire  signed [19:0] lhs_V_1_fu_979_p1;
wire  signed [19:0] rhs_V_1_fu_987_p1;
wire  signed [18:0] rhs_V_5_fu_1015_p1;
wire  signed [18:0] lhs_V_6_fu_1007_p1;
wire  signed [18:0] rhs_V_6_fu_1043_p1;
wire  signed [18:0] lhs_V_7_fu_1035_p1;
wire  signed [18:0] rhs_V_5_1_fu_1071_p1;
wire  signed [18:0] lhs_V_6_1_fu_1063_p1;
wire  signed [18:0] rhs_V_6_1_fu_1099_p1;
wire  signed [18:0] lhs_V_7_1_fu_1091_p1;
wire  signed [17:0] rhs_V_7_fu_1127_p1;
wire  signed [17:0] lhs_V_8_fu_1119_p1;
wire  signed [17:0] rhs_V_8_fu_1155_p1;
wire  signed [17:0] lhs_V_9_fu_1147_p1;
wire  signed [17:0] rhs_V_7_1_fu_1183_p1;
wire  signed [17:0] lhs_V_8_1_fu_1175_p1;
wire  signed [17:0] rhs_V_8_1_fu_1211_p1;
wire  signed [17:0] lhs_V_9_1_fu_1203_p1;
wire  signed [17:0] rhs_V_7_2_fu_1239_p1;
wire  signed [17:0] lhs_V_8_2_fu_1231_p1;
wire  signed [17:0] rhs_V_8_2_fu_1267_p1;
wire  signed [17:0] lhs_V_9_2_fu_1259_p1;
wire  signed [17:0] rhs_V_7_3_fu_1295_p1;
wire  signed [17:0] lhs_V_8_3_fu_1287_p1;
wire  signed [17:0] rhs_V_8_3_fu_1323_p1;
wire  signed [17:0] lhs_V_9_3_fu_1315_p1;
wire  signed [16:0] rhs_V_9_fu_1351_p1;
wire  signed [16:0] lhs_V_s_fu_1343_p1;
wire  signed [16:0] rhs_V_s_fu_1379_p1;
wire  signed [16:0] lhs_V_2_fu_1371_p1;
wire  signed [16:0] rhs_V_9_1_fu_1407_p1;
wire  signed [16:0] lhs_V_10_1_fu_1399_p1;
wire  signed [16:0] rhs_V_10_1_fu_1435_p1;
wire  signed [16:0] lhs_V_11_1_fu_1427_p1;
wire  signed [16:0] rhs_V_9_2_fu_1463_p1;
wire  signed [16:0] lhs_V_10_2_fu_1455_p1;
wire  signed [16:0] rhs_V_10_2_fu_1491_p1;
wire  signed [16:0] lhs_V_11_2_fu_1483_p1;
wire  signed [16:0] rhs_V_9_3_fu_1519_p1;
wire  signed [16:0] lhs_V_10_3_fu_1511_p1;
wire  signed [16:0] rhs_V_10_3_fu_1547_p1;
wire  signed [16:0] lhs_V_11_3_fu_1539_p1;
wire  signed [16:0] rhs_V_9_4_fu_1575_p1;
wire  signed [16:0] lhs_V_10_4_fu_1567_p1;
wire  signed [16:0] rhs_V_10_4_fu_1603_p1;
wire  signed [16:0] lhs_V_11_4_fu_1595_p1;
wire  signed [16:0] rhs_V_9_5_fu_1631_p1;
wire  signed [16:0] lhs_V_10_5_fu_1623_p1;
wire  signed [16:0] rhs_V_10_5_fu_1659_p1;
wire  signed [16:0] lhs_V_11_5_fu_1651_p1;
wire  signed [16:0] rhs_V_9_6_fu_1687_p1;
wire  signed [16:0] lhs_V_10_6_fu_1679_p1;
wire  signed [16:0] rhs_V_10_6_fu_1715_p1;
wire  signed [16:0] lhs_V_11_6_fu_1707_p1;
wire  signed [16:0] rhs_V_9_7_fu_1743_p1;
wire  signed [16:0] lhs_V_10_7_fu_1735_p1;
wire  signed [16:0] rhs_V_10_7_fu_1771_p1;
wire  signed [16:0] lhs_V_11_7_fu_1763_p1;
wire   [8:0] tmp_9_fu_1820_p4;
wire   [7:0] tmp_10_fu_1896_p4;
wire   [6:0] tmp_11_fu_2038_p4;
wire   [5:0] tmp_12_fu_2312_p4;
wire   [22:0] tmp_13_fu_3059_p1;
wire   [0:0] tmp_3_fu_3413_p2;
wire   [9:0] storemerge849_in_fu_3427_p3;
wire   [23:0] tmp_7_fu_3493_p4;
wire  signed [40:0] lhs_V_1_cast_fu_3512_p1;
wire  signed [40:0] rhs_V_cast_fu_3520_p1;
reg    grp_fu_927_ce;
reg    grp_fu_941_ce;
reg   [0:0] ap_NS_fsm;
wire    ap_reset_idle_pp0;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_449;
reg    ap_condition_316;

// power-on initialization
initial begin
#0 o_data_V_data_V_1_sel_rd = 1'b0;
#0 o_data_V_data_V_1_sel_wr = 1'b0;
#0 o_data_V_data_V_1_state = 2'd0;
#0 o_data_V_last_V_1_sel_rd = 1'b0;
#0 o_data_V_last_V_1_sel_wr = 1'b0;
#0 o_data_V_last_V_1_state = 2'd0;
#0 currentwrState = 1'd0;
#0 data_valid_reg_V = 24'd0;
#0 pnseq_len_reg_V = 10'd0;
#0 out_sample_cnt_V = 10'd0;
#0 sq_sum_V = 41'd0;
#0 sq_reg_i_V = 40'd0;
#0 sq_reg_q_V = 40'd0;
#0 sum_reg_i_V = 20'd0;
#0 sum_reg_q_V = 20'd0;
#0 sum3_reg_i_V_0 = 19'd0;
#0 sum3_reg_i_V_1 = 19'd0;
#0 sum3_reg_q_V_0 = 19'd0;
#0 sum3_reg_q_V_1 = 19'd0;
#0 sum2_reg_i_V_0 = 18'd0;
#0 sum2_reg_i_V_1 = 18'd0;
#0 sum2_reg_q_V_0 = 18'd0;
#0 sum2_reg_q_V_1 = 18'd0;
#0 sum2_reg_i_V_2 = 18'd0;
#0 sum2_reg_i_V_3 = 18'd0;
#0 sum2_reg_q_V_2 = 18'd0;
#0 sum2_reg_q_V_3 = 18'd0;
#0 sum1_reg_i_V_0 = 17'd0;
#0 sum1_reg_i_V_1 = 17'd0;
#0 sum1_reg_q_V_0 = 17'd0;
#0 sum1_reg_q_V_1 = 17'd0;
#0 sum1_reg_i_V_2 = 17'd0;
#0 sum1_reg_i_V_3 = 17'd0;
#0 sum1_reg_q_V_2 = 17'd0;
#0 sum1_reg_q_V_3 = 17'd0;
#0 sum1_reg_i_V_4 = 17'd0;
#0 sum1_reg_i_V_5 = 17'd0;
#0 sum1_reg_q_V_4 = 17'd0;
#0 sum1_reg_q_V_5 = 17'd0;
#0 sum1_reg_i_V_6 = 17'd0;
#0 sum1_reg_i_V_7 = 17'd0;
#0 sum1_reg_q_V_6 = 17'd0;
#0 sum1_reg_q_V_7 = 17'd0;
#0 adder_in_reg_i_V_0 = 16'd0;
#0 adder_in_reg_i_V_1 = 16'd0;
#0 adder_in_reg_q_V_0 = 16'd0;
#0 adder_in_reg_q_V_1 = 16'd0;
#0 adder_in_reg_i_V_2 = 16'd0;
#0 adder_in_reg_i_V_3 = 16'd0;
#0 adder_in_reg_q_V_2 = 16'd0;
#0 adder_in_reg_q_V_3 = 16'd0;
#0 adder_in_reg_i_V_4 = 16'd0;
#0 adder_in_reg_i_V_5 = 16'd0;
#0 adder_in_reg_q_V_4 = 16'd0;
#0 adder_in_reg_q_V_5 = 16'd0;
#0 adder_in_reg_i_V_6 = 16'd0;
#0 adder_in_reg_i_V_7 = 16'd0;
#0 adder_in_reg_q_V_6 = 16'd0;
#0 adder_in_reg_q_V_7 = 16'd0;
#0 adder_in_reg_i_V_8 = 16'd0;
#0 adder_in_reg_i_V_9 = 16'd0;
#0 adder_in_reg_q_V_8 = 16'd0;
#0 adder_in_reg_q_V_9 = 16'd0;
#0 adder_in_reg_i_V_10 = 16'd0;
#0 adder_in_reg_i_V_11 = 16'd0;
#0 adder_in_reg_q_V_10 = 16'd0;
#0 adder_in_reg_q_V_11 = 16'd0;
#0 adder_in_reg_i_V_12 = 16'd0;
#0 adder_in_reg_i_V_13 = 16'd0;
#0 adder_in_reg_q_V_12 = 16'd0;
#0 adder_in_reg_q_V_13 = 16'd0;
#0 adder_in_reg_i_V_14 = 16'd0;
#0 adder_in_reg_i_V_15 = 16'd0;
#0 adder_in_reg_q_V_14 = 16'd0;
#0 adder_in_reg_q_V_15 = 16'd0;
#0 product_reg_i_V_0 = 16'd0;
#0 product_reg_i_V_1 = 16'd0;
#0 product_reg_q_V_0 = 16'd0;
#0 product_reg_i_V_2 = 16'd0;
#0 product_reg_q_V_1 = 16'd0;
#0 product_reg_i_V_3 = 16'd0;
#0 product_reg_q_V_2 = 16'd0;
#0 product_reg_i_V_4 = 16'd0;
#0 product_reg_q_V_3 = 16'd0;
#0 product_reg_i_V_5 = 16'd0;
#0 product_reg_q_V_4 = 16'd0;
#0 product_reg_i_V_6 = 16'd0;
#0 product_reg_q_V_5 = 16'd0;
#0 product_reg_i_V_7 = 16'd0;
#0 product_reg_q_V_6 = 16'd0;
#0 product_reg_i_V_8 = 16'd0;
#0 product_reg_q_V_7 = 16'd0;
#0 product_reg_i_V_9 = 16'd0;
#0 product_reg_q_V_8 = 16'd0;
#0 product_reg_i_V_10 = 16'd0;
#0 product_reg_q_V_9 = 16'd0;
#0 product_reg_i_V_11 = 16'd0;
#0 product_reg_q_V_10 = 16'd0;
#0 product_reg_i_V_12 = 16'd0;
#0 product_reg_q_V_11 = 16'd0;
#0 product_reg_i_V_13 = 16'd0;
#0 product_reg_q_V_12 = 16'd0;
#0 product_reg_i_V_14 = 16'd0;
#0 product_reg_q_V_13 = 16'd0;
#0 product_reg_i_V_15 = 16'd0;
#0 product_reg_q_V_14 = 16'd0;
#0 pn_seq_V_0 = 1'd0;
#0 data_reg_i_V_0 = 16'd0;
#0 data_reg_q_V_0 = 16'd0;
#0 product_reg_q_V_15 = 16'd0;
#0 pn_seq_V_1 = 1'd0;
#0 data_reg_i_V_1 = 16'd0;
#0 data_reg_q_V_1 = 16'd0;
#0 pn_seq_V_2 = 1'd0;
#0 data_reg_i_V_2 = 16'd0;
#0 data_reg_q_V_2 = 16'd0;
#0 pn_seq_V_3 = 1'd0;
#0 data_reg_i_V_3 = 16'd0;
#0 data_reg_q_V_3 = 16'd0;
#0 pn_seq_V_4 = 1'd0;
#0 data_reg_i_V_4 = 16'd0;
#0 data_reg_q_V_4 = 16'd0;
#0 pn_seq_V_5 = 1'd0;
#0 data_reg_i_V_5 = 16'd0;
#0 data_reg_q_V_5 = 16'd0;
#0 pn_seq_V_6 = 1'd0;
#0 data_reg_i_V_6 = 16'd0;
#0 data_reg_q_V_6 = 16'd0;
#0 pn_seq_V_7 = 1'd0;
#0 data_reg_i_V_7 = 16'd0;
#0 data_reg_q_V_7 = 16'd0;
#0 pn_seq_V_8 = 1'd0;
#0 data_reg_i_V_8 = 16'd0;
#0 data_reg_q_V_8 = 16'd0;
#0 pn_seq_V_9 = 1'd0;
#0 data_reg_i_V_9 = 16'd0;
#0 data_reg_q_V_9 = 16'd0;
#0 pn_seq_V_10 = 1'd0;
#0 data_reg_i_V_10 = 16'd0;
#0 data_reg_q_V_10 = 16'd0;
#0 pn_seq_V_11 = 1'd0;
#0 data_reg_i_V_11 = 16'd0;
#0 data_reg_q_V_11 = 16'd0;
#0 pn_seq_V_12 = 1'd0;
#0 data_reg_i_V_12 = 16'd0;
#0 data_reg_q_V_12 = 16'd0;
#0 pn_seq_V_13 = 1'd0;
#0 data_reg_i_V_13 = 16'd0;
#0 data_reg_q_V_13 = 16'd0;
#0 pn_seq_V_14 = 1'd0;
#0 data_reg_i_V_14 = 16'd0;
#0 data_reg_q_V_14 = 16'd0;
#0 pn_seq_V_15 = 1'd0;
#0 data_reg_i_V_15 = 16'd0;
#0 data_reg_q_V_15 = 16'd0;
#0 currentState = 2'd0;
#0 load_cnt_V = 10'd0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

correlator_mul_20bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 20 ),
    .din1_WIDTH( 20 ),
    .dout_WIDTH( 40 ))
correlator_mul_20bkb_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_927_p0),
    .din1(grp_fu_927_p1),
    .ce(grp_fu_927_ce),
    .dout(grp_fu_927_p2)
);

correlator_mul_20bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 20 ),
    .din1_WIDTH( 20 ),
    .dout_WIDTH( 40 ))
correlator_mul_20bkb_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_941_p0),
    .din1(grp_fu_941_p1),
    .ce(grp_fu_941_ce),
    .dout(grp_fu_941_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        adder_in_reg_i_V_0 <= 16'd0;
    end else begin
        if ((1'b1 == ap_condition_449)) begin
            if ((tmp_2_fu_1787_p2 == 1'd1)) begin
                adder_in_reg_i_V_0 <= 16'd0;
            end else if ((tmp_2_fu_1787_p2 == 1'd0)) begin
                adder_in_reg_i_V_0 <= product_reg_i_V_0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        adder_in_reg_i_V_1 <= 16'd0;
    end else begin
        if ((1'b1 == ap_condition_449)) begin
            if ((icmp_fu_1830_p2 == 1'd1)) begin
                adder_in_reg_i_V_1 <= 16'd0;
            end else if ((icmp_fu_1830_p2 == 1'd0)) begin
                adder_in_reg_i_V_1 <= product_reg_i_V_1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        adder_in_reg_i_V_10 <= 16'd0;
    end else begin
        if ((1'b1 == ap_condition_449)) begin
            if ((tmp_26_s_fu_2147_p2 == 1'd1)) begin
                adder_in_reg_i_V_10 <= product_reg_i_V_10;
            end else if ((tmp_26_s_fu_2147_p2 == 1'd0)) begin
                adder_in_reg_i_V_10 <= 16'd0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        adder_in_reg_i_V_11 <= 16'd0;
    end else begin
        if ((1'b1 == ap_condition_449)) begin
            if ((tmp_26_1_fu_2180_p2 == 1'd1)) begin
                adder_in_reg_i_V_11 <= product_reg_i_V_11;
            end else if ((tmp_26_1_fu_2180_p2 == 1'd0)) begin
                adder_in_reg_i_V_11 <= 16'd0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        adder_in_reg_i_V_12 <= 16'd0;
    end else begin
        if ((1'b1 == ap_condition_449)) begin
            if ((tmp_26_3_fu_2213_p2 == 1'd1)) begin
                adder_in_reg_i_V_12 <= product_reg_i_V_12;
            end else if ((tmp_26_3_fu_2213_p2 == 1'd0)) begin
                adder_in_reg_i_V_12 <= 16'd0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        adder_in_reg_i_V_13 <= 16'd0;
    end else begin
        if ((1'b1 == ap_condition_449)) begin
            if ((tmp_26_7_fu_2246_p2 == 1'd1)) begin
                adder_in_reg_i_V_13 <= product_reg_i_V_13;
            end else if ((tmp_26_7_fu_2246_p2 == 1'd0)) begin
                adder_in_reg_i_V_13 <= 16'd0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        adder_in_reg_i_V_14 <= 16'd0;
    end else begin
        if ((1'b1 == ap_condition_449)) begin
            if ((tmp_26_10_fu_2279_p2 == 1'd1)) begin
                adder_in_reg_i_V_14 <= product_reg_i_V_14;
            end else if ((tmp_26_10_fu_2279_p2 == 1'd0)) begin
                adder_in_reg_i_V_14 <= 16'd0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        adder_in_reg_i_V_15 <= 16'd0;
    end else begin
        if ((1'b1 == ap_condition_449)) begin
            if ((icmp1_fu_2322_p2 == 1'd1)) begin
                adder_in_reg_i_V_15 <= 16'd0;
            end else if ((icmp1_fu_2322_p2 == 1'd0)) begin
                adder_in_reg_i_V_15 <= product_reg_i_V_15;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        adder_in_reg_i_V_2 <= 16'd0;
    end else begin
        if ((1'b1 == ap_condition_449)) begin
            if ((tmp_26_2_fu_1863_p2 == 1'd1)) begin
                adder_in_reg_i_V_2 <= product_reg_i_V_2;
            end else if ((tmp_26_2_fu_1863_p2 == 1'd0)) begin
                adder_in_reg_i_V_2 <= 16'd0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        adder_in_reg_i_V_3 <= 16'd0;
    end else begin
        if ((1'b1 == ap_condition_449)) begin
            if ((icmp6_fu_1906_p2 == 1'd1)) begin
                adder_in_reg_i_V_3 <= 16'd0;
            end else if ((icmp6_fu_1906_p2 == 1'd0)) begin
                adder_in_reg_i_V_3 <= product_reg_i_V_3;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        adder_in_reg_i_V_4 <= 16'd0;
    end else begin
        if ((1'b1 == ap_condition_449)) begin
            if ((tmp_26_4_fu_1939_p2 == 1'd1)) begin
                adder_in_reg_i_V_4 <= product_reg_i_V_4;
            end else if ((tmp_26_4_fu_1939_p2 == 1'd0)) begin
                adder_in_reg_i_V_4 <= 16'd0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        adder_in_reg_i_V_5 <= 16'd0;
    end else begin
        if ((1'b1 == ap_condition_449)) begin
            if ((tmp_26_5_fu_1972_p2 == 1'd1)) begin
                adder_in_reg_i_V_5 <= product_reg_i_V_5;
            end else if ((tmp_26_5_fu_1972_p2 == 1'd0)) begin
                adder_in_reg_i_V_5 <= 16'd0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        adder_in_reg_i_V_6 <= 16'd0;
    end else begin
        if ((1'b1 == ap_condition_449)) begin
            if ((tmp_26_6_fu_2005_p2 == 1'd1)) begin
                adder_in_reg_i_V_6 <= product_reg_i_V_6;
            end else if ((tmp_26_6_fu_2005_p2 == 1'd0)) begin
                adder_in_reg_i_V_6 <= 16'd0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        adder_in_reg_i_V_7 <= 16'd0;
    end else begin
        if ((1'b1 == ap_condition_449)) begin
            if ((icmp9_fu_2048_p2 == 1'd1)) begin
                adder_in_reg_i_V_7 <= 16'd0;
            end else if ((icmp9_fu_2048_p2 == 1'd0)) begin
                adder_in_reg_i_V_7 <= product_reg_i_V_7;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        adder_in_reg_i_V_8 <= 16'd0;
    end else begin
        if ((1'b1 == ap_condition_449)) begin
            if ((tmp_26_8_fu_2081_p2 == 1'd1)) begin
                adder_in_reg_i_V_8 <= product_reg_i_V_8;
            end else if ((tmp_26_8_fu_2081_p2 == 1'd0)) begin
                adder_in_reg_i_V_8 <= 16'd0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        adder_in_reg_i_V_9 <= 16'd0;
    end else begin
        if ((1'b1 == ap_condition_449)) begin
            if ((tmp_26_9_fu_2114_p2 == 1'd1)) begin
                adder_in_reg_i_V_9 <= product_reg_i_V_9;
            end else if ((tmp_26_9_fu_2114_p2 == 1'd0)) begin
                adder_in_reg_i_V_9 <= 16'd0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        adder_in_reg_q_V_0 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            adder_in_reg_q_V_0 <= ap_phi_mux_storemerge3_phi_fu_525_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        adder_in_reg_q_V_1 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            adder_in_reg_q_V_1 <= ap_phi_mux_storemerge4_phi_fu_535_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        adder_in_reg_q_V_10 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            adder_in_reg_q_V_10 <= ap_phi_mux_storemerge12_phi_fu_625_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        adder_in_reg_q_V_11 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            adder_in_reg_q_V_11 <= ap_phi_mux_storemerge13_phi_fu_635_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        adder_in_reg_q_V_12 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            adder_in_reg_q_V_12 <= ap_phi_mux_storemerge14_phi_fu_645_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        adder_in_reg_q_V_13 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            adder_in_reg_q_V_13 <= ap_phi_mux_storemerge15_phi_fu_655_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        adder_in_reg_q_V_14 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            adder_in_reg_q_V_14 <= ap_phi_mux_storemerge16_phi_fu_665_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        adder_in_reg_q_V_15 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            adder_in_reg_q_V_15 <= ap_phi_mux_storemerge17_phi_fu_675_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        adder_in_reg_q_V_2 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            adder_in_reg_q_V_2 <= ap_phi_mux_storemerge5_phi_fu_545_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        adder_in_reg_q_V_3 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            adder_in_reg_q_V_3 <= ap_phi_mux_storemerge6_phi_fu_555_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        adder_in_reg_q_V_4 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            adder_in_reg_q_V_4 <= ap_phi_mux_storemerge7_phi_fu_565_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        adder_in_reg_q_V_5 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            adder_in_reg_q_V_5 <= ap_phi_mux_storemerge8_phi_fu_575_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        adder_in_reg_q_V_6 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            adder_in_reg_q_V_6 <= ap_phi_mux_storemerge9_phi_fu_585_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        adder_in_reg_q_V_7 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            adder_in_reg_q_V_7 <= ap_phi_mux_storemerge2_phi_fu_595_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        adder_in_reg_q_V_8 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            adder_in_reg_q_V_8 <= ap_phi_mux_storemerge10_phi_fu_605_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        adder_in_reg_q_V_9 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            adder_in_reg_q_V_9 <= ap_phi_mux_storemerge11_phi_fu_615_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        currentState <= 2'd0;
    end else begin
        if ((1'b1 == ap_condition_449)) begin
            if (((currentState_load_load_fu_3079_p1 == 2'd0) & (start_V_read_read_fu_482_p2 == 1'd1))) begin
                currentState <= 2'd1;
            end else if ((currentState_load_load_fu_3079_p1 == 2'd1)) begin
                currentState <= 2'd2;
            end else if ((currentState == 2'd2)) begin
                currentState <= storemerge34_fu_3419_p3;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        currentwrState <= 1'd0;
    end else begin
        if ((1'b1 == ap_condition_449)) begin
            if ((currentwrState_load_load_fu_850_p1 == 1'd1)) begin
                currentwrState <= data_valid_reg_V[32'd7];
            end else if (((grp_fu_843_p3 == 1'd1) & (currentwrState_load_load_fu_850_p1 == 1'd0))) begin
                currentwrState <= 1'd1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_reg_i_V_0 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op606_read_state1 == 1'b1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            data_reg_i_V_0 <= {{i_data_TDATA[31:16]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_reg_i_V_1 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op606_read_state1 == 1'b1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            data_reg_i_V_1 <= data_reg_i_V_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_reg_i_V_10 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op606_read_state1 == 1'b1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            data_reg_i_V_10 <= data_reg_i_V_9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_reg_i_V_11 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op606_read_state1 == 1'b1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            data_reg_i_V_11 <= data_reg_i_V_10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_reg_i_V_12 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op606_read_state1 == 1'b1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            data_reg_i_V_12 <= data_reg_i_V_11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_reg_i_V_13 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op606_read_state1 == 1'b1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            data_reg_i_V_13 <= data_reg_i_V_12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_reg_i_V_14 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op606_read_state1 == 1'b1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            data_reg_i_V_14 <= data_reg_i_V_13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_reg_i_V_15 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op606_read_state1 == 1'b1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            data_reg_i_V_15 <= data_reg_i_V_14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_reg_i_V_2 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op606_read_state1 == 1'b1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            data_reg_i_V_2 <= data_reg_i_V_1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_reg_i_V_3 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op606_read_state1 == 1'b1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            data_reg_i_V_3 <= data_reg_i_V_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_reg_i_V_4 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op606_read_state1 == 1'b1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            data_reg_i_V_4 <= data_reg_i_V_3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_reg_i_V_5 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op606_read_state1 == 1'b1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            data_reg_i_V_5 <= data_reg_i_V_4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_reg_i_V_6 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op606_read_state1 == 1'b1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            data_reg_i_V_6 <= data_reg_i_V_5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_reg_i_V_7 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op606_read_state1 == 1'b1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            data_reg_i_V_7 <= data_reg_i_V_6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_reg_i_V_8 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op606_read_state1 == 1'b1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            data_reg_i_V_8 <= data_reg_i_V_7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_reg_i_V_9 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op606_read_state1 == 1'b1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            data_reg_i_V_9 <= data_reg_i_V_8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_reg_q_V_0 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op606_read_state1 == 1'b1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            data_reg_q_V_0 <= tmp_15_fu_3278_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_reg_q_V_1 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op606_read_state1 == 1'b1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            data_reg_q_V_1 <= data_reg_q_V_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_reg_q_V_10 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op606_read_state1 == 1'b1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            data_reg_q_V_10 <= data_reg_q_V_9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_reg_q_V_11 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op606_read_state1 == 1'b1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            data_reg_q_V_11 <= data_reg_q_V_10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_reg_q_V_12 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op606_read_state1 == 1'b1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            data_reg_q_V_12 <= data_reg_q_V_11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_reg_q_V_13 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op606_read_state1 == 1'b1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            data_reg_q_V_13 <= data_reg_q_V_12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_reg_q_V_14 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op606_read_state1 == 1'b1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            data_reg_q_V_14 <= data_reg_q_V_13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_reg_q_V_15 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op606_read_state1 == 1'b1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            data_reg_q_V_15 <= data_reg_q_V_14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_reg_q_V_2 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op606_read_state1 == 1'b1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            data_reg_q_V_2 <= data_reg_q_V_1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_reg_q_V_3 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op606_read_state1 == 1'b1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            data_reg_q_V_3 <= data_reg_q_V_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_reg_q_V_4 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op606_read_state1 == 1'b1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            data_reg_q_V_4 <= data_reg_q_V_3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_reg_q_V_5 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op606_read_state1 == 1'b1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            data_reg_q_V_5 <= data_reg_q_V_4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_reg_q_V_6 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op606_read_state1 == 1'b1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            data_reg_q_V_6 <= data_reg_q_V_5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_reg_q_V_7 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op606_read_state1 == 1'b1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            data_reg_q_V_7 <= data_reg_q_V_6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_reg_q_V_8 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op606_read_state1 == 1'b1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            data_reg_q_V_8 <= data_reg_q_V_7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_reg_q_V_9 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op606_read_state1 == 1'b1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            data_reg_q_V_9 <= data_reg_q_V_8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        data_valid_reg_V <= 24'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            data_valid_reg_V <= ap_phi_mux_data_valid_reg_V_new_phi_fu_829_p12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        load_cnt_V <= 10'd0;
    end else begin
        if ((1'b1 == ap_condition_449)) begin
            if ((currentState_load_load_fu_3079_p1 == 2'd1)) begin
                load_cnt_V <= tmp_1_fu_3459_p2;
            end else if ((currentState == 2'd2)) begin
                load_cnt_V <= storemerge1_fu_3441_p2;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        o_data_V_data_V_1_sel_rd <= 1'b0;
    end else begin
        if (((o_data_V_data_V_1_ack_out == 1'b1) & (o_data_V_data_V_1_vld_out == 1'b1))) begin
            o_data_V_data_V_1_sel_rd <= ~o_data_V_data_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        o_data_V_data_V_1_sel_wr <= 1'b0;
    end else begin
        if (((o_data_V_data_V_1_ack_in == 1'b1) & (o_data_V_data_V_1_vld_in == 1'b1))) begin
            o_data_V_data_V_1_sel_wr <= ~o_data_V_data_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        o_data_V_data_V_1_state <= 2'd0;
    end else begin
        if ((((o_data_V_data_V_1_state == 2'd2) & (o_data_V_data_V_1_vld_in == 1'b0)) | ((o_data_V_data_V_1_state == 2'd3) & (o_data_V_data_V_1_vld_in == 1'b0) & (o_data_V_data_V_1_ack_out == 1'b1)))) begin
            o_data_V_data_V_1_state <= 2'd2;
        end else if ((((o_data_V_data_V_1_state == 2'd1) & (o_data_V_data_V_1_ack_out == 1'b0)) | ((o_data_V_data_V_1_state == 2'd3) & (o_data_V_data_V_1_ack_out == 1'b0) & (o_data_V_data_V_1_vld_in == 1'b1)))) begin
            o_data_V_data_V_1_state <= 2'd1;
        end else if (((~((o_data_V_data_V_1_vld_in == 1'b0) & (o_data_V_data_V_1_ack_out == 1'b1)) & ~((o_data_V_data_V_1_ack_out == 1'b0) & (o_data_V_data_V_1_vld_in == 1'b1)) & (o_data_V_data_V_1_state == 2'd3)) | ((o_data_V_data_V_1_state == 2'd1) & (o_data_V_data_V_1_ack_out == 1'b1)) | ((o_data_V_data_V_1_state == 2'd2) & (o_data_V_data_V_1_vld_in == 1'b1)))) begin
            o_data_V_data_V_1_state <= 2'd3;
        end else begin
            o_data_V_data_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        o_data_V_last_V_1_sel_rd <= 1'b0;
    end else begin
        if (((o_data_V_last_V_1_ack_out == 1'b1) & (o_data_V_last_V_1_vld_out == 1'b1))) begin
            o_data_V_last_V_1_sel_rd <= ~o_data_V_last_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        o_data_V_last_V_1_sel_wr <= 1'b0;
    end else begin
        if (((o_data_V_last_V_1_ack_in == 1'b1) & (o_data_V_last_V_1_vld_in == 1'b1))) begin
            o_data_V_last_V_1_sel_wr <= ~o_data_V_last_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        o_data_V_last_V_1_state <= 2'd0;
    end else begin
        if ((((o_data_V_last_V_1_state == 2'd2) & (o_data_V_last_V_1_vld_in == 1'b0)) | ((o_data_V_last_V_1_state == 2'd3) & (o_data_V_last_V_1_vld_in == 1'b0) & (o_data_V_last_V_1_ack_out == 1'b1)))) begin
            o_data_V_last_V_1_state <= 2'd2;
        end else if ((((o_data_V_last_V_1_state == 2'd3) & (o_data_V_last_V_1_ack_out == 1'b0) & (o_data_V_last_V_1_vld_in == 1'b1)) | ((o_data_V_last_V_1_state == 2'd1) & (o_data_V_last_V_1_ack_out == 1'b0)))) begin
            o_data_V_last_V_1_state <= 2'd1;
        end else if ((((o_data_V_last_V_1_state == 2'd2) & (o_data_V_last_V_1_vld_in == 1'b1)) | (~((o_data_V_last_V_1_vld_in == 1'b0) & (o_data_V_last_V_1_ack_out == 1'b1)) & ~((o_data_V_last_V_1_ack_out == 1'b0) & (o_data_V_last_V_1_vld_in == 1'b1)) & (o_data_V_last_V_1_state == 2'd3)) | ((o_data_V_last_V_1_state == 2'd1) & (o_data_V_last_V_1_ack_out == 1'b1)))) begin
            o_data_V_last_V_1_state <= 2'd3;
        end else begin
            o_data_V_last_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        out_sample_cnt_V <= 10'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (currentwrState_load_load_fu_850_p1 == 1'd1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            out_sample_cnt_V <= storemerge_fu_899_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        pn_seq_V_0 <= 1'd0;
    end else begin
        if (((tmp_14_fu_3313_p1 == 9'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (currentState == 2'd2) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            pn_seq_V_0 <= pnseq_in_V_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        pn_seq_V_1 <= 1'd0;
    end else begin
        if (((tmp_14_fu_3313_p1 == 9'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (currentState == 2'd2) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            pn_seq_V_1 <= pnseq_in_V_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        pn_seq_V_10 <= 1'd0;
    end else begin
        if (((tmp_14_fu_3313_p1 == 9'd10) & (1'b0 == ap_block_pp0_stage0_11001) & (currentState == 2'd2) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            pn_seq_V_10 <= pnseq_in_V_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        pn_seq_V_11 <= 1'd0;
    end else begin
        if (((tmp_14_fu_3313_p1 == 9'd11) & (1'b0 == ap_block_pp0_stage0_11001) & (currentState == 2'd2) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            pn_seq_V_11 <= pnseq_in_V_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        pn_seq_V_12 <= 1'd0;
    end else begin
        if (((tmp_14_fu_3313_p1 == 9'd12) & (1'b0 == ap_block_pp0_stage0_11001) & (currentState == 2'd2) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            pn_seq_V_12 <= pnseq_in_V_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        pn_seq_V_13 <= 1'd0;
    end else begin
        if (((tmp_14_fu_3313_p1 == 9'd13) & (1'b0 == ap_block_pp0_stage0_11001) & (currentState == 2'd2) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            pn_seq_V_13 <= pnseq_in_V_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        pn_seq_V_14 <= 1'd0;
    end else begin
        if (((tmp_14_fu_3313_p1 == 9'd14) & (1'b0 == ap_block_pp0_stage0_11001) & (currentState == 2'd2) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            pn_seq_V_14 <= pnseq_in_V_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        pn_seq_V_15 <= 1'd0;
    end else begin
        if (((tmp_14_fu_3313_p1 == 9'd15) & (1'b0 == ap_block_pp0_stage0_11001) & (currentState == 2'd2) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            pn_seq_V_15 <= pnseq_in_V_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        pn_seq_V_2 <= 1'd0;
    end else begin
        if (((tmp_14_fu_3313_p1 == 9'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (currentState == 2'd2) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            pn_seq_V_2 <= pnseq_in_V_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        pn_seq_V_3 <= 1'd0;
    end else begin
        if (((tmp_14_fu_3313_p1 == 9'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (currentState == 2'd2) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            pn_seq_V_3 <= pnseq_in_V_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        pn_seq_V_4 <= 1'd0;
    end else begin
        if (((tmp_14_fu_3313_p1 == 9'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (currentState == 2'd2) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            pn_seq_V_4 <= pnseq_in_V_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        pn_seq_V_5 <= 1'd0;
    end else begin
        if (((tmp_14_fu_3313_p1 == 9'd5) & (1'b0 == ap_block_pp0_stage0_11001) & (currentState == 2'd2) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            pn_seq_V_5 <= pnseq_in_V_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        pn_seq_V_6 <= 1'd0;
    end else begin
        if (((tmp_14_fu_3313_p1 == 9'd6) & (1'b0 == ap_block_pp0_stage0_11001) & (currentState == 2'd2) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            pn_seq_V_6 <= pnseq_in_V_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        pn_seq_V_7 <= 1'd0;
    end else begin
        if (((tmp_14_fu_3313_p1 == 9'd7) & (1'b0 == ap_block_pp0_stage0_11001) & (currentState == 2'd2) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            pn_seq_V_7 <= pnseq_in_V_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        pn_seq_V_8 <= 1'd0;
    end else begin
        if (((tmp_14_fu_3313_p1 == 9'd8) & (1'b0 == ap_block_pp0_stage0_11001) & (currentState == 2'd2) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            pn_seq_V_8 <= pnseq_in_V_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        pn_seq_V_9 <= 1'd0;
    end else begin
        if (((tmp_14_fu_3313_p1 == 9'd9) & (1'b0 == ap_block_pp0_stage0_11001) & (currentState == 2'd2) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            pn_seq_V_9 <= pnseq_in_V_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        pnseq_len_reg_V <= 10'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (currentState_load_load_fu_3079_p1 == 2'd1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            pnseq_len_reg_V <= pnseq_len_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        product_reg_i_V_0 <= 16'd0;
    end else begin
        if ((1'b1 == ap_condition_449)) begin
            if ((pn_seq_V_0_load_load_fu_2355_p1 == 1'd1)) begin
                product_reg_i_V_0 <= data_reg_i_V_0;
            end else if ((pn_seq_V_0_load_load_fu_2355_p1 == 1'd0)) begin
                product_reg_i_V_0 <= tmp_5_fu_2368_p2;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        product_reg_i_V_1 <= 16'd0;
    end else begin
        if ((1'b1 == ap_condition_449)) begin
            if ((pn_seq_V_1_load_load_fu_2399_p1 == 1'd1)) begin
                product_reg_i_V_1 <= data_reg_i_V_1;
            end else if ((pn_seq_V_1_load_load_fu_2399_p1 == 1'd0)) begin
                product_reg_i_V_1 <= tmp_36_1_fu_2412_p2;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        product_reg_i_V_10 <= 16'd0;
    end else begin
        if ((1'b1 == ap_condition_449)) begin
            if ((pn_seq_V_10_load_load_fu_2795_p1 == 1'd1)) begin
                product_reg_i_V_10 <= data_reg_i_V_10;
            end else if ((pn_seq_V_10_load_load_fu_2795_p1 == 1'd0)) begin
                product_reg_i_V_10 <= tmp_36_s_fu_2808_p2;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        product_reg_i_V_11 <= 16'd0;
    end else begin
        if ((1'b1 == ap_condition_449)) begin
            if ((pn_seq_V_11_load_load_fu_2839_p1 == 1'd1)) begin
                product_reg_i_V_11 <= data_reg_i_V_11;
            end else if ((pn_seq_V_11_load_load_fu_2839_p1 == 1'd0)) begin
                product_reg_i_V_11 <= tmp_36_10_fu_2852_p2;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        product_reg_i_V_12 <= 16'd0;
    end else begin
        if ((1'b1 == ap_condition_449)) begin
            if ((pn_seq_V_12_load_load_fu_2883_p1 == 1'd1)) begin
                product_reg_i_V_12 <= data_reg_i_V_12;
            end else if ((pn_seq_V_12_load_load_fu_2883_p1 == 1'd0)) begin
                product_reg_i_V_12 <= tmp_36_11_fu_2896_p2;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        product_reg_i_V_13 <= 16'd0;
    end else begin
        if ((1'b1 == ap_condition_449)) begin
            if ((pn_seq_V_13_load_load_fu_2927_p1 == 1'd1)) begin
                product_reg_i_V_13 <= data_reg_i_V_13;
            end else if ((pn_seq_V_13_load_load_fu_2927_p1 == 1'd0)) begin
                product_reg_i_V_13 <= tmp_36_12_fu_2940_p2;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        product_reg_i_V_14 <= 16'd0;
    end else begin
        if ((1'b1 == ap_condition_449)) begin
            if ((pn_seq_V_14_load_load_fu_2971_p1 == 1'd1)) begin
                product_reg_i_V_14 <= data_reg_i_V_14;
            end else if ((pn_seq_V_14_load_load_fu_2971_p1 == 1'd0)) begin
                product_reg_i_V_14 <= tmp_36_13_fu_2984_p2;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        product_reg_i_V_15 <= 16'd0;
    end else begin
        if ((1'b1 == ap_condition_449)) begin
            if ((pn_seq_V_15_load_load_fu_3015_p1 == 1'd1)) begin
                product_reg_i_V_15 <= data_reg_i_V_15;
            end else if ((pn_seq_V_15_load_load_fu_3015_p1 == 1'd0)) begin
                product_reg_i_V_15 <= tmp_36_14_fu_3028_p2;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        product_reg_i_V_2 <= 16'd0;
    end else begin
        if ((1'b1 == ap_condition_449)) begin
            if ((pn_seq_V_2_load_load_fu_2443_p1 == 1'd1)) begin
                product_reg_i_V_2 <= data_reg_i_V_2;
            end else if ((pn_seq_V_2_load_load_fu_2443_p1 == 1'd0)) begin
                product_reg_i_V_2 <= tmp_36_2_fu_2456_p2;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        product_reg_i_V_3 <= 16'd0;
    end else begin
        if ((1'b1 == ap_condition_449)) begin
            if ((pn_seq_V_3_load_load_fu_2487_p1 == 1'd1)) begin
                product_reg_i_V_3 <= data_reg_i_V_3;
            end else if ((pn_seq_V_3_load_load_fu_2487_p1 == 1'd0)) begin
                product_reg_i_V_3 <= tmp_36_3_fu_2500_p2;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        product_reg_i_V_4 <= 16'd0;
    end else begin
        if ((1'b1 == ap_condition_449)) begin
            if ((pn_seq_V_4_load_load_fu_2531_p1 == 1'd1)) begin
                product_reg_i_V_4 <= data_reg_i_V_4;
            end else if ((pn_seq_V_4_load_load_fu_2531_p1 == 1'd0)) begin
                product_reg_i_V_4 <= tmp_36_4_fu_2544_p2;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        product_reg_i_V_5 <= 16'd0;
    end else begin
        if ((1'b1 == ap_condition_449)) begin
            if ((pn_seq_V_5_load_load_fu_2575_p1 == 1'd1)) begin
                product_reg_i_V_5 <= data_reg_i_V_5;
            end else if ((pn_seq_V_5_load_load_fu_2575_p1 == 1'd0)) begin
                product_reg_i_V_5 <= tmp_36_5_fu_2588_p2;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        product_reg_i_V_6 <= 16'd0;
    end else begin
        if ((1'b1 == ap_condition_449)) begin
            if ((pn_seq_V_6_load_load_fu_2619_p1 == 1'd1)) begin
                product_reg_i_V_6 <= data_reg_i_V_6;
            end else if ((pn_seq_V_6_load_load_fu_2619_p1 == 1'd0)) begin
                product_reg_i_V_6 <= tmp_36_6_fu_2632_p2;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        product_reg_i_V_7 <= 16'd0;
    end else begin
        if ((1'b1 == ap_condition_449)) begin
            if ((pn_seq_V_7_load_load_fu_2663_p1 == 1'd1)) begin
                product_reg_i_V_7 <= data_reg_i_V_7;
            end else if ((pn_seq_V_7_load_load_fu_2663_p1 == 1'd0)) begin
                product_reg_i_V_7 <= tmp_36_7_fu_2676_p2;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        product_reg_i_V_8 <= 16'd0;
    end else begin
        if ((1'b1 == ap_condition_449)) begin
            if ((pn_seq_V_8_load_load_fu_2707_p1 == 1'd1)) begin
                product_reg_i_V_8 <= data_reg_i_V_8;
            end else if ((pn_seq_V_8_load_load_fu_2707_p1 == 1'd0)) begin
                product_reg_i_V_8 <= tmp_36_8_fu_2720_p2;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        product_reg_i_V_9 <= 16'd0;
    end else begin
        if ((1'b1 == ap_condition_449)) begin
            if ((pn_seq_V_9_load_load_fu_2751_p1 == 1'd1)) begin
                product_reg_i_V_9 <= data_reg_i_V_9;
            end else if ((pn_seq_V_9_load_load_fu_2751_p1 == 1'd0)) begin
                product_reg_i_V_9 <= tmp_36_9_fu_2764_p2;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        product_reg_q_V_0 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            product_reg_q_V_0 <= ap_phi_mux_storemerge18_phi_fu_685_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        product_reg_q_V_1 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            product_reg_q_V_1 <= ap_phi_mux_storemerge19_phi_fu_694_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        product_reg_q_V_10 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            product_reg_q_V_10 <= ap_phi_mux_storemerge28_phi_fu_775_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        product_reg_q_V_11 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            product_reg_q_V_11 <= ap_phi_mux_storemerge29_phi_fu_784_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        product_reg_q_V_12 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            product_reg_q_V_12 <= ap_phi_mux_storemerge30_phi_fu_793_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        product_reg_q_V_13 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            product_reg_q_V_13 <= ap_phi_mux_storemerge31_phi_fu_802_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        product_reg_q_V_14 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            product_reg_q_V_14 <= ap_phi_mux_storemerge32_phi_fu_811_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        product_reg_q_V_15 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            product_reg_q_V_15 <= ap_phi_mux_storemerge33_phi_fu_820_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        product_reg_q_V_2 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            product_reg_q_V_2 <= ap_phi_mux_storemerge20_phi_fu_703_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        product_reg_q_V_3 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            product_reg_q_V_3 <= ap_phi_mux_storemerge21_phi_fu_712_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        product_reg_q_V_4 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            product_reg_q_V_4 <= ap_phi_mux_storemerge22_phi_fu_721_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        product_reg_q_V_5 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            product_reg_q_V_5 <= ap_phi_mux_storemerge23_phi_fu_730_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        product_reg_q_V_6 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            product_reg_q_V_6 <= ap_phi_mux_storemerge24_phi_fu_739_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        product_reg_q_V_7 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            product_reg_q_V_7 <= ap_phi_mux_storemerge25_phi_fu_748_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        product_reg_q_V_8 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            product_reg_q_V_8 <= ap_phi_mux_storemerge26_phi_fu_757_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        product_reg_q_V_9 <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            product_reg_q_V_9 <= ap_phi_mux_storemerge27_phi_fu_766_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        sq_reg_i_V <= 40'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
            sq_reg_i_V <= grp_fu_927_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        sq_reg_q_V <= 40'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
            sq_reg_q_V <= grp_fu_941_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        sq_sum_V <= 41'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
            sq_sum_V <= r_V_1_fu_3524_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        sum1_reg_i_V_0 <= 17'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sum1_reg_i_V_0 <= r_V_s_fu_1355_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        sum1_reg_i_V_1 <= 17'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sum1_reg_i_V_1 <= r_V_10_1_fu_1411_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        sum1_reg_i_V_2 <= 17'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sum1_reg_i_V_2 <= r_V_10_2_fu_1467_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        sum1_reg_i_V_3 <= 17'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sum1_reg_i_V_3 <= r_V_10_3_fu_1523_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        sum1_reg_i_V_4 <= 17'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sum1_reg_i_V_4 <= r_V_10_4_fu_1579_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        sum1_reg_i_V_5 <= 17'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sum1_reg_i_V_5 <= r_V_10_5_fu_1635_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        sum1_reg_i_V_6 <= 17'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sum1_reg_i_V_6 <= r_V_10_6_fu_1691_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        sum1_reg_i_V_7 <= 17'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sum1_reg_i_V_7 <= r_V_10_7_fu_1747_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        sum1_reg_q_V_0 <= 17'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sum1_reg_q_V_0 <= r_V_10_fu_1383_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        sum1_reg_q_V_1 <= 17'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sum1_reg_q_V_1 <= r_V_11_1_fu_1439_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        sum1_reg_q_V_2 <= 17'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sum1_reg_q_V_2 <= r_V_11_2_fu_1495_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        sum1_reg_q_V_3 <= 17'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sum1_reg_q_V_3 <= r_V_11_3_fu_1551_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        sum1_reg_q_V_4 <= 17'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sum1_reg_q_V_4 <= r_V_11_4_fu_1607_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        sum1_reg_q_V_5 <= 17'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sum1_reg_q_V_5 <= r_V_11_5_fu_1663_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        sum1_reg_q_V_6 <= 17'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sum1_reg_q_V_6 <= r_V_11_6_fu_1719_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        sum1_reg_q_V_7 <= 17'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sum1_reg_q_V_7 <= r_V_11_7_fu_1775_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        sum2_reg_i_V_0 <= 18'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sum2_reg_i_V_0 <= r_V_8_fu_1131_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        sum2_reg_i_V_1 <= 18'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sum2_reg_i_V_1 <= r_V_8_1_fu_1187_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        sum2_reg_i_V_2 <= 18'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sum2_reg_i_V_2 <= r_V_8_2_fu_1243_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        sum2_reg_i_V_3 <= 18'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sum2_reg_i_V_3 <= r_V_8_3_fu_1299_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        sum2_reg_q_V_0 <= 18'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sum2_reg_q_V_0 <= r_V_9_fu_1159_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        sum2_reg_q_V_1 <= 18'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sum2_reg_q_V_1 <= r_V_9_1_fu_1215_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        sum2_reg_q_V_2 <= 18'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sum2_reg_q_V_2 <= r_V_9_2_fu_1271_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        sum2_reg_q_V_3 <= 18'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sum2_reg_q_V_3 <= r_V_9_3_fu_1327_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        sum3_reg_i_V_0 <= 19'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sum3_reg_i_V_0 <= r_V_6_fu_1019_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        sum3_reg_i_V_1 <= 19'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sum3_reg_i_V_1 <= r_V_6_1_fu_1075_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        sum3_reg_q_V_0 <= 19'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sum3_reg_q_V_0 <= r_V_7_fu_1047_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        sum3_reg_q_V_1 <= 19'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sum3_reg_q_V_1 <= r_V_7_1_fu_1103_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        sum_reg_i_V <= 20'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sum_reg_i_V <= r_V_4_fu_963_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        sum_reg_q_V <= 20'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            sum_reg_q_V <= r_V_5_fu_991_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_reg_pp0_iter1_currentwrState_load_reg_3552 <= currentwrState_load_reg_3552;
        ap_reg_pp0_iter1_tmp_last_V_reg_3560 <= tmp_last_V_reg_3560;
        currentwrState_load_reg_3552 <= currentwrState;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_reg_pp0_iter2_currentwrState_load_reg_3552 <= ap_reg_pp0_iter1_currentwrState_load_reg_3552;
        ap_reg_pp0_iter2_tmp_last_V_reg_3560 <= ap_reg_pp0_iter1_tmp_last_V_reg_3560;
        ap_reg_pp0_iter3_currentwrState_load_reg_3552 <= ap_reg_pp0_iter2_currentwrState_load_reg_3552;
    end
end

always @ (posedge ap_clk) begin
    if ((o_data_V_data_V_1_load_A == 1'b1)) begin
        o_data_V_data_V_1_payload_A <= out_sample_data_V_fu_3503_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((o_data_V_data_V_1_load_B == 1'b1)) begin
        o_data_V_data_V_1_payload_B <= out_sample_data_V_fu_3503_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((o_data_V_last_V_1_load_A == 1'b1)) begin
        o_data_V_last_V_1_payload_A <= ap_reg_pp0_iter2_tmp_last_V_reg_3560;
    end
end

always @ (posedge ap_clk) begin
    if ((o_data_V_last_V_1_load_B == 1'b1)) begin
        o_data_V_last_V_1_payload_B <= ap_reg_pp0_iter2_tmp_last_V_reg_3560;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (currentwrState_load_load_fu_850_p1 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_last_V_reg_3560 <= tmp_last_V_fu_887_p2;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (1'b1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((currentState == 2'd3) & (tmp_nbreadreq_fu_488_p4 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_data_valid_reg_V_new_phi_fu_829_p12 = p_Result_1_fu_3087_p2;
    end else if (((currentState == 2'd3) & (tmp_nbreadreq_fu_488_p4 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_data_valid_reg_V_new_phi_fu_829_p12 = p_Result_s_fu_3304_p3;
    end else if ((((currentState_load_load_fu_3079_p1 == 2'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((currentState_load_load_fu_3079_p1 == 2'd1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((currentState == 2'd2) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        ap_phi_mux_data_valid_reg_V_new_phi_fu_829_p12 = p_Result_2_fu_3063_p5;
    end else begin
        ap_phi_mux_data_valid_reg_V_new_phi_fu_829_p12 = ap_phi_reg_pp0_iter0_data_valid_reg_V_new_reg_826;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_316)) begin
        if ((tmp_26_8_fu_2081_p2 == 1'd0)) begin
            ap_phi_mux_storemerge10_phi_fu_605_p4 = 16'd0;
        end else if ((tmp_26_8_fu_2081_p2 == 1'd1)) begin
            ap_phi_mux_storemerge10_phi_fu_605_p4 = product_reg_q_V_8;
        end else begin
            ap_phi_mux_storemerge10_phi_fu_605_p4 = ap_phi_reg_pp0_iter0_storemerge10_reg_602;
        end
    end else begin
        ap_phi_mux_storemerge10_phi_fu_605_p4 = ap_phi_reg_pp0_iter0_storemerge10_reg_602;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_316)) begin
        if ((tmp_26_9_fu_2114_p2 == 1'd1)) begin
            ap_phi_mux_storemerge11_phi_fu_615_p4 = product_reg_q_V_9;
        end else if ((tmp_26_9_fu_2114_p2 == 1'd0)) begin
            ap_phi_mux_storemerge11_phi_fu_615_p4 = 16'd0;
        end else begin
            ap_phi_mux_storemerge11_phi_fu_615_p4 = ap_phi_reg_pp0_iter0_storemerge11_reg_612;
        end
    end else begin
        ap_phi_mux_storemerge11_phi_fu_615_p4 = ap_phi_reg_pp0_iter0_storemerge11_reg_612;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_316)) begin
        if ((tmp_26_s_fu_2147_p2 == 1'd0)) begin
            ap_phi_mux_storemerge12_phi_fu_625_p4 = 16'd0;
        end else if ((tmp_26_s_fu_2147_p2 == 1'd1)) begin
            ap_phi_mux_storemerge12_phi_fu_625_p4 = product_reg_q_V_10;
        end else begin
            ap_phi_mux_storemerge12_phi_fu_625_p4 = ap_phi_reg_pp0_iter0_storemerge12_reg_622;
        end
    end else begin
        ap_phi_mux_storemerge12_phi_fu_625_p4 = ap_phi_reg_pp0_iter0_storemerge12_reg_622;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_316)) begin
        if ((tmp_26_1_fu_2180_p2 == 1'd1)) begin
            ap_phi_mux_storemerge13_phi_fu_635_p4 = product_reg_q_V_11;
        end else if ((tmp_26_1_fu_2180_p2 == 1'd0)) begin
            ap_phi_mux_storemerge13_phi_fu_635_p4 = 16'd0;
        end else begin
            ap_phi_mux_storemerge13_phi_fu_635_p4 = ap_phi_reg_pp0_iter0_storemerge13_reg_632;
        end
    end else begin
        ap_phi_mux_storemerge13_phi_fu_635_p4 = ap_phi_reg_pp0_iter0_storemerge13_reg_632;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_316)) begin
        if ((tmp_26_3_fu_2213_p2 == 1'd0)) begin
            ap_phi_mux_storemerge14_phi_fu_645_p4 = 16'd0;
        end else if ((tmp_26_3_fu_2213_p2 == 1'd1)) begin
            ap_phi_mux_storemerge14_phi_fu_645_p4 = product_reg_q_V_12;
        end else begin
            ap_phi_mux_storemerge14_phi_fu_645_p4 = ap_phi_reg_pp0_iter0_storemerge14_reg_642;
        end
    end else begin
        ap_phi_mux_storemerge14_phi_fu_645_p4 = ap_phi_reg_pp0_iter0_storemerge14_reg_642;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_316)) begin
        if ((tmp_26_7_fu_2246_p2 == 1'd1)) begin
            ap_phi_mux_storemerge15_phi_fu_655_p4 = product_reg_q_V_13;
        end else if ((tmp_26_7_fu_2246_p2 == 1'd0)) begin
            ap_phi_mux_storemerge15_phi_fu_655_p4 = 16'd0;
        end else begin
            ap_phi_mux_storemerge15_phi_fu_655_p4 = ap_phi_reg_pp0_iter0_storemerge15_reg_652;
        end
    end else begin
        ap_phi_mux_storemerge15_phi_fu_655_p4 = ap_phi_reg_pp0_iter0_storemerge15_reg_652;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_316)) begin
        if ((tmp_26_10_fu_2279_p2 == 1'd0)) begin
            ap_phi_mux_storemerge16_phi_fu_665_p4 = 16'd0;
        end else if ((tmp_26_10_fu_2279_p2 == 1'd1)) begin
            ap_phi_mux_storemerge16_phi_fu_665_p4 = product_reg_q_V_14;
        end else begin
            ap_phi_mux_storemerge16_phi_fu_665_p4 = ap_phi_reg_pp0_iter0_storemerge16_reg_662;
        end
    end else begin
        ap_phi_mux_storemerge16_phi_fu_665_p4 = ap_phi_reg_pp0_iter0_storemerge16_reg_662;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_316)) begin
        if ((icmp1_fu_2322_p2 == 1'd0)) begin
            ap_phi_mux_storemerge17_phi_fu_675_p4 = product_reg_q_V_15;
        end else if ((icmp1_fu_2322_p2 == 1'd1)) begin
            ap_phi_mux_storemerge17_phi_fu_675_p4 = 16'd0;
        end else begin
            ap_phi_mux_storemerge17_phi_fu_675_p4 = ap_phi_reg_pp0_iter0_storemerge17_reg_672;
        end
    end else begin
        ap_phi_mux_storemerge17_phi_fu_675_p4 = ap_phi_reg_pp0_iter0_storemerge17_reg_672;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_316)) begin
        if ((pn_seq_V_0_load_load_fu_2355_p1 == 1'd0)) begin
            ap_phi_mux_storemerge18_phi_fu_685_p4 = data_reg_q_V_0;
        end else if ((pn_seq_V_0_load_load_fu_2355_p1 == 1'd1)) begin
            ap_phi_mux_storemerge18_phi_fu_685_p4 = tmp_4_fu_2386_p2;
        end else begin
            ap_phi_mux_storemerge18_phi_fu_685_p4 = ap_phi_reg_pp0_iter0_storemerge18_reg_682;
        end
    end else begin
        ap_phi_mux_storemerge18_phi_fu_685_p4 = ap_phi_reg_pp0_iter0_storemerge18_reg_682;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_316)) begin
        if ((pn_seq_V_1_load_load_fu_2399_p1 == 1'd1)) begin
            ap_phi_mux_storemerge19_phi_fu_694_p4 = tmp_35_1_fu_2430_p2;
        end else if ((pn_seq_V_1_load_load_fu_2399_p1 == 1'd0)) begin
            ap_phi_mux_storemerge19_phi_fu_694_p4 = data_reg_q_V_1;
        end else begin
            ap_phi_mux_storemerge19_phi_fu_694_p4 = ap_phi_reg_pp0_iter0_storemerge19_reg_691;
        end
    end else begin
        ap_phi_mux_storemerge19_phi_fu_694_p4 = ap_phi_reg_pp0_iter0_storemerge19_reg_691;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_316)) begin
        if ((pn_seq_V_2_load_load_fu_2443_p1 == 1'd0)) begin
            ap_phi_mux_storemerge20_phi_fu_703_p4 = data_reg_q_V_2;
        end else if ((pn_seq_V_2_load_load_fu_2443_p1 == 1'd1)) begin
            ap_phi_mux_storemerge20_phi_fu_703_p4 = tmp_35_2_fu_2474_p2;
        end else begin
            ap_phi_mux_storemerge20_phi_fu_703_p4 = ap_phi_reg_pp0_iter0_storemerge20_reg_700;
        end
    end else begin
        ap_phi_mux_storemerge20_phi_fu_703_p4 = ap_phi_reg_pp0_iter0_storemerge20_reg_700;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_316)) begin
        if ((pn_seq_V_3_load_load_fu_2487_p1 == 1'd1)) begin
            ap_phi_mux_storemerge21_phi_fu_712_p4 = tmp_35_3_fu_2518_p2;
        end else if ((pn_seq_V_3_load_load_fu_2487_p1 == 1'd0)) begin
            ap_phi_mux_storemerge21_phi_fu_712_p4 = data_reg_q_V_3;
        end else begin
            ap_phi_mux_storemerge21_phi_fu_712_p4 = ap_phi_reg_pp0_iter0_storemerge21_reg_709;
        end
    end else begin
        ap_phi_mux_storemerge21_phi_fu_712_p4 = ap_phi_reg_pp0_iter0_storemerge21_reg_709;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_316)) begin
        if ((pn_seq_V_4_load_load_fu_2531_p1 == 1'd0)) begin
            ap_phi_mux_storemerge22_phi_fu_721_p4 = data_reg_q_V_4;
        end else if ((pn_seq_V_4_load_load_fu_2531_p1 == 1'd1)) begin
            ap_phi_mux_storemerge22_phi_fu_721_p4 = tmp_35_4_fu_2562_p2;
        end else begin
            ap_phi_mux_storemerge22_phi_fu_721_p4 = ap_phi_reg_pp0_iter0_storemerge22_reg_718;
        end
    end else begin
        ap_phi_mux_storemerge22_phi_fu_721_p4 = ap_phi_reg_pp0_iter0_storemerge22_reg_718;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_316)) begin
        if ((pn_seq_V_5_load_load_fu_2575_p1 == 1'd1)) begin
            ap_phi_mux_storemerge23_phi_fu_730_p4 = tmp_35_5_fu_2606_p2;
        end else if ((pn_seq_V_5_load_load_fu_2575_p1 == 1'd0)) begin
            ap_phi_mux_storemerge23_phi_fu_730_p4 = data_reg_q_V_5;
        end else begin
            ap_phi_mux_storemerge23_phi_fu_730_p4 = ap_phi_reg_pp0_iter0_storemerge23_reg_727;
        end
    end else begin
        ap_phi_mux_storemerge23_phi_fu_730_p4 = ap_phi_reg_pp0_iter0_storemerge23_reg_727;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_316)) begin
        if ((pn_seq_V_6_load_load_fu_2619_p1 == 1'd0)) begin
            ap_phi_mux_storemerge24_phi_fu_739_p4 = data_reg_q_V_6;
        end else if ((pn_seq_V_6_load_load_fu_2619_p1 == 1'd1)) begin
            ap_phi_mux_storemerge24_phi_fu_739_p4 = tmp_35_6_fu_2650_p2;
        end else begin
            ap_phi_mux_storemerge24_phi_fu_739_p4 = ap_phi_reg_pp0_iter0_storemerge24_reg_736;
        end
    end else begin
        ap_phi_mux_storemerge24_phi_fu_739_p4 = ap_phi_reg_pp0_iter0_storemerge24_reg_736;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_316)) begin
        if ((pn_seq_V_7_load_load_fu_2663_p1 == 1'd1)) begin
            ap_phi_mux_storemerge25_phi_fu_748_p4 = tmp_35_7_fu_2694_p2;
        end else if ((pn_seq_V_7_load_load_fu_2663_p1 == 1'd0)) begin
            ap_phi_mux_storemerge25_phi_fu_748_p4 = data_reg_q_V_7;
        end else begin
            ap_phi_mux_storemerge25_phi_fu_748_p4 = ap_phi_reg_pp0_iter0_storemerge25_reg_745;
        end
    end else begin
        ap_phi_mux_storemerge25_phi_fu_748_p4 = ap_phi_reg_pp0_iter0_storemerge25_reg_745;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_316)) begin
        if ((pn_seq_V_8_load_load_fu_2707_p1 == 1'd0)) begin
            ap_phi_mux_storemerge26_phi_fu_757_p4 = data_reg_q_V_8;
        end else if ((pn_seq_V_8_load_load_fu_2707_p1 == 1'd1)) begin
            ap_phi_mux_storemerge26_phi_fu_757_p4 = tmp_35_8_fu_2738_p2;
        end else begin
            ap_phi_mux_storemerge26_phi_fu_757_p4 = ap_phi_reg_pp0_iter0_storemerge26_reg_754;
        end
    end else begin
        ap_phi_mux_storemerge26_phi_fu_757_p4 = ap_phi_reg_pp0_iter0_storemerge26_reg_754;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_316)) begin
        if ((pn_seq_V_9_load_load_fu_2751_p1 == 1'd1)) begin
            ap_phi_mux_storemerge27_phi_fu_766_p4 = tmp_35_9_fu_2782_p2;
        end else if ((pn_seq_V_9_load_load_fu_2751_p1 == 1'd0)) begin
            ap_phi_mux_storemerge27_phi_fu_766_p4 = data_reg_q_V_9;
        end else begin
            ap_phi_mux_storemerge27_phi_fu_766_p4 = ap_phi_reg_pp0_iter0_storemerge27_reg_763;
        end
    end else begin
        ap_phi_mux_storemerge27_phi_fu_766_p4 = ap_phi_reg_pp0_iter0_storemerge27_reg_763;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_316)) begin
        if ((pn_seq_V_10_load_load_fu_2795_p1 == 1'd0)) begin
            ap_phi_mux_storemerge28_phi_fu_775_p4 = data_reg_q_V_10;
        end else if ((pn_seq_V_10_load_load_fu_2795_p1 == 1'd1)) begin
            ap_phi_mux_storemerge28_phi_fu_775_p4 = tmp_35_s_fu_2826_p2;
        end else begin
            ap_phi_mux_storemerge28_phi_fu_775_p4 = ap_phi_reg_pp0_iter0_storemerge28_reg_772;
        end
    end else begin
        ap_phi_mux_storemerge28_phi_fu_775_p4 = ap_phi_reg_pp0_iter0_storemerge28_reg_772;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_316)) begin
        if ((pn_seq_V_11_load_load_fu_2839_p1 == 1'd1)) begin
            ap_phi_mux_storemerge29_phi_fu_784_p4 = tmp_35_10_fu_2870_p2;
        end else if ((pn_seq_V_11_load_load_fu_2839_p1 == 1'd0)) begin
            ap_phi_mux_storemerge29_phi_fu_784_p4 = data_reg_q_V_11;
        end else begin
            ap_phi_mux_storemerge29_phi_fu_784_p4 = ap_phi_reg_pp0_iter0_storemerge29_reg_781;
        end
    end else begin
        ap_phi_mux_storemerge29_phi_fu_784_p4 = ap_phi_reg_pp0_iter0_storemerge29_reg_781;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_316)) begin
        if ((icmp9_fu_2048_p2 == 1'd0)) begin
            ap_phi_mux_storemerge2_phi_fu_595_p4 = product_reg_q_V_7;
        end else if ((icmp9_fu_2048_p2 == 1'd1)) begin
            ap_phi_mux_storemerge2_phi_fu_595_p4 = 16'd0;
        end else begin
            ap_phi_mux_storemerge2_phi_fu_595_p4 = ap_phi_reg_pp0_iter0_storemerge2_reg_592;
        end
    end else begin
        ap_phi_mux_storemerge2_phi_fu_595_p4 = ap_phi_reg_pp0_iter0_storemerge2_reg_592;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_316)) begin
        if ((pn_seq_V_12_load_load_fu_2883_p1 == 1'd0)) begin
            ap_phi_mux_storemerge30_phi_fu_793_p4 = data_reg_q_V_12;
        end else if ((pn_seq_V_12_load_load_fu_2883_p1 == 1'd1)) begin
            ap_phi_mux_storemerge30_phi_fu_793_p4 = tmp_35_11_fu_2914_p2;
        end else begin
            ap_phi_mux_storemerge30_phi_fu_793_p4 = ap_phi_reg_pp0_iter0_storemerge30_reg_790;
        end
    end else begin
        ap_phi_mux_storemerge30_phi_fu_793_p4 = ap_phi_reg_pp0_iter0_storemerge30_reg_790;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_316)) begin
        if ((pn_seq_V_13_load_load_fu_2927_p1 == 1'd1)) begin
            ap_phi_mux_storemerge31_phi_fu_802_p4 = tmp_35_12_fu_2958_p2;
        end else if ((pn_seq_V_13_load_load_fu_2927_p1 == 1'd0)) begin
            ap_phi_mux_storemerge31_phi_fu_802_p4 = data_reg_q_V_13;
        end else begin
            ap_phi_mux_storemerge31_phi_fu_802_p4 = ap_phi_reg_pp0_iter0_storemerge31_reg_799;
        end
    end else begin
        ap_phi_mux_storemerge31_phi_fu_802_p4 = ap_phi_reg_pp0_iter0_storemerge31_reg_799;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_316)) begin
        if ((pn_seq_V_14_load_load_fu_2971_p1 == 1'd0)) begin
            ap_phi_mux_storemerge32_phi_fu_811_p4 = data_reg_q_V_14;
        end else if ((pn_seq_V_14_load_load_fu_2971_p1 == 1'd1)) begin
            ap_phi_mux_storemerge32_phi_fu_811_p4 = tmp_35_13_fu_3002_p2;
        end else begin
            ap_phi_mux_storemerge32_phi_fu_811_p4 = ap_phi_reg_pp0_iter0_storemerge32_reg_808;
        end
    end else begin
        ap_phi_mux_storemerge32_phi_fu_811_p4 = ap_phi_reg_pp0_iter0_storemerge32_reg_808;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_316)) begin
        if ((pn_seq_V_15_load_load_fu_3015_p1 == 1'd1)) begin
            ap_phi_mux_storemerge33_phi_fu_820_p4 = tmp_35_14_fu_3046_p2;
        end else if ((pn_seq_V_15_load_load_fu_3015_p1 == 1'd0)) begin
            ap_phi_mux_storemerge33_phi_fu_820_p4 = data_reg_q_V_15;
        end else begin
            ap_phi_mux_storemerge33_phi_fu_820_p4 = ap_phi_reg_pp0_iter0_storemerge33_reg_817;
        end
    end else begin
        ap_phi_mux_storemerge33_phi_fu_820_p4 = ap_phi_reg_pp0_iter0_storemerge33_reg_817;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_316)) begin
        if ((tmp_2_fu_1787_p2 == 1'd1)) begin
            ap_phi_mux_storemerge3_phi_fu_525_p4 = 16'd0;
        end else if ((tmp_2_fu_1787_p2 == 1'd0)) begin
            ap_phi_mux_storemerge3_phi_fu_525_p4 = product_reg_q_V_0;
        end else begin
            ap_phi_mux_storemerge3_phi_fu_525_p4 = ap_phi_reg_pp0_iter0_storemerge3_reg_522;
        end
    end else begin
        ap_phi_mux_storemerge3_phi_fu_525_p4 = ap_phi_reg_pp0_iter0_storemerge3_reg_522;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_316)) begin
        if ((icmp_fu_1830_p2 == 1'd0)) begin
            ap_phi_mux_storemerge4_phi_fu_535_p4 = product_reg_q_V_1;
        end else if ((icmp_fu_1830_p2 == 1'd1)) begin
            ap_phi_mux_storemerge4_phi_fu_535_p4 = 16'd0;
        end else begin
            ap_phi_mux_storemerge4_phi_fu_535_p4 = ap_phi_reg_pp0_iter0_storemerge4_reg_532;
        end
    end else begin
        ap_phi_mux_storemerge4_phi_fu_535_p4 = ap_phi_reg_pp0_iter0_storemerge4_reg_532;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_316)) begin
        if ((tmp_26_2_fu_1863_p2 == 1'd0)) begin
            ap_phi_mux_storemerge5_phi_fu_545_p4 = 16'd0;
        end else if ((tmp_26_2_fu_1863_p2 == 1'd1)) begin
            ap_phi_mux_storemerge5_phi_fu_545_p4 = product_reg_q_V_2;
        end else begin
            ap_phi_mux_storemerge5_phi_fu_545_p4 = ap_phi_reg_pp0_iter0_storemerge5_reg_542;
        end
    end else begin
        ap_phi_mux_storemerge5_phi_fu_545_p4 = ap_phi_reg_pp0_iter0_storemerge5_reg_542;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_316)) begin
        if ((icmp6_fu_1906_p2 == 1'd0)) begin
            ap_phi_mux_storemerge6_phi_fu_555_p4 = product_reg_q_V_3;
        end else if ((icmp6_fu_1906_p2 == 1'd1)) begin
            ap_phi_mux_storemerge6_phi_fu_555_p4 = 16'd0;
        end else begin
            ap_phi_mux_storemerge6_phi_fu_555_p4 = ap_phi_reg_pp0_iter0_storemerge6_reg_552;
        end
    end else begin
        ap_phi_mux_storemerge6_phi_fu_555_p4 = ap_phi_reg_pp0_iter0_storemerge6_reg_552;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_316)) begin
        if ((tmp_26_4_fu_1939_p2 == 1'd0)) begin
            ap_phi_mux_storemerge7_phi_fu_565_p4 = 16'd0;
        end else if ((tmp_26_4_fu_1939_p2 == 1'd1)) begin
            ap_phi_mux_storemerge7_phi_fu_565_p4 = product_reg_q_V_4;
        end else begin
            ap_phi_mux_storemerge7_phi_fu_565_p4 = ap_phi_reg_pp0_iter0_storemerge7_reg_562;
        end
    end else begin
        ap_phi_mux_storemerge7_phi_fu_565_p4 = ap_phi_reg_pp0_iter0_storemerge7_reg_562;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_316)) begin
        if ((tmp_26_5_fu_1972_p2 == 1'd1)) begin
            ap_phi_mux_storemerge8_phi_fu_575_p4 = product_reg_q_V_5;
        end else if ((tmp_26_5_fu_1972_p2 == 1'd0)) begin
            ap_phi_mux_storemerge8_phi_fu_575_p4 = 16'd0;
        end else begin
            ap_phi_mux_storemerge8_phi_fu_575_p4 = ap_phi_reg_pp0_iter0_storemerge8_reg_572;
        end
    end else begin
        ap_phi_mux_storemerge8_phi_fu_575_p4 = ap_phi_reg_pp0_iter0_storemerge8_reg_572;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_316)) begin
        if ((tmp_26_6_fu_2005_p2 == 1'd0)) begin
            ap_phi_mux_storemerge9_phi_fu_585_p4 = 16'd0;
        end else if ((tmp_26_6_fu_2005_p2 == 1'd1)) begin
            ap_phi_mux_storemerge9_phi_fu_585_p4 = product_reg_q_V_6;
        end else begin
            ap_phi_mux_storemerge9_phi_fu_585_p4 = ap_phi_reg_pp0_iter0_storemerge9_reg_582;
        end
    end else begin
        ap_phi_mux_storemerge9_phi_fu_585_p4 = ap_phi_reg_pp0_iter0_storemerge9_reg_582;
    end
end

assign ap_reset_idle_pp0 = 1'b0;

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_927_ce = 1'b1;
    end else begin
        grp_fu_927_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_941_ce = 1'b1;
    end else begin
        grp_fu_941_ce = 1'b0;
    end
end

always @ (*) begin
    if (((currentState == 2'd3) & (tmp_nbreadreq_fu_488_p4 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_data_TDATA_blk_n = i_data_TVALID;
    end else begin
        i_data_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op606_read_state1 == 1'b1) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_data_TREADY = 1'b1;
    end else begin
        i_data_TREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_reg_pp0_iter3_currentwrState_load_reg_3552 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_reg_pp0_iter2_currentwrState_load_reg_3552 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        o_data_TDATA_blk_n = o_data_V_data_V_1_state[1'd1];
    end else begin
        o_data_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((o_data_V_data_V_1_sel == 1'b1)) begin
        o_data_V_data_V_1_data_out = o_data_V_data_V_1_payload_B;
    end else begin
        o_data_V_data_V_1_data_out = o_data_V_data_V_1_payload_A;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter2_currentwrState_load_reg_3552 == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        o_data_V_data_V_1_vld_in = 1'b1;
    end else begin
        o_data_V_data_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((o_data_V_last_V_1_sel == 1'b1)) begin
        o_data_V_last_V_1_data_out = o_data_V_last_V_1_payload_B;
    end else begin
        o_data_V_last_V_1_data_out = o_data_V_last_V_1_payload_A;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter2_currentwrState_load_reg_3552 == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        o_data_V_last_V_1_vld_in = 1'b1;
    end else begin
        o_data_V_last_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (currentState == 2'd2) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        pnseq_in_V_V_ap_ack = 1'b1;
    end else begin
        pnseq_in_V_V_ap_ack = 1'b0;
    end
end

always @ (*) begin
    if (((currentState == 2'd2) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        pnseq_in_V_V_blk_n = pnseq_in_V_V_ap_vld;
    end else begin
        pnseq_in_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter4 == 1'b1) & ((o_data_V_last_V_1_ack_in == 1'b0) | (o_data_V_data_V_1_ack_in == 1'b0))) | ((1'b1 == 1'b1) & (((ap_predicate_op606_read_state1 == 1'b1) & (i_data_TVALID == 1'b0)) | ((currentState == 2'd2) & (pnseq_in_V_V_ap_vld == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter4 == 1'b1) & ((1'b1 == ap_block_state5_io) | (o_data_V_last_V_1_ack_in == 1'b0) | (o_data_V_data_V_1_ack_in == 1'b0))) | ((1'b1 == ap_block_state4_io) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'b1 == 1'b1) & (((ap_predicate_op606_read_state1 == 1'b1) & (i_data_TVALID == 1'b0)) | ((currentState == 2'd2) & (pnseq_in_V_V_ap_vld == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter4 == 1'b1) & ((1'b1 == ap_block_state5_io) | (o_data_V_last_V_1_ack_in == 1'b0) | (o_data_V_data_V_1_ack_in == 1'b0))) | ((1'b1 == ap_block_state4_io) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'b1 == 1'b1) & (((ap_predicate_op606_read_state1 == 1'b1) & (i_data_TVALID == 1'b0)) | ((currentState == 2'd2) & (pnseq_in_V_V_ap_vld == 1'b0)))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (((ap_predicate_op606_read_state1 == 1'b1) & (i_data_TVALID == 1'b0)) | ((currentState == 2'd2) & (pnseq_in_V_V_ap_vld == 1'b0)));
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_io = ((ap_reg_pp0_iter2_currentwrState_load_reg_3552 == 1'd1) & (o_data_V_data_V_1_ack_in == 1'b0));
end

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_io = ((ap_reg_pp0_iter3_currentwrState_load_reg_3552 == 1'd1) & (o_data_V_data_V_1_ack_in == 1'b0));
end

always @ (*) begin
    ap_block_state5_pp0_stage0_iter4 = ((o_data_V_last_V_1_ack_in == 1'b0) | (o_data_V_data_V_1_ack_in == 1'b0));
end

always @ (*) begin
    ap_condition_316 = ((1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_449 = ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_data_valid_reg_V_new_reg_826 = 'bx;

assign ap_phi_reg_pp0_iter0_storemerge10_reg_602 = 'bx;

assign ap_phi_reg_pp0_iter0_storemerge11_reg_612 = 'bx;

assign ap_phi_reg_pp0_iter0_storemerge12_reg_622 = 'bx;

assign ap_phi_reg_pp0_iter0_storemerge13_reg_632 = 'bx;

assign ap_phi_reg_pp0_iter0_storemerge14_reg_642 = 'bx;

assign ap_phi_reg_pp0_iter0_storemerge15_reg_652 = 'bx;

assign ap_phi_reg_pp0_iter0_storemerge16_reg_662 = 'bx;

assign ap_phi_reg_pp0_iter0_storemerge17_reg_672 = 'bx;

assign ap_phi_reg_pp0_iter0_storemerge18_reg_682 = 'bx;

assign ap_phi_reg_pp0_iter0_storemerge19_reg_691 = 'bx;

assign ap_phi_reg_pp0_iter0_storemerge20_reg_700 = 'bx;

assign ap_phi_reg_pp0_iter0_storemerge21_reg_709 = 'bx;

assign ap_phi_reg_pp0_iter0_storemerge22_reg_718 = 'bx;

assign ap_phi_reg_pp0_iter0_storemerge23_reg_727 = 'bx;

assign ap_phi_reg_pp0_iter0_storemerge24_reg_736 = 'bx;

assign ap_phi_reg_pp0_iter0_storemerge25_reg_745 = 'bx;

assign ap_phi_reg_pp0_iter0_storemerge26_reg_754 = 'bx;

assign ap_phi_reg_pp0_iter0_storemerge27_reg_763 = 'bx;

assign ap_phi_reg_pp0_iter0_storemerge28_reg_772 = 'bx;

assign ap_phi_reg_pp0_iter0_storemerge29_reg_781 = 'bx;

assign ap_phi_reg_pp0_iter0_storemerge2_reg_592 = 'bx;

assign ap_phi_reg_pp0_iter0_storemerge30_reg_790 = 'bx;

assign ap_phi_reg_pp0_iter0_storemerge31_reg_799 = 'bx;

assign ap_phi_reg_pp0_iter0_storemerge32_reg_808 = 'bx;

assign ap_phi_reg_pp0_iter0_storemerge33_reg_817 = 'bx;

assign ap_phi_reg_pp0_iter0_storemerge3_reg_522 = 'bx;

assign ap_phi_reg_pp0_iter0_storemerge4_reg_532 = 'bx;

assign ap_phi_reg_pp0_iter0_storemerge5_reg_542 = 'bx;

assign ap_phi_reg_pp0_iter0_storemerge6_reg_552 = 'bx;

assign ap_phi_reg_pp0_iter0_storemerge7_reg_562 = 'bx;

assign ap_phi_reg_pp0_iter0_storemerge8_reg_572 = 'bx;

assign ap_phi_reg_pp0_iter0_storemerge9_reg_582 = 'bx;

always @ (*) begin
    ap_predicate_op606_read_state1 = ((currentState == 2'd3) & (tmp_nbreadreq_fu_488_p4 == 1'd1));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign currentState_load_load_fu_3079_p1 = currentState;

assign currentwrState_load_load_fu_850_p1 = currentwrState;

assign grp_fu_843_p3 = data_valid_reg_V[32'd7];

assign grp_fu_927_p0 = lhs_V_10_cast_fu_923_p1;

assign grp_fu_927_p1 = lhs_V_10_cast_fu_923_p1;

assign grp_fu_941_p0 = lhs_V_11_cast_fu_937_p1;

assign grp_fu_941_p1 = lhs_V_11_cast_fu_937_p1;

assign icmp1_fu_2322_p2 = ((tmp_12_fu_2312_p4 == 6'd0) ? 1'b1 : 1'b0);

assign icmp6_fu_1906_p2 = ((tmp_10_fu_1896_p4 == 8'd0) ? 1'b1 : 1'b0);

assign icmp9_fu_2048_p2 = ((tmp_11_fu_2038_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_fu_1830_p2 = ((tmp_9_fu_1820_p4 == 9'd0) ? 1'b1 : 1'b0);

assign lhs_V_10_1_fu_1399_p1 = $signed(adder_in_reg_i_V_2);

assign lhs_V_10_2_fu_1455_p1 = $signed(adder_in_reg_i_V_4);

assign lhs_V_10_3_fu_1511_p1 = $signed(adder_in_reg_i_V_6);

assign lhs_V_10_4_fu_1567_p1 = $signed(adder_in_reg_i_V_8);

assign lhs_V_10_5_fu_1623_p1 = $signed(adder_in_reg_i_V_10);

assign lhs_V_10_6_fu_1679_p1 = $signed(adder_in_reg_i_V_12);

assign lhs_V_10_7_fu_1735_p1 = $signed(adder_in_reg_i_V_14);

assign lhs_V_10_cast_fu_923_p1 = $signed(sum_reg_i_V);

assign lhs_V_11_1_fu_1427_p1 = $signed(adder_in_reg_q_V_2);

assign lhs_V_11_2_fu_1483_p1 = $signed(adder_in_reg_q_V_4);

assign lhs_V_11_3_fu_1539_p1 = $signed(adder_in_reg_q_V_6);

assign lhs_V_11_4_fu_1595_p1 = $signed(adder_in_reg_q_V_8);

assign lhs_V_11_5_fu_1651_p1 = $signed(adder_in_reg_q_V_10);

assign lhs_V_11_6_fu_1707_p1 = $signed(adder_in_reg_q_V_12);

assign lhs_V_11_7_fu_1763_p1 = $signed(adder_in_reg_q_V_14);

assign lhs_V_11_cast_fu_937_p1 = $signed(sum_reg_q_V);

assign lhs_V_1_cast_fu_3512_p1 = $signed(sq_reg_i_V);

assign lhs_V_1_fu_979_p1 = $signed(sum3_reg_q_V_0);

assign lhs_V_2_fu_1371_p1 = $signed(adder_in_reg_q_V_0);

assign lhs_V_6_1_fu_1063_p1 = $signed(sum2_reg_i_V_2);

assign lhs_V_6_fu_1007_p1 = $signed(sum2_reg_i_V_0);

assign lhs_V_7_1_fu_1091_p1 = $signed(sum2_reg_q_V_2);

assign lhs_V_7_fu_1035_p1 = $signed(sum2_reg_q_V_0);

assign lhs_V_8_1_fu_1175_p1 = $signed(sum1_reg_i_V_2);

assign lhs_V_8_2_fu_1231_p1 = $signed(sum1_reg_i_V_4);

assign lhs_V_8_3_fu_1287_p1 = $signed(sum1_reg_i_V_6);

assign lhs_V_8_fu_1119_p1 = $signed(sum1_reg_i_V_0);

assign lhs_V_9_1_fu_1203_p1 = $signed(sum1_reg_q_V_2);

assign lhs_V_9_2_fu_1259_p1 = $signed(sum1_reg_q_V_4);

assign lhs_V_9_3_fu_1315_p1 = $signed(sum1_reg_q_V_6);

assign lhs_V_9_fu_1147_p1 = $signed(sum1_reg_q_V_0);

assign lhs_V_cast_fu_869_p1 = pnseq_len_reg_V;

assign lhs_V_fu_951_p1 = $signed(sum3_reg_i_V_0);

assign lhs_V_s_fu_1343_p1 = $signed(adder_in_reg_i_V_0);

assign o_data_TDATA = o_data_V_data_V_1_data_out;

assign o_data_TLAST = o_data_V_last_V_1_data_out;

assign o_data_TVALID = o_data_V_last_V_1_state[1'd0];

assign o_data_V_data_V_1_ack_in = o_data_V_data_V_1_state[1'd1];

assign o_data_V_data_V_1_ack_out = o_data_TREADY;

assign o_data_V_data_V_1_load_A = (o_data_V_data_V_1_state_cmp_full & ~o_data_V_data_V_1_sel_wr);

assign o_data_V_data_V_1_load_B = (o_data_V_data_V_1_state_cmp_full & o_data_V_data_V_1_sel_wr);

assign o_data_V_data_V_1_sel = o_data_V_data_V_1_sel_rd;

assign o_data_V_data_V_1_state_cmp_full = ((o_data_V_data_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign o_data_V_data_V_1_vld_out = o_data_V_data_V_1_state[1'd0];

assign o_data_V_last_V_1_ack_in = o_data_V_last_V_1_state[1'd1];

assign o_data_V_last_V_1_ack_out = o_data_TREADY;

assign o_data_V_last_V_1_load_A = (o_data_V_last_V_1_state_cmp_full & ~o_data_V_last_V_1_sel_wr);

assign o_data_V_last_V_1_load_B = (o_data_V_last_V_1_state_cmp_full & o_data_V_last_V_1_sel_wr);

assign o_data_V_last_V_1_sel = o_data_V_last_V_1_sel_rd;

assign o_data_V_last_V_1_state_cmp_full = ((o_data_V_last_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign o_data_V_last_V_1_vld_out = o_data_V_last_V_1_state[1'd0];

assign out_sample_data_V_fu_3503_p1 = $signed(tmp_7_fu_3493_p4);

assign p_Result_1_fu_3087_p2 = data_valid_reg_V << 24'd1;

assign p_Result_2_fu_3063_p5 = {{tmp_13_fu_3059_p1}, {data_valid_reg_V[0:0]}};

assign p_Result_s_fu_3304_p3 = {{tmp_13_fu_3059_p1}, {1'd1}};

assign pn_seq_V_0_load_load_fu_2355_p1 = pn_seq_V_0;

assign pn_seq_V_10_load_load_fu_2795_p1 = pn_seq_V_10;

assign pn_seq_V_11_load_load_fu_2839_p1 = pn_seq_V_11;

assign pn_seq_V_12_load_load_fu_2883_p1 = pn_seq_V_12;

assign pn_seq_V_13_load_load_fu_2927_p1 = pn_seq_V_13;

assign pn_seq_V_14_load_load_fu_2971_p1 = pn_seq_V_14;

assign pn_seq_V_15_load_load_fu_3015_p1 = pn_seq_V_15;

assign pn_seq_V_1_load_load_fu_2399_p1 = pn_seq_V_1;

assign pn_seq_V_2_load_load_fu_2443_p1 = pn_seq_V_2;

assign pn_seq_V_3_load_load_fu_2487_p1 = pn_seq_V_3;

assign pn_seq_V_4_load_load_fu_2531_p1 = pn_seq_V_4;

assign pn_seq_V_5_load_load_fu_2575_p1 = pn_seq_V_5;

assign pn_seq_V_6_load_load_fu_2619_p1 = pn_seq_V_6;

assign pn_seq_V_7_load_load_fu_2663_p1 = pn_seq_V_7;

assign pn_seq_V_8_load_load_fu_2707_p1 = pn_seq_V_8;

assign pn_seq_V_9_load_load_fu_2751_p1 = pn_seq_V_9;

assign r_V_10_1_fu_1411_p2 = ($signed(rhs_V_9_1_fu_1407_p1) + $signed(lhs_V_10_1_fu_1399_p1));

assign r_V_10_2_fu_1467_p2 = ($signed(rhs_V_9_2_fu_1463_p1) + $signed(lhs_V_10_2_fu_1455_p1));

assign r_V_10_3_fu_1523_p2 = ($signed(rhs_V_9_3_fu_1519_p1) + $signed(lhs_V_10_3_fu_1511_p1));

assign r_V_10_4_fu_1579_p2 = ($signed(rhs_V_9_4_fu_1575_p1) + $signed(lhs_V_10_4_fu_1567_p1));

assign r_V_10_5_fu_1635_p2 = ($signed(rhs_V_9_5_fu_1631_p1) + $signed(lhs_V_10_5_fu_1623_p1));

assign r_V_10_6_fu_1691_p2 = ($signed(rhs_V_9_6_fu_1687_p1) + $signed(lhs_V_10_6_fu_1679_p1));

assign r_V_10_7_fu_1747_p2 = ($signed(rhs_V_9_7_fu_1743_p1) + $signed(lhs_V_10_7_fu_1735_p1));

assign r_V_10_fu_1383_p2 = ($signed(rhs_V_s_fu_1379_p1) + $signed(lhs_V_2_fu_1371_p1));

assign r_V_11_1_fu_1439_p2 = ($signed(rhs_V_10_1_fu_1435_p1) + $signed(lhs_V_11_1_fu_1427_p1));

assign r_V_11_2_fu_1495_p2 = ($signed(rhs_V_10_2_fu_1491_p1) + $signed(lhs_V_11_2_fu_1483_p1));

assign r_V_11_3_fu_1551_p2 = ($signed(rhs_V_10_3_fu_1547_p1) + $signed(lhs_V_11_3_fu_1539_p1));

assign r_V_11_4_fu_1607_p2 = ($signed(rhs_V_10_4_fu_1603_p1) + $signed(lhs_V_11_4_fu_1595_p1));

assign r_V_11_5_fu_1663_p2 = ($signed(rhs_V_10_5_fu_1659_p1) + $signed(lhs_V_11_5_fu_1651_p1));

assign r_V_11_6_fu_1719_p2 = ($signed(rhs_V_10_6_fu_1715_p1) + $signed(lhs_V_11_6_fu_1707_p1));

assign r_V_11_7_fu_1775_p2 = ($signed(rhs_V_10_7_fu_1771_p1) + $signed(lhs_V_11_7_fu_1763_p1));

assign r_V_1_fu_3524_p2 = ($signed(lhs_V_1_cast_fu_3512_p1) + $signed(rhs_V_cast_fu_3520_p1));

assign r_V_4_fu_963_p2 = ($signed(lhs_V_fu_951_p1) + $signed(rhs_V_fu_959_p1));

assign r_V_5_fu_991_p2 = ($signed(lhs_V_1_fu_979_p1) + $signed(rhs_V_1_fu_987_p1));

assign r_V_6_1_fu_1075_p2 = ($signed(rhs_V_5_1_fu_1071_p1) + $signed(lhs_V_6_1_fu_1063_p1));

assign r_V_6_fu_1019_p2 = ($signed(rhs_V_5_fu_1015_p1) + $signed(lhs_V_6_fu_1007_p1));

assign r_V_7_1_fu_1103_p2 = ($signed(rhs_V_6_1_fu_1099_p1) + $signed(lhs_V_7_1_fu_1091_p1));

assign r_V_7_fu_1047_p2 = ($signed(rhs_V_6_fu_1043_p1) + $signed(lhs_V_7_fu_1035_p1));

assign r_V_8_1_fu_1187_p2 = ($signed(rhs_V_7_1_fu_1183_p1) + $signed(lhs_V_8_1_fu_1175_p1));

assign r_V_8_2_fu_1243_p2 = ($signed(rhs_V_7_2_fu_1239_p1) + $signed(lhs_V_8_2_fu_1231_p1));

assign r_V_8_3_fu_1299_p2 = ($signed(rhs_V_7_3_fu_1295_p1) + $signed(lhs_V_8_3_fu_1287_p1));

assign r_V_8_fu_1131_p2 = ($signed(rhs_V_7_fu_1127_p1) + $signed(lhs_V_8_fu_1119_p1));

assign r_V_9_1_fu_1215_p2 = ($signed(rhs_V_8_1_fu_1211_p1) + $signed(lhs_V_9_1_fu_1203_p1));

assign r_V_9_2_fu_1271_p2 = ($signed(rhs_V_8_2_fu_1267_p1) + $signed(lhs_V_9_2_fu_1259_p1));

assign r_V_9_3_fu_1327_p2 = ($signed(rhs_V_8_3_fu_1323_p1) + $signed(lhs_V_9_3_fu_1315_p1));

assign r_V_9_fu_1159_p2 = ($signed(rhs_V_8_fu_1155_p1) + $signed(lhs_V_9_fu_1147_p1));

assign r_V_fu_873_p2 = ($signed(lhs_V_cast_fu_869_p1) + $signed(11'd2047));

assign r_V_s_fu_1355_p2 = ($signed(rhs_V_9_fu_1351_p1) + $signed(lhs_V_s_fu_1343_p1));

assign rhs_V_10_1_fu_1435_p1 = $signed(adder_in_reg_q_V_3);

assign rhs_V_10_2_fu_1491_p1 = $signed(adder_in_reg_q_V_5);

assign rhs_V_10_3_fu_1547_p1 = $signed(adder_in_reg_q_V_7);

assign rhs_V_10_4_fu_1603_p1 = $signed(adder_in_reg_q_V_9);

assign rhs_V_10_5_fu_1659_p1 = $signed(adder_in_reg_q_V_11);

assign rhs_V_10_6_fu_1715_p1 = $signed(adder_in_reg_q_V_13);

assign rhs_V_10_7_fu_1771_p1 = $signed(adder_in_reg_q_V_15);

assign rhs_V_1_fu_987_p1 = $signed(sum3_reg_q_V_1);

assign rhs_V_5_1_fu_1071_p1 = $signed(sum2_reg_i_V_3);

assign rhs_V_5_fu_1015_p1 = $signed(sum2_reg_i_V_1);

assign rhs_V_6_1_fu_1099_p1 = $signed(sum2_reg_q_V_3);

assign rhs_V_6_fu_1043_p1 = $signed(sum2_reg_q_V_1);

assign rhs_V_7_1_fu_1183_p1 = $signed(sum1_reg_i_V_3);

assign rhs_V_7_2_fu_1239_p1 = $signed(sum1_reg_i_V_5);

assign rhs_V_7_3_fu_1295_p1 = $signed(sum1_reg_i_V_7);

assign rhs_V_7_fu_1127_p1 = $signed(sum1_reg_i_V_1);

assign rhs_V_8_1_fu_1211_p1 = $signed(sum1_reg_q_V_3);

assign rhs_V_8_2_fu_1267_p1 = $signed(sum1_reg_q_V_5);

assign rhs_V_8_3_fu_1323_p1 = $signed(sum1_reg_q_V_7);

assign rhs_V_8_fu_1155_p1 = $signed(sum1_reg_q_V_1);

assign rhs_V_9_1_fu_1407_p1 = $signed(adder_in_reg_i_V_3);

assign rhs_V_9_2_fu_1463_p1 = $signed(adder_in_reg_i_V_5);

assign rhs_V_9_3_fu_1519_p1 = $signed(adder_in_reg_i_V_7);

assign rhs_V_9_4_fu_1575_p1 = $signed(adder_in_reg_i_V_9);

assign rhs_V_9_5_fu_1631_p1 = $signed(adder_in_reg_i_V_11);

assign rhs_V_9_6_fu_1687_p1 = $signed(adder_in_reg_i_V_13);

assign rhs_V_9_7_fu_1743_p1 = $signed(adder_in_reg_i_V_15);

assign rhs_V_9_fu_1351_p1 = $signed(adder_in_reg_i_V_1);

assign rhs_V_cast_fu_3520_p1 = $signed(sq_reg_q_V);

assign rhs_V_fu_959_p1 = $signed(sum3_reg_i_V_1);

assign rhs_V_s_fu_1379_p1 = $signed(adder_in_reg_q_V_1);

assign start_V_read_read_fu_482_p2 = start_V;

assign storemerge1_fu_3441_p2 = ($signed(storemerge849_in_fu_3427_p3) + $signed(10'd1023));

assign storemerge34_fu_3419_p3 = ((tmp_3_fu_3413_p2[0:0] === 1'b1) ? 2'd3 : 2'd2);

assign storemerge849_in_fu_3427_p3 = ((tmp_3_fu_3413_p2[0:0] === 1'b1) ? pnseq_len_reg_V : load_cnt_V);

assign storemerge_fu_899_p3 = ((tmp_last_V_fu_887_p2[0:0] === 1'b1) ? 10'd0 : tmp_s_fu_893_p2);

assign tmp_10_fu_1896_p4 = {{pnseq_len_reg_V[9:2]}};

assign tmp_11_fu_2038_p4 = {{pnseq_len_reg_V[9:3]}};

assign tmp_12_fu_2312_p4 = {{pnseq_len_reg_V[9:4]}};

assign tmp_13_fu_3059_p1 = data_valid_reg_V[22:0];

assign tmp_14_fu_3313_p1 = load_cnt_V[8:0];

assign tmp_15_fu_3278_p1 = i_data_TDATA[15:0];

assign tmp_1_fu_3459_p2 = ($signed(pnseq_len_V) + $signed(10'd1023));

assign tmp_26_10_fu_2279_p2 = ((pnseq_len_reg_V > 10'd14) ? 1'b1 : 1'b0);

assign tmp_26_1_fu_2180_p2 = ((pnseq_len_reg_V > 10'd11) ? 1'b1 : 1'b0);

assign tmp_26_2_fu_1863_p2 = ((pnseq_len_reg_V > 10'd2) ? 1'b1 : 1'b0);

assign tmp_26_3_fu_2213_p2 = ((pnseq_len_reg_V > 10'd12) ? 1'b1 : 1'b0);

assign tmp_26_4_fu_1939_p2 = ((pnseq_len_reg_V > 10'd4) ? 1'b1 : 1'b0);

assign tmp_26_5_fu_1972_p2 = ((pnseq_len_reg_V > 10'd5) ? 1'b1 : 1'b0);

assign tmp_26_6_fu_2005_p2 = ((pnseq_len_reg_V > 10'd6) ? 1'b1 : 1'b0);

assign tmp_26_7_fu_2246_p2 = ((pnseq_len_reg_V > 10'd13) ? 1'b1 : 1'b0);

assign tmp_26_8_fu_2081_p2 = ((pnseq_len_reg_V > 10'd8) ? 1'b1 : 1'b0);

assign tmp_26_9_fu_2114_p2 = ((pnseq_len_reg_V > 10'd9) ? 1'b1 : 1'b0);

assign tmp_26_s_fu_2147_p2 = ((pnseq_len_reg_V > 10'd10) ? 1'b1 : 1'b0);

assign tmp_2_fu_1787_p2 = ((pnseq_len_reg_V == 10'd0) ? 1'b1 : 1'b0);

assign tmp_35_10_fu_2870_p2 = (16'd0 - data_reg_q_V_11);

assign tmp_35_11_fu_2914_p2 = (16'd0 - data_reg_q_V_12);

assign tmp_35_12_fu_2958_p2 = (16'd0 - data_reg_q_V_13);

assign tmp_35_13_fu_3002_p2 = (16'd0 - data_reg_q_V_14);

assign tmp_35_14_fu_3046_p2 = (16'd0 - data_reg_q_V_15);

assign tmp_35_1_fu_2430_p2 = (16'd0 - data_reg_q_V_1);

assign tmp_35_2_fu_2474_p2 = (16'd0 - data_reg_q_V_2);

assign tmp_35_3_fu_2518_p2 = (16'd0 - data_reg_q_V_3);

assign tmp_35_4_fu_2562_p2 = (16'd0 - data_reg_q_V_4);

assign tmp_35_5_fu_2606_p2 = (16'd0 - data_reg_q_V_5);

assign tmp_35_6_fu_2650_p2 = (16'd0 - data_reg_q_V_6);

assign tmp_35_7_fu_2694_p2 = (16'd0 - data_reg_q_V_7);

assign tmp_35_8_fu_2738_p2 = (16'd0 - data_reg_q_V_8);

assign tmp_35_9_fu_2782_p2 = (16'd0 - data_reg_q_V_9);

assign tmp_35_s_fu_2826_p2 = (16'd0 - data_reg_q_V_10);

assign tmp_36_10_fu_2852_p2 = (16'd0 - data_reg_i_V_11);

assign tmp_36_11_fu_2896_p2 = (16'd0 - data_reg_i_V_12);

assign tmp_36_12_fu_2940_p2 = (16'd0 - data_reg_i_V_13);

assign tmp_36_13_fu_2984_p2 = (16'd0 - data_reg_i_V_14);

assign tmp_36_14_fu_3028_p2 = (16'd0 - data_reg_i_V_15);

assign tmp_36_1_fu_2412_p2 = (16'd0 - data_reg_i_V_1);

assign tmp_36_2_fu_2456_p2 = (16'd0 - data_reg_i_V_2);

assign tmp_36_3_fu_2500_p2 = (16'd0 - data_reg_i_V_3);

assign tmp_36_4_fu_2544_p2 = (16'd0 - data_reg_i_V_4);

assign tmp_36_5_fu_2588_p2 = (16'd0 - data_reg_i_V_5);

assign tmp_36_6_fu_2632_p2 = (16'd0 - data_reg_i_V_6);

assign tmp_36_7_fu_2676_p2 = (16'd0 - data_reg_i_V_7);

assign tmp_36_8_fu_2720_p2 = (16'd0 - data_reg_i_V_8);

assign tmp_36_9_fu_2764_p2 = (16'd0 - data_reg_i_V_9);

assign tmp_36_s_fu_2808_p2 = (16'd0 - data_reg_i_V_10);

assign tmp_3_fu_3413_p2 = ((load_cnt_V == 10'd0) ? 1'b1 : 1'b0);

assign tmp_4_fu_2386_p2 = (16'd0 - data_reg_q_V_0);

assign tmp_5_fu_2368_p2 = (16'd0 - data_reg_i_V_0);

assign tmp_7_fu_3493_p4 = {{sq_sum_V[40:17]}};

assign tmp_8_cast_fu_883_p1 = out_sample_cnt_V;

assign tmp_9_fu_1820_p4 = {{pnseq_len_reg_V[9:1]}};

assign tmp_last_V_fu_887_p2 = ((tmp_8_cast_fu_883_p1 == r_V_fu_873_p2) ? 1'b1 : 1'b0);

assign tmp_nbreadreq_fu_488_p4 = i_data_TVALID;

assign tmp_s_fu_893_p2 = (out_sample_cnt_V + 10'd1);

endmodule //correlator
