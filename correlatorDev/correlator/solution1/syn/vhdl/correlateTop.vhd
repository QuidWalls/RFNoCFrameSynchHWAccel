-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.2
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity correlateTop is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    i_data_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    i_data_TVALID : IN STD_LOGIC;
    i_data_TREADY : OUT STD_LOGIC;
    i_data_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    o_data_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    o_data_TVALID : OUT STD_LOGIC;
    o_data_TREADY : IN STD_LOGIC;
    o_data_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    start_V : IN STD_LOGIC_VECTOR (0 downto 0);
    phaseClass_V : IN STD_LOGIC_VECTOR (3 downto 0) );
end;


architecture behav of correlateTop is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "correlateTop,hls_ip_2017_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7k160tfbg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=8.610667,HLS_SYN_LAT=4,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=1,HLS_SYN_FF=1211,HLS_SYN_LUT=690}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv16_C80 : STD_LOGIC_VECTOR (15 downto 0) := "0000110010000000";

    signal ap_rst_n_inv : STD_LOGIC;
    signal i_data_data_V_0_data_out : STD_LOGIC_VECTOR (31 downto 0);
    signal i_data_data_V_0_vld_in : STD_LOGIC;
    signal i_data_data_V_0_vld_out : STD_LOGIC;
    signal i_data_data_V_0_ack_in : STD_LOGIC;
    signal i_data_data_V_0_ack_out : STD_LOGIC;
    signal i_data_data_V_0_payload_A : STD_LOGIC_VECTOR (31 downto 0);
    signal i_data_data_V_0_payload_B : STD_LOGIC_VECTOR (31 downto 0);
    signal i_data_data_V_0_sel_rd : STD_LOGIC := '0';
    signal i_data_data_V_0_sel_wr : STD_LOGIC := '0';
    signal i_data_data_V_0_sel : STD_LOGIC;
    signal i_data_data_V_0_load_A : STD_LOGIC;
    signal i_data_data_V_0_load_B : STD_LOGIC;
    signal i_data_data_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal i_data_data_V_0_state_cmp_full : STD_LOGIC;
    signal i_data_last_V_0_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal i_data_last_V_0_vld_in : STD_LOGIC;
    signal i_data_last_V_0_vld_out : STD_LOGIC;
    signal i_data_last_V_0_ack_in : STD_LOGIC;
    signal i_data_last_V_0_ack_out : STD_LOGIC;
    signal i_data_last_V_0_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal i_data_last_V_0_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal i_data_last_V_0_sel_rd : STD_LOGIC := '0';
    signal i_data_last_V_0_sel_wr : STD_LOGIC := '0';
    signal i_data_last_V_0_sel : STD_LOGIC;
    signal i_data_last_V_0_load_A : STD_LOGIC;
    signal i_data_last_V_0_load_B : STD_LOGIC;
    signal i_data_last_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal i_data_last_V_0_state_cmp_full : STD_LOGIC;
    signal o_data_data_V_1_data_out : STD_LOGIC_VECTOR (31 downto 0);
    signal o_data_data_V_1_vld_in : STD_LOGIC;
    signal o_data_data_V_1_vld_out : STD_LOGIC;
    signal o_data_data_V_1_ack_in : STD_LOGIC;
    signal o_data_data_V_1_ack_out : STD_LOGIC;
    signal o_data_data_V_1_payload_A : STD_LOGIC_VECTOR (31 downto 0);
    signal o_data_data_V_1_payload_B : STD_LOGIC_VECTOR (31 downto 0);
    signal o_data_data_V_1_sel_rd : STD_LOGIC := '0';
    signal o_data_data_V_1_sel_wr : STD_LOGIC := '0';
    signal o_data_data_V_1_sel : STD_LOGIC;
    signal o_data_data_V_1_load_A : STD_LOGIC;
    signal o_data_data_V_1_load_B : STD_LOGIC;
    signal o_data_data_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal o_data_data_V_1_state_cmp_full : STD_LOGIC;
    signal o_data_last_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal o_data_last_V_1_vld_in : STD_LOGIC;
    signal o_data_last_V_1_vld_out : STD_LOGIC;
    signal o_data_last_V_1_ack_in : STD_LOGIC;
    signal o_data_last_V_1_ack_out : STD_LOGIC;
    signal o_data_last_V_1_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal o_data_last_V_1_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal o_data_last_V_1_sel_rd : STD_LOGIC := '0';
    signal o_data_last_V_1_sel_wr : STD_LOGIC := '0';
    signal o_data_last_V_1_sel : STD_LOGIC;
    signal o_data_last_V_1_load_A : STD_LOGIC;
    signal o_data_last_V_1_load_B : STD_LOGIC;
    signal o_data_last_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal o_data_last_V_1_state_cmp_full : STD_LOGIC;
    signal currentState : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal loadCount_V : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal cor_phaseClass0_V_14 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal cor_phaseClass0_V_13 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal cor_phaseClass0_V_12 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal cor_phaseClass0_V_11 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal cor_phaseClass0_V_10 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal cor_phaseClass0_V_9 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal cor_phaseClass0_V_8 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal cor_phaseClass0_V_7 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal cor_phaseClass0_V_6 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal cor_phaseClass0_V_5 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal cor_phaseClass0_V_4 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal cor_phaseClass0_V_3 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal cor_phaseClass0_V_2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal cor_phaseClass0_V_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal cor_phaseClass0_V_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal i_data_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_flag00000000 : BOOLEAN;
    signal currentState_load_reg_503 : STD_LOGIC_VECTOR (0 downto 0);
    signal o_data_TDATA_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_reg_pp0_iter2_currentState_load_reg_503 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_reg_pp0_iter3_currentState_load_reg_503 : STD_LOGIC_VECTOR (0 downto 0);
    signal start_V_read_read_fu_102_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal start_V_read_reg_499 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state4_io : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state5_io : BOOLEAN;
    signal ap_block_pp0_stage0_flag00011001 : BOOLEAN;
    signal ap_reg_pp0_iter1_start_V_read_reg_499 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter2_start_V_read_reg_499 : STD_LOGIC_VECTOR (0 downto 0);
    signal currentState_load_load_fu_154_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter1_currentState_load_reg_503 : STD_LOGIC_VECTOR (0 downto 0);
    signal cond_i_fu_158_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cond_i_reg_507 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_data_last_V_tmp_reg_511 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter2_i_data_last_V_tmp_reg_511 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_i_fu_436_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1_i_reg_516 : STD_LOGIC_VECTOR (15 downto 0);
    signal res_V_reg_521 : STD_LOGIC_VECTOR (15 downto 0);
    signal o_data_data_V_tmp_fu_483_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_flag00011011 : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal p_Val2_2_5_i_fu_411_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_precharge_reg_pp0_iter1_p_Val2_1_reg_126 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_1_phi_fu_130_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_precharge_reg_pp0_iter0_p_Val2_1_reg_126 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_5_2_i_fu_368_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_precharge_reg_pp0_iter1_p_Val2_2_reg_137 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_2_phi_fu_141_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_precharge_reg_pp0_iter0_p_Val2_2_reg_137 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_2_fu_466_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_172_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage0_flag00001001 : BOOLEAN;
    signal tmp2_fu_338_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp1_fu_332_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp5_fu_356_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp4_fu_350_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp3_fu_362_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_fu_344_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp8_fu_381_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp7_fu_375_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp11_fu_399_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp10_fu_393_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp9_fu_405_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp6_fu_387_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_i_fu_418_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_8_i_fu_430_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_9_i_fu_424_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_3_fu_492_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_3_fu_478_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_3_fu_492_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal OP1_V_cast_fu_444_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_Val2_3_fu_492_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_375 : BOOLEAN;

    component correlateTop_mul_bkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (20 downto 0) );
    end component;



begin
    correlateTop_mul_bkb_U1 : component correlateTop_mul_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 21)
    port map (
        din0 => p_Val2_3_fu_492_p0,
        din1 => p_Val2_3_fu_492_p1,
        dout => p_Val2_3_fu_492_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    cor_phaseClass0_V_0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                cor_phaseClass0_V_0 <= ap_const_lv16_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = currentState_load_reg_503) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_1 = cond_i_reg_507))) then 
                    cor_phaseClass0_V_0 <= tmp_1_fu_172_p1;
                end if; 
            end if;
        end if;
    end process;


    cor_phaseClass0_V_1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                cor_phaseClass0_V_1 <= ap_const_lv16_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = currentState_load_reg_503) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_1 = cond_i_reg_507))) then 
                    cor_phaseClass0_V_1 <= cor_phaseClass0_V_0;
                end if; 
            end if;
        end if;
    end process;


    cor_phaseClass0_V_10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                cor_phaseClass0_V_10 <= ap_const_lv16_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = currentState_load_reg_503) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_1 = cond_i_reg_507))) then 
                    cor_phaseClass0_V_10 <= cor_phaseClass0_V_9;
                end if; 
            end if;
        end if;
    end process;


    cor_phaseClass0_V_11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                cor_phaseClass0_V_11 <= ap_const_lv16_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = currentState_load_reg_503) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_1 = cond_i_reg_507))) then 
                    cor_phaseClass0_V_11 <= cor_phaseClass0_V_10;
                end if; 
            end if;
        end if;
    end process;


    cor_phaseClass0_V_12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                cor_phaseClass0_V_12 <= ap_const_lv16_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = currentState_load_reg_503) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_1 = cond_i_reg_507))) then 
                    cor_phaseClass0_V_12 <= cor_phaseClass0_V_11;
                end if; 
            end if;
        end if;
    end process;


    cor_phaseClass0_V_13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                cor_phaseClass0_V_13 <= ap_const_lv16_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = currentState_load_reg_503) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_1 = cond_i_reg_507))) then 
                    cor_phaseClass0_V_13 <= cor_phaseClass0_V_12;
                end if; 
            end if;
        end if;
    end process;


    cor_phaseClass0_V_14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                cor_phaseClass0_V_14 <= ap_const_lv16_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = currentState_load_reg_503) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_1 = cond_i_reg_507))) then 
                    cor_phaseClass0_V_14 <= cor_phaseClass0_V_13;
                end if; 
            end if;
        end if;
    end process;


    cor_phaseClass0_V_2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                cor_phaseClass0_V_2 <= ap_const_lv16_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = currentState_load_reg_503) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_1 = cond_i_reg_507))) then 
                    cor_phaseClass0_V_2 <= cor_phaseClass0_V_1;
                end if; 
            end if;
        end if;
    end process;


    cor_phaseClass0_V_3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                cor_phaseClass0_V_3 <= ap_const_lv16_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = currentState_load_reg_503) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_1 = cond_i_reg_507))) then 
                    cor_phaseClass0_V_3 <= cor_phaseClass0_V_2;
                end if; 
            end if;
        end if;
    end process;


    cor_phaseClass0_V_4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                cor_phaseClass0_V_4 <= ap_const_lv16_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = currentState_load_reg_503) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_1 = cond_i_reg_507))) then 
                    cor_phaseClass0_V_4 <= cor_phaseClass0_V_3;
                end if; 
            end if;
        end if;
    end process;


    cor_phaseClass0_V_5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                cor_phaseClass0_V_5 <= ap_const_lv16_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = currentState_load_reg_503) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_1 = cond_i_reg_507))) then 
                    cor_phaseClass0_V_5 <= cor_phaseClass0_V_4;
                end if; 
            end if;
        end if;
    end process;


    cor_phaseClass0_V_6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                cor_phaseClass0_V_6 <= ap_const_lv16_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = currentState_load_reg_503) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_1 = cond_i_reg_507))) then 
                    cor_phaseClass0_V_6 <= cor_phaseClass0_V_5;
                end if; 
            end if;
        end if;
    end process;


    cor_phaseClass0_V_7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                cor_phaseClass0_V_7 <= ap_const_lv16_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = currentState_load_reg_503) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_1 = cond_i_reg_507))) then 
                    cor_phaseClass0_V_7 <= cor_phaseClass0_V_6;
                end if; 
            end if;
        end if;
    end process;


    cor_phaseClass0_V_8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                cor_phaseClass0_V_8 <= ap_const_lv16_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = currentState_load_reg_503) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_1 = cond_i_reg_507))) then 
                    cor_phaseClass0_V_8 <= cor_phaseClass0_V_7;
                end if; 
            end if;
        end if;
    end process;


    cor_phaseClass0_V_9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                cor_phaseClass0_V_9 <= ap_const_lv16_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = currentState_load_reg_503) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_1 = cond_i_reg_507))) then 
                    cor_phaseClass0_V_9 <= cor_phaseClass0_V_8;
                end if; 
            end if;
        end if;
    end process;


    currentState_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                currentState <= ap_const_lv1_0;
            else
                if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_lv1_0 = currentState_load_load_fu_154_p1) and (ap_const_lv1_1 = start_V_read_read_fu_102_p2)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_1 = currentState_load_load_fu_154_p1) and (ap_const_logic_1 = ap_const_logic_1)))) then 
                    currentState <= ap_const_lv1_1;
                end if; 
            end if;
        end if;
    end process;


    i_data_data_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                i_data_data_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = i_data_data_V_0_ack_out) and (ap_const_logic_1 = i_data_data_V_0_vld_out))) then 
                                        i_data_data_V_0_sel_rd <= not(i_data_data_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    i_data_data_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                i_data_data_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = i_data_data_V_0_vld_in) and (ap_const_logic_1 = i_data_data_V_0_ack_in))) then 
                                        i_data_data_V_0_sel_wr <= not(i_data_data_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    i_data_data_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                i_data_data_V_0_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = i_data_data_V_0_vld_in) and (ap_const_logic_1 = i_data_data_V_0_ack_out) and (i_data_data_V_0_state = ap_const_lv2_3)) or ((ap_const_logic_0 = i_data_data_V_0_vld_in) and (i_data_data_V_0_state = ap_const_lv2_2)))) then 
                    i_data_data_V_0_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = i_data_data_V_0_vld_in) and (ap_const_logic_0 = i_data_data_V_0_ack_out) and (i_data_data_V_0_state = ap_const_lv2_3)) or ((ap_const_logic_0 = i_data_data_V_0_ack_out) and (i_data_data_V_0_state = ap_const_lv2_1)))) then 
                    i_data_data_V_0_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = i_data_data_V_0_vld_in) and (i_data_data_V_0_state = ap_const_lv2_2)) or ((ap_const_logic_1 = i_data_data_V_0_ack_out) and (i_data_data_V_0_state = ap_const_lv2_1)) or ((i_data_data_V_0_state = ap_const_lv2_3) and not(((ap_const_logic_1 = i_data_data_V_0_vld_in) and (ap_const_logic_0 = i_data_data_V_0_ack_out))) and not(((ap_const_logic_0 = i_data_data_V_0_vld_in) and (ap_const_logic_1 = i_data_data_V_0_ack_out)))))) then 
                    i_data_data_V_0_state <= ap_const_lv2_3;
                else 
                    i_data_data_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    i_data_last_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                i_data_last_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = i_data_last_V_0_ack_out) and (ap_const_logic_1 = i_data_last_V_0_vld_out))) then 
                                        i_data_last_V_0_sel_rd <= not(i_data_last_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    i_data_last_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                i_data_last_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = i_data_last_V_0_vld_in) and (ap_const_logic_1 = i_data_last_V_0_ack_in))) then 
                                        i_data_last_V_0_sel_wr <= not(i_data_last_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    i_data_last_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                i_data_last_V_0_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = i_data_last_V_0_vld_in) and (ap_const_logic_1 = i_data_last_V_0_ack_out) and (ap_const_lv2_3 = i_data_last_V_0_state)) or ((ap_const_logic_0 = i_data_last_V_0_vld_in) and (ap_const_lv2_2 = i_data_last_V_0_state)))) then 
                    i_data_last_V_0_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = i_data_last_V_0_vld_in) and (ap_const_logic_0 = i_data_last_V_0_ack_out) and (ap_const_lv2_3 = i_data_last_V_0_state)) or ((ap_const_logic_0 = i_data_last_V_0_ack_out) and (ap_const_lv2_1 = i_data_last_V_0_state)))) then 
                    i_data_last_V_0_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = i_data_last_V_0_vld_in) and (ap_const_lv2_2 = i_data_last_V_0_state)) or ((ap_const_logic_1 = i_data_last_V_0_ack_out) and (ap_const_lv2_1 = i_data_last_V_0_state)) or ((ap_const_lv2_3 = i_data_last_V_0_state) and not(((ap_const_logic_1 = i_data_last_V_0_vld_in) and (ap_const_logic_0 = i_data_last_V_0_ack_out))) and not(((ap_const_logic_0 = i_data_last_V_0_vld_in) and (ap_const_logic_1 = i_data_last_V_0_ack_out)))))) then 
                    i_data_last_V_0_state <= ap_const_lv2_3;
                else 
                    i_data_last_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    loadCount_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                loadCount_V <= ap_const_lv32_0;
            else
                if (((ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0))) then
                    if ((ap_const_lv1_1 = ap_reg_pp0_iter2_currentState_load_reg_503)) then 
                        loadCount_V <= tmp_2_fu_466_p2;
                    elsif (((ap_const_lv1_0 = ap_reg_pp0_iter2_currentState_load_reg_503) and (ap_const_lv1_1 = ap_reg_pp0_iter2_start_V_read_reg_499))) then 
                        loadCount_V <= ap_const_lv32_0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    o_data_data_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                o_data_data_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = o_data_data_V_1_ack_out) and (ap_const_logic_1 = o_data_data_V_1_vld_out))) then 
                                        o_data_data_V_1_sel_rd <= not(o_data_data_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    o_data_data_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                o_data_data_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = o_data_data_V_1_vld_in) and (ap_const_logic_1 = o_data_data_V_1_ack_in))) then 
                                        o_data_data_V_1_sel_wr <= not(o_data_data_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    o_data_data_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                o_data_data_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = o_data_data_V_1_vld_in) and (ap_const_logic_1 = o_data_data_V_1_ack_out) and (ap_const_lv2_3 = o_data_data_V_1_state)) or ((ap_const_logic_0 = o_data_data_V_1_vld_in) and (ap_const_lv2_2 = o_data_data_V_1_state)))) then 
                    o_data_data_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = o_data_data_V_1_vld_in) and (ap_const_logic_0 = o_data_data_V_1_ack_out) and (ap_const_lv2_3 = o_data_data_V_1_state)) or ((ap_const_logic_0 = o_data_data_V_1_ack_out) and (ap_const_lv2_1 = o_data_data_V_1_state)))) then 
                    o_data_data_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = o_data_data_V_1_vld_in) and (ap_const_lv2_2 = o_data_data_V_1_state)) or ((ap_const_logic_1 = o_data_data_V_1_ack_out) and (ap_const_lv2_1 = o_data_data_V_1_state)) or ((ap_const_lv2_3 = o_data_data_V_1_state) and not(((ap_const_logic_1 = o_data_data_V_1_vld_in) and (ap_const_logic_0 = o_data_data_V_1_ack_out))) and not(((ap_const_logic_0 = o_data_data_V_1_vld_in) and (ap_const_logic_1 = o_data_data_V_1_ack_out)))))) then 
                    o_data_data_V_1_state <= ap_const_lv2_3;
                else 
                    o_data_data_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    o_data_last_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                o_data_last_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = o_data_last_V_1_ack_out) and (ap_const_logic_1 = o_data_last_V_1_vld_out))) then 
                                        o_data_last_V_1_sel_rd <= not(o_data_last_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    o_data_last_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                o_data_last_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = o_data_last_V_1_vld_in) and (ap_const_logic_1 = o_data_last_V_1_ack_in))) then 
                                        o_data_last_V_1_sel_wr <= not(o_data_last_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    o_data_last_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                o_data_last_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = o_data_last_V_1_vld_in) and (ap_const_logic_1 = o_data_last_V_1_ack_out) and (ap_const_lv2_3 = o_data_last_V_1_state)) or ((ap_const_logic_0 = o_data_last_V_1_vld_in) and (ap_const_lv2_2 = o_data_last_V_1_state)))) then 
                    o_data_last_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = o_data_last_V_1_vld_in) and (ap_const_logic_0 = o_data_last_V_1_ack_out) and (ap_const_lv2_3 = o_data_last_V_1_state)) or ((ap_const_logic_0 = o_data_last_V_1_ack_out) and (ap_const_lv2_1 = o_data_last_V_1_state)))) then 
                    o_data_last_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = o_data_last_V_1_vld_in) and (ap_const_lv2_2 = o_data_last_V_1_state)) or ((ap_const_logic_1 = o_data_last_V_1_ack_out) and (ap_const_lv2_1 = o_data_last_V_1_state)) or ((ap_const_lv2_3 = o_data_last_V_1_state) and not(((ap_const_logic_1 = o_data_last_V_1_vld_in) and (ap_const_logic_0 = o_data_last_V_1_ack_out))) and not(((ap_const_logic_0 = o_data_last_V_1_vld_in) and (ap_const_logic_1 = o_data_last_V_1_ack_out)))))) then 
                    o_data_last_V_1_state <= ap_const_lv2_3;
                else 
                    o_data_last_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_precharge_reg_pp0_iter1_p_Val2_1_reg_126_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_condition_375 = ap_const_boolean_1)) then
                if (((ap_const_lv1_1 = currentState_load_load_fu_154_p1) and (ap_const_lv1_0 = cond_i_fu_158_p2))) then 
                    ap_phi_precharge_reg_pp0_iter1_p_Val2_1_reg_126 <= ap_const_lv16_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_precharge_reg_pp0_iter1_p_Val2_1_reg_126 <= ap_phi_precharge_reg_pp0_iter0_p_Val2_1_reg_126;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_precharge_reg_pp0_iter1_p_Val2_2_reg_137_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_condition_375 = ap_const_boolean_1)) then
                if (((ap_const_lv1_1 = currentState_load_load_fu_154_p1) and (ap_const_lv1_0 = cond_i_fu_158_p2))) then 
                    ap_phi_precharge_reg_pp0_iter1_p_Val2_2_reg_137 <= ap_const_lv16_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_precharge_reg_pp0_iter1_p_Val2_2_reg_137 <= ap_phi_precharge_reg_pp0_iter0_p_Val2_2_reg_137;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0))) then
                ap_reg_pp0_iter1_currentState_load_reg_503 <= currentState_load_reg_503;
                ap_reg_pp0_iter1_start_V_read_reg_499 <= start_V_read_reg_499;
                currentState_load_reg_503 <= currentState;
                start_V_read_reg_499 <= start_V;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0)) then
                ap_reg_pp0_iter2_currentState_load_reg_503 <= ap_reg_pp0_iter1_currentState_load_reg_503;
                ap_reg_pp0_iter2_i_data_last_V_tmp_reg_511 <= i_data_last_V_tmp_reg_511;
                ap_reg_pp0_iter2_start_V_read_reg_499 <= ap_reg_pp0_iter1_start_V_read_reg_499;
                ap_reg_pp0_iter3_currentState_load_reg_503 <= ap_reg_pp0_iter2_currentState_load_reg_503;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_1 = currentState_load_load_fu_154_p1))) then
                cond_i_reg_507 <= cond_i_fu_158_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = i_data_data_V_0_load_A)) then
                i_data_data_V_0_payload_A <= i_data_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = i_data_data_V_0_load_B)) then
                i_data_data_V_0_payload_B <= i_data_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = i_data_last_V_0_load_A)) then
                i_data_last_V_0_payload_A <= i_data_TLAST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = i_data_last_V_0_load_B)) then
                i_data_last_V_0_payload_B <= i_data_TLAST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_1 = currentState_load_reg_503) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0))) then
                i_data_last_V_tmp_reg_511 <= i_data_last_V_0_data_out;
                tmp_1_i_reg_516 <= tmp_1_i_fu_436_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = o_data_data_V_1_load_A)) then
                o_data_data_V_1_payload_A <= o_data_data_V_tmp_fu_483_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = o_data_data_V_1_load_B)) then
                o_data_data_V_1_payload_B <= o_data_data_V_tmp_fu_483_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = o_data_last_V_1_load_A)) then
                o_data_last_V_1_payload_A <= ap_reg_pp0_iter2_i_data_last_V_tmp_reg_511;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = o_data_last_V_1_load_B)) then
                o_data_last_V_1_payload_B <= ap_reg_pp0_iter2_i_data_last_V_tmp_reg_511;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_lv1_1 = ap_reg_pp0_iter1_currentState_load_reg_503))) then
                res_V_reg_521 <= p_Val2_3_fu_492_p2(20 downto 5);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_flag00011011, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
        OP1_V_cast_fu_444_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_1_i_reg_516),21));

    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_flag00001001_assign_proc : process(i_data_data_V_0_vld_out, o_data_data_V_1_ack_in, o_data_last_V_1_ack_in, ap_enable_reg_pp0_iter1, currentState_load_reg_503, ap_enable_reg_pp0_iter4)
    begin
                ap_block_pp0_stage0_flag00001001 <= (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = currentState_load_reg_503) and (ap_const_logic_0 = i_data_data_V_0_vld_out)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter4) and ((ap_const_logic_0 = o_data_data_V_1_ack_in) or (ap_const_logic_0 = o_data_last_V_1_ack_in))));
    end process;


    ap_block_pp0_stage0_flag00011001_assign_proc : process(i_data_data_V_0_vld_out, o_data_data_V_1_ack_in, o_data_last_V_1_ack_in, ap_enable_reg_pp0_iter1, currentState_load_reg_503, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_block_state4_io, ap_block_state5_io)
    begin
                ap_block_pp0_stage0_flag00011001 <= (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = currentState_load_reg_503) and (ap_const_logic_0 = i_data_data_V_0_vld_out)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_const_boolean_1 = ap_block_state4_io)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter4) and ((ap_const_logic_0 = o_data_data_V_1_ack_in) or (ap_const_logic_0 = o_data_last_V_1_ack_in) or (ap_const_boolean_1 = ap_block_state5_io))));
    end process;


    ap_block_pp0_stage0_flag00011011_assign_proc : process(i_data_data_V_0_vld_out, o_data_data_V_1_ack_in, o_data_last_V_1_ack_in, ap_enable_reg_pp0_iter1, currentState_load_reg_503, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_block_state4_io, ap_block_state5_io)
    begin
                ap_block_pp0_stage0_flag00011011 <= (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = currentState_load_reg_503) and (ap_const_logic_0 = i_data_data_V_0_vld_out)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_const_boolean_1 = ap_block_state4_io)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter4) and ((ap_const_logic_0 = o_data_data_V_1_ack_in) or (ap_const_logic_0 = o_data_last_V_1_ack_in) or (ap_const_boolean_1 = ap_block_state5_io))));
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state2_pp0_stage0_iter1_assign_proc : process(i_data_data_V_0_vld_out, currentState_load_reg_503)
    begin
                ap_block_state2_pp0_stage0_iter1 <= ((ap_const_lv1_1 = currentState_load_reg_503) and (ap_const_logic_0 = i_data_data_V_0_vld_out));
    end process;

        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_io_assign_proc : process(o_data_data_V_1_ack_in, ap_reg_pp0_iter2_currentState_load_reg_503)
    begin
                ap_block_state4_io <= ((ap_const_lv1_1 = ap_reg_pp0_iter2_currentState_load_reg_503) and (ap_const_logic_0 = o_data_data_V_1_ack_in));
    end process;

        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_io_assign_proc : process(o_data_data_V_1_ack_in, ap_reg_pp0_iter3_currentState_load_reg_503)
    begin
                ap_block_state5_io <= ((ap_const_lv1_1 = ap_reg_pp0_iter3_currentState_load_reg_503) and (ap_const_logic_0 = o_data_data_V_1_ack_in));
    end process;


    ap_block_state5_pp0_stage0_iter4_assign_proc : process(o_data_data_V_1_ack_in, o_data_last_V_1_ack_in)
    begin
                ap_block_state5_pp0_stage0_iter4 <= ((ap_const_logic_0 = o_data_data_V_1_ack_in) or (ap_const_logic_0 = o_data_last_V_1_ack_in));
    end process;


    ap_condition_375_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_flag00011001)
    begin
                ap_condition_375 <= ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_const_logic_1));
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_logic_0 = ap_const_logic_1) and (ap_const_logic_0 = ap_enable_reg_pp0_iter1) and (ap_const_logic_0 = ap_enable_reg_pp0_iter2) and (ap_const_logic_0 = ap_enable_reg_pp0_iter3) and (ap_const_logic_0 = ap_enable_reg_pp0_iter4))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_precharge_reg_pp0_iter0_p_Val2_1_reg_126 <= "XXXXXXXXXXXXXXXX";
    ap_phi_precharge_reg_pp0_iter0_p_Val2_2_reg_137 <= "XXXXXXXXXXXXXXXX";
    ap_reset_idle_pp0 <= ap_const_logic_0;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    cond_i_fu_158_p2 <= "1" when (phaseClass_V = ap_const_lv4_0) else "0";
    currentState_load_load_fu_154_p1 <= currentState;

    i_data_TDATA_blk_n_assign_proc : process(i_data_data_V_0_state, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_flag00000000, currentState_load_reg_503)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0) and (ap_const_lv1_1 = currentState_load_reg_503))) then 
            i_data_TDATA_blk_n <= i_data_data_V_0_state(0);
        else 
            i_data_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    i_data_TREADY <= i_data_last_V_0_state(1);
    i_data_data_V_0_ack_in <= i_data_data_V_0_state(1);

    i_data_data_V_0_ack_out_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, currentState_load_reg_503, ap_block_pp0_stage0_flag00011001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = currentState_load_reg_503) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0))) then 
            i_data_data_V_0_ack_out <= ap_const_logic_1;
        else 
            i_data_data_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    i_data_data_V_0_data_out_assign_proc : process(i_data_data_V_0_payload_A, i_data_data_V_0_payload_B, i_data_data_V_0_sel)
    begin
        if ((ap_const_logic_1 = i_data_data_V_0_sel)) then 
            i_data_data_V_0_data_out <= i_data_data_V_0_payload_B;
        else 
            i_data_data_V_0_data_out <= i_data_data_V_0_payload_A;
        end if; 
    end process;

    i_data_data_V_0_load_A <= (i_data_data_V_0_state_cmp_full and not(i_data_data_V_0_sel_wr));
    i_data_data_V_0_load_B <= (i_data_data_V_0_sel_wr and i_data_data_V_0_state_cmp_full);
    i_data_data_V_0_sel <= i_data_data_V_0_sel_rd;
    i_data_data_V_0_state_cmp_full <= '0' when (i_data_data_V_0_state = ap_const_lv2_1) else '1';
    i_data_data_V_0_vld_in <= i_data_TVALID;
    i_data_data_V_0_vld_out <= i_data_data_V_0_state(0);
    i_data_last_V_0_ack_in <= i_data_last_V_0_state(1);

    i_data_last_V_0_ack_out_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, currentState_load_reg_503, ap_block_pp0_stage0_flag00011001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = currentState_load_reg_503) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0))) then 
            i_data_last_V_0_ack_out <= ap_const_logic_1;
        else 
            i_data_last_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    i_data_last_V_0_data_out_assign_proc : process(i_data_last_V_0_payload_A, i_data_last_V_0_payload_B, i_data_last_V_0_sel)
    begin
        if ((ap_const_logic_1 = i_data_last_V_0_sel)) then 
            i_data_last_V_0_data_out <= i_data_last_V_0_payload_B;
        else 
            i_data_last_V_0_data_out <= i_data_last_V_0_payload_A;
        end if; 
    end process;

    i_data_last_V_0_load_A <= (i_data_last_V_0_state_cmp_full and not(i_data_last_V_0_sel_wr));
    i_data_last_V_0_load_B <= (i_data_last_V_0_sel_wr and i_data_last_V_0_state_cmp_full);
    i_data_last_V_0_sel <= i_data_last_V_0_sel_rd;
    i_data_last_V_0_state_cmp_full <= '0' when (i_data_last_V_0_state = ap_const_lv2_1) else '1';
    i_data_last_V_0_vld_in <= i_data_TVALID;
    i_data_last_V_0_vld_out <= i_data_last_V_0_state(0);
    o_data_TDATA <= o_data_data_V_1_data_out;

    o_data_TDATA_blk_n_assign_proc : process(o_data_data_V_1_state, ap_block_pp0_stage0_flag00000000, ap_enable_reg_pp0_iter3, ap_reg_pp0_iter2_currentState_load_reg_503, ap_enable_reg_pp0_iter4, ap_reg_pp0_iter3_currentState_load_reg_503)
    begin
        if ((((ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_const_lv1_1 = ap_reg_pp0_iter2_currentState_load_reg_503)) or ((ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter4) and (ap_const_lv1_1 = ap_reg_pp0_iter3_currentState_load_reg_503)))) then 
            o_data_TDATA_blk_n <= o_data_data_V_1_state(1);
        else 
            o_data_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    o_data_TLAST <= o_data_last_V_1_data_out;
    o_data_TVALID <= o_data_last_V_1_state(0);
    o_data_data_V_1_ack_in <= o_data_data_V_1_state(1);
    o_data_data_V_1_ack_out <= o_data_TREADY;

    o_data_data_V_1_data_out_assign_proc : process(o_data_data_V_1_payload_A, o_data_data_V_1_payload_B, o_data_data_V_1_sel)
    begin
        if ((ap_const_logic_1 = o_data_data_V_1_sel)) then 
            o_data_data_V_1_data_out <= o_data_data_V_1_payload_B;
        else 
            o_data_data_V_1_data_out <= o_data_data_V_1_payload_A;
        end if; 
    end process;

    o_data_data_V_1_load_A <= (o_data_data_V_1_state_cmp_full and not(o_data_data_V_1_sel_wr));
    o_data_data_V_1_load_B <= (o_data_data_V_1_sel_wr and o_data_data_V_1_state_cmp_full);
    o_data_data_V_1_sel <= o_data_data_V_1_sel_rd;
    o_data_data_V_1_state_cmp_full <= '0' when (o_data_data_V_1_state = ap_const_lv2_1) else '1';

    o_data_data_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter3, ap_reg_pp0_iter2_currentState_load_reg_503, ap_block_pp0_stage0_flag00011001)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_const_lv1_1 = ap_reg_pp0_iter2_currentState_load_reg_503) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0))) then 
            o_data_data_V_1_vld_in <= ap_const_logic_1;
        else 
            o_data_data_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    o_data_data_V_1_vld_out <= o_data_data_V_1_state(0);
    o_data_data_V_tmp_fu_483_p3 <= 
        tmp_2_fu_466_p2 when (tmp_3_fu_478_p2(0) = '1') else 
        ap_const_lv32_0;
    o_data_last_V_1_ack_in <= o_data_last_V_1_state(1);
    o_data_last_V_1_ack_out <= o_data_TREADY;

    o_data_last_V_1_data_out_assign_proc : process(o_data_last_V_1_payload_A, o_data_last_V_1_payload_B, o_data_last_V_1_sel)
    begin
        if ((ap_const_logic_1 = o_data_last_V_1_sel)) then 
            o_data_last_V_1_data_out <= o_data_last_V_1_payload_B;
        else 
            o_data_last_V_1_data_out <= o_data_last_V_1_payload_A;
        end if; 
    end process;

    o_data_last_V_1_load_A <= (o_data_last_V_1_state_cmp_full and not(o_data_last_V_1_sel_wr));
    o_data_last_V_1_load_B <= (o_data_last_V_1_sel_wr and o_data_last_V_1_state_cmp_full);
    o_data_last_V_1_sel <= o_data_last_V_1_sel_rd;
    o_data_last_V_1_state_cmp_full <= '0' when (o_data_last_V_1_state = ap_const_lv2_1) else '1';

    o_data_last_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter3, ap_reg_pp0_iter2_currentState_load_reg_503, ap_block_pp0_stage0_flag00011001)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter3) and (ap_const_lv1_1 = ap_reg_pp0_iter2_currentState_load_reg_503) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0))) then 
            o_data_last_V_1_vld_in <= ap_const_logic_1;
        else 
            o_data_last_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    o_data_last_V_1_vld_out <= o_data_last_V_1_state(0);

    p_Val2_1_phi_fu_130_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_flag00000000, currentState_load_reg_503, cond_i_reg_507, p_Val2_2_5_i_fu_411_p2, ap_phi_precharge_reg_pp0_iter1_p_Val2_1_reg_126)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0) and (ap_const_lv1_1 = currentState_load_reg_503) and (ap_const_lv1_1 = cond_i_reg_507))) then 
            p_Val2_1_phi_fu_130_p4 <= p_Val2_2_5_i_fu_411_p2;
        else 
            p_Val2_1_phi_fu_130_p4 <= ap_phi_precharge_reg_pp0_iter1_p_Val2_1_reg_126;
        end if; 
    end process;

    p_Val2_2_5_i_fu_411_p2 <= std_logic_vector(unsigned(tmp9_fu_405_p2) + unsigned(tmp6_fu_387_p2));

    p_Val2_2_phi_fu_141_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_flag00000000, currentState_load_reg_503, cond_i_reg_507, p_Val2_5_2_i_fu_368_p2, ap_phi_precharge_reg_pp0_iter1_p_Val2_2_reg_137)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0) and (ap_const_lv1_1 = currentState_load_reg_503) and (ap_const_lv1_1 = cond_i_reg_507))) then 
            p_Val2_2_phi_fu_141_p4 <= p_Val2_5_2_i_fu_368_p2;
        else 
            p_Val2_2_phi_fu_141_p4 <= ap_phi_precharge_reg_pp0_iter1_p_Val2_2_reg_137;
        end if; 
    end process;

    p_Val2_3_fu_492_p0 <= OP1_V_cast_fu_444_p1(16 - 1 downto 0);
    p_Val2_3_fu_492_p1 <= OP1_V_cast_fu_444_p1(16 - 1 downto 0);
    p_Val2_5_2_i_fu_368_p2 <= std_logic_vector(unsigned(tmp3_fu_362_p2) + unsigned(tmp_fu_344_p2));
    p_Val2_8_i_fu_430_p2 <= std_logic_vector(unsigned(p_Val2_2_phi_fu_141_p4) - unsigned(p_Val2_1_phi_fu_130_p4));
    p_Val2_9_i_fu_424_p2 <= std_logic_vector(unsigned(p_Val2_1_phi_fu_130_p4) - unsigned(p_Val2_2_phi_fu_141_p4));
    start_V_read_read_fu_102_p2 <= start_V;
    tmp10_fu_393_p2 <= std_logic_vector(unsigned(cor_phaseClass0_V_6) + unsigned(cor_phaseClass0_V_4));
    tmp11_fu_399_p2 <= std_logic_vector(unsigned(cor_phaseClass0_V_1) + unsigned(tmp_1_fu_172_p1));
    tmp1_fu_332_p2 <= std_logic_vector(unsigned(cor_phaseClass0_V_9) + unsigned(cor_phaseClass0_V_10));
    tmp2_fu_338_p2 <= std_logic_vector(unsigned(cor_phaseClass0_V_8) + unsigned(cor_phaseClass0_V_7));
    tmp3_fu_362_p2 <= std_logic_vector(unsigned(tmp5_fu_356_p2) + unsigned(tmp4_fu_350_p2));
    tmp4_fu_350_p2 <= std_logic_vector(unsigned(cor_phaseClass0_V_5) + unsigned(cor_phaseClass0_V_3));
    tmp5_fu_356_p2 <= std_logic_vector(unsigned(cor_phaseClass0_V_2) + unsigned(cor_phaseClass0_V_0));
    tmp6_fu_387_p2 <= std_logic_vector(unsigned(tmp8_fu_381_p2) + unsigned(tmp7_fu_375_p2));
    tmp7_fu_375_p2 <= std_logic_vector(unsigned(cor_phaseClass0_V_13) + unsigned(cor_phaseClass0_V_14));
    tmp8_fu_381_p2 <= std_logic_vector(unsigned(cor_phaseClass0_V_12) + unsigned(cor_phaseClass0_V_11));
    tmp9_fu_405_p2 <= std_logic_vector(unsigned(tmp11_fu_399_p2) + unsigned(tmp10_fu_393_p2));
    tmp_1_fu_172_p1 <= i_data_data_V_0_data_out(16 - 1 downto 0);
    tmp_1_i_fu_436_p3 <= 
        p_Val2_8_i_fu_430_p2 when (tmp_i_fu_418_p2(0) = '1') else 
        p_Val2_9_i_fu_424_p2;
    tmp_2_fu_466_p2 <= std_logic_vector(unsigned(ap_const_lv32_20) + unsigned(loadCount_V));
    tmp_3_fu_478_p2 <= "1" when (signed(res_V_reg_521) > signed(ap_const_lv16_C80)) else "0";
    tmp_fu_344_p2 <= std_logic_vector(unsigned(tmp2_fu_338_p2) + unsigned(tmp1_fu_332_p2));
    tmp_i_fu_418_p2 <= "1" when (signed(p_Val2_2_phi_fu_141_p4) > signed(p_Val2_1_phi_fu_130_p4)) else "0";
end behav;
