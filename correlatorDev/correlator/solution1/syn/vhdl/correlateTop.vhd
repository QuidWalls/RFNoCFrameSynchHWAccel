-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity correlateTop is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    i_data_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    i_data_TVALID : IN STD_LOGIC;
    i_data_TREADY : OUT STD_LOGIC;
    i_data_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    o_data_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    o_data_TVALID : OUT STD_LOGIC;
    o_data_TREADY : IN STD_LOGIC;
    o_data_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of correlateTop is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "correlateTop,hls_ip_2017_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160tfbg484-1,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=4.032000,HLS_SYN_LAT=10,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=2,HLS_SYN_FF=1418,HLS_SYN_LUT=1195}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";

    signal ap_rst_n_inv : STD_LOGIC;
    signal i_data_V_data_V_0_data_out : STD_LOGIC_VECTOR (31 downto 0);
    signal i_data_V_data_V_0_vld_in : STD_LOGIC;
    signal i_data_V_data_V_0_vld_out : STD_LOGIC;
    signal i_data_V_data_V_0_ack_in : STD_LOGIC;
    signal i_data_V_data_V_0_ack_out : STD_LOGIC;
    signal i_data_V_data_V_0_payload_A : STD_LOGIC_VECTOR (31 downto 0);
    signal i_data_V_data_V_0_payload_B : STD_LOGIC_VECTOR (31 downto 0);
    signal i_data_V_data_V_0_sel_rd : STD_LOGIC := '0';
    signal i_data_V_data_V_0_sel_wr : STD_LOGIC := '0';
    signal i_data_V_data_V_0_sel : STD_LOGIC;
    signal i_data_V_data_V_0_load_A : STD_LOGIC;
    signal i_data_V_data_V_0_load_B : STD_LOGIC;
    signal i_data_V_data_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal i_data_V_data_V_0_state_cmp_full : STD_LOGIC;
    signal i_data_V_last_V_0_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal i_data_V_last_V_0_vld_in : STD_LOGIC;
    signal i_data_V_last_V_0_vld_out : STD_LOGIC;
    signal i_data_V_last_V_0_ack_in : STD_LOGIC;
    signal i_data_V_last_V_0_ack_out : STD_LOGIC;
    signal i_data_V_last_V_0_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal i_data_V_last_V_0_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal i_data_V_last_V_0_sel_rd : STD_LOGIC := '0';
    signal i_data_V_last_V_0_sel_wr : STD_LOGIC := '0';
    signal i_data_V_last_V_0_sel : STD_LOGIC;
    signal i_data_V_last_V_0_load_A : STD_LOGIC;
    signal i_data_V_last_V_0_load_B : STD_LOGIC;
    signal i_data_V_last_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal i_data_V_last_V_0_state_cmp_full : STD_LOGIC;
    signal o_data_V_data_V_1_data_in : STD_LOGIC_VECTOR (31 downto 0);
    signal o_data_V_data_V_1_data_out : STD_LOGIC_VECTOR (31 downto 0);
    signal o_data_V_data_V_1_vld_in : STD_LOGIC;
    signal o_data_V_data_V_1_vld_out : STD_LOGIC;
    signal o_data_V_data_V_1_ack_in : STD_LOGIC;
    signal o_data_V_data_V_1_ack_out : STD_LOGIC;
    signal o_data_V_data_V_1_payload_A : STD_LOGIC_VECTOR (31 downto 0);
    signal o_data_V_data_V_1_payload_B : STD_LOGIC_VECTOR (31 downto 0);
    signal o_data_V_data_V_1_sel_rd : STD_LOGIC := '0';
    signal o_data_V_data_V_1_sel_wr : STD_LOGIC := '0';
    signal o_data_V_data_V_1_sel : STD_LOGIC;
    signal o_data_V_data_V_1_load_A : STD_LOGIC;
    signal o_data_V_data_V_1_load_B : STD_LOGIC;
    signal o_data_V_data_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal o_data_V_data_V_1_state_cmp_full : STD_LOGIC;
    signal o_data_V_last_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal o_data_V_last_V_1_vld_in : STD_LOGIC;
    signal o_data_V_last_V_1_vld_out : STD_LOGIC;
    signal o_data_V_last_V_1_ack_in : STD_LOGIC;
    signal o_data_V_last_V_1_ack_out : STD_LOGIC;
    signal o_data_V_last_V_1_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal o_data_V_last_V_1_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal o_data_V_last_V_1_sel_rd : STD_LOGIC := '0';
    signal o_data_V_last_V_1_sel_wr : STD_LOGIC := '0';
    signal o_data_V_last_V_1_sel : STD_LOGIC;
    signal o_data_V_last_V_1_load_A : STD_LOGIC;
    signal o_data_V_last_V_1_load_B : STD_LOGIC;
    signal o_data_V_last_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal o_data_V_last_V_1_state_cmp_full : STD_LOGIC;
    signal currentState : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal phaseClass_V : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal loadCount_V : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal cor_phaseClass0i_V_14 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal cor_phaseClass0q_V_14 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal cor_phaseClass0i_V_13 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal cor_phaseClass0q_V_13 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal cor_phaseClass0i_V_12 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal cor_phaseClass0q_V_12 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal cor_phaseClass0i_V_11 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal cor_phaseClass0q_V_11 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal cor_phaseClass0i_V_10 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal cor_phaseClass0q_V_10 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal cor_phaseClass0i_V_9 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal cor_phaseClass0q_V_9 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal cor_phaseClass0i_V_8 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal cor_phaseClass0q_V_8 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal cor_phaseClass0i_V_7 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal cor_phaseClass0q_V_7 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal cor_phaseClass0i_V_6 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal cor_phaseClass0q_V_6 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal cor_phaseClass0i_V_5 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal cor_phaseClass0q_V_5 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal cor_phaseClass0i_V_4 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal cor_phaseClass0q_V_4 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal cor_phaseClass0i_V_3 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal cor_phaseClass0q_V_3 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal cor_phaseClass0i_V_2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal cor_phaseClass0q_V_2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal cor_phaseClass0i_V_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal cor_phaseClass0q_V_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal cor_phaseClass0i_V_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal cor_phaseClass0q_V_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal i_data_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal currentState_load_reg_797 : STD_LOGIC_VECTOR (0 downto 0);
    signal o_data_TDATA_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_reg_pp0_iter8_currentState_load_reg_797 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_937 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_reg_pp0_iter9_currentState_load_reg_797 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter9_tmp_5_reg_937 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9 : BOOLEAN;
    signal ap_predicate_op138_write_state10 : BOOLEAN;
    signal ap_predicate_op139_write_state10 : BOOLEAN;
    signal ap_block_state10_io : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10 : BOOLEAN;
    signal ap_predicate_op159_write_state11 : BOOLEAN;
    signal ap_predicate_op161_write_state11 : BOOLEAN;
    signal ap_block_state11_io : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_reg_pp0_iter1_currentState_load_reg_797 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter2_currentState_load_reg_797 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter3_currentState_load_reg_797 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter4_currentState_load_reg_797 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter5_currentState_load_reg_797 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter6_currentState_load_reg_797 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter7_currentState_load_reg_797 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_reg_801 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter2_tmp_last_V_reg_801 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter3_tmp_last_V_reg_801 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter4_tmp_last_V_reg_801 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter5_tmp_last_V_reg_801 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter6_tmp_last_V_reg_801 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter7_tmp_last_V_reg_801 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter8_tmp_last_V_reg_801 : STD_LOGIC_VECTOR (0 downto 0);
    signal cond_i_fu_239_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cond_i_reg_806 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter2_cond_i_reg_806 : STD_LOGIC_VECTOR (0 downto 0);
    signal cor_phaseClass0i_V_1_5_reg_810 : STD_LOGIC_VECTOR (15 downto 0);
    signal cor_phaseClass0q_V_1_5_reg_815 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp15_fu_291_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp15_reg_820 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp22_fu_303_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp22_reg_825 : STD_LOGIC_VECTOR (15 downto 0);
    signal cor_phaseClass0i_V_1_2_reg_830 : STD_LOGIC_VECTOR (15 downto 0);
    signal cor_phaseClass0q_V_1_2_reg_835 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp1_fu_579_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp1_reg_840 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp2_fu_597_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp2_reg_845 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp6_fu_603_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp6_reg_850 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp7_fu_621_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp7_reg_855 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp11_fu_627_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp11_reg_860 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp12_fu_633_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp12_reg_865 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp13_fu_645_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp13_reg_870 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp18_fu_650_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp18_reg_875 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp19_fu_656_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp19_reg_880 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp20_fu_668_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp20_reg_885 : STD_LOGIC_VECTOR (15 downto 0);
    signal corHelperIPos_V_i_fu_677_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal corHelperQPos_V_i_fu_686_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal corHelperINeg_V_7_i_fu_695_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal corHelperQNeg_V_7_i_fu_704_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal resi_V_2_fu_727_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal resi_V_2_reg_910 : STD_LOGIC_VECTOR (15 downto 0);
    signal resq_V_2_fu_747_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal resq_V_2_reg_916 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_789_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal resi_V_3_reg_922 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_793_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal resq_V_3_reg_927 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_s_fu_755_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_s_reg_932 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_761_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_phi_reg_pp0_iter0_p_0336_2_i_reg_141 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_p_0336_2_i_reg_141 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter2_p_0336_2_i_reg_141 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter3_p_0336_2_i_reg_141 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter4_p_0336_2_i_reg_141 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter0_p_0332_2_i_reg_152 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_p_0332_2_i_reg_152 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter2_p_0332_2_i_reg_152 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter3_p_0332_2_i_reg_152 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter4_p_0332_2_i_reg_152 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter0_p_0324_2_i_reg_163 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_p_0324_2_i_reg_163 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter2_p_0324_2_i_reg_163 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter3_p_0324_2_i_reg_163 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter4_p_0324_2_i_reg_163 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter0_p_0320_2_i_reg_174 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_p_0320_2_i_reg_174 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter2_p_0320_2_i_reg_174 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter3_p_0320_2_i_reg_174 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter4_p_0320_2_i_reg_174 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_4_fu_309_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_2_fu_777_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_213_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal op2_V_read_assign_1_fu_223_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp16_fu_285_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp23_fu_297_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp4_fu_591_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp3_fu_585_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp9_fu_615_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp8_fu_609_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp14_fu_639_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp21_fu_662_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_fu_673_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp5_fu_682_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp10_fu_691_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp17_fu_700_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_4_i_fu_709_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal resi_V_fu_715_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal resi_V_1_fu_721_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal resq_V_fu_735_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal resq_V_1_fu_741_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_789_ce : STD_LOGIC;
    signal grp_fu_793_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_502 : BOOLEAN;

    component correlateTop_mul_bkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    correlateTop_mul_bkb_U1 : component correlateTop_mul_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => resi_V_2_reg_910,
        din1 => resi_V_2_reg_910,
        ce => grp_fu_789_ce,
        dout => grp_fu_789_p2);

    correlateTop_mul_bkb_U2 : component correlateTop_mul_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => resq_V_2_reg_916,
        din1 => resq_V_2_reg_916,
        ce => grp_fu_793_ce,
        dout => grp_fu_793_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    cor_phaseClass0i_V_0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                cor_phaseClass0i_V_0 <= ap_const_lv16_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cond_i_fu_239_p2 = ap_const_lv1_1) and (currentState_load_reg_797 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    cor_phaseClass0i_V_0 <= tmp_1_fu_213_p1;
                end if; 
            end if;
        end if;
    end process;


    cor_phaseClass0i_V_1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                cor_phaseClass0i_V_1 <= ap_const_lv16_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cond_i_fu_239_p2 = ap_const_lv1_1) and (currentState_load_reg_797 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    cor_phaseClass0i_V_1 <= cor_phaseClass0i_V_0;
                end if; 
            end if;
        end if;
    end process;


    cor_phaseClass0i_V_10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                cor_phaseClass0i_V_10 <= ap_const_lv16_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cond_i_reg_806 = ap_const_lv1_1) and (ap_reg_pp0_iter1_currentState_load_reg_797 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    cor_phaseClass0i_V_10 <= cor_phaseClass0i_V_9;
                end if; 
            end if;
        end if;
    end process;


    cor_phaseClass0i_V_11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                cor_phaseClass0i_V_11 <= ap_const_lv16_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cond_i_reg_806 = ap_const_lv1_1) and (ap_reg_pp0_iter1_currentState_load_reg_797 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    cor_phaseClass0i_V_11 <= cor_phaseClass0i_V_10;
                end if; 
            end if;
        end if;
    end process;


    cor_phaseClass0i_V_12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                cor_phaseClass0i_V_12 <= ap_const_lv16_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cond_i_reg_806 = ap_const_lv1_1) and (ap_reg_pp0_iter1_currentState_load_reg_797 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    cor_phaseClass0i_V_12 <= cor_phaseClass0i_V_11;
                end if; 
            end if;
        end if;
    end process;


    cor_phaseClass0i_V_13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                cor_phaseClass0i_V_13 <= ap_const_lv16_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cond_i_reg_806 = ap_const_lv1_1) and (ap_reg_pp0_iter1_currentState_load_reg_797 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    cor_phaseClass0i_V_13 <= cor_phaseClass0i_V_12;
                end if; 
            end if;
        end if;
    end process;


    cor_phaseClass0i_V_14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                cor_phaseClass0i_V_14 <= ap_const_lv16_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cond_i_reg_806 = ap_const_lv1_1) and (ap_reg_pp0_iter1_currentState_load_reg_797 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    cor_phaseClass0i_V_14 <= cor_phaseClass0i_V_13;
                end if; 
            end if;
        end if;
    end process;


    cor_phaseClass0i_V_2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                cor_phaseClass0i_V_2 <= ap_const_lv16_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cond_i_reg_806 = ap_const_lv1_1) and (ap_reg_pp0_iter1_currentState_load_reg_797 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    cor_phaseClass0i_V_2 <= cor_phaseClass0i_V_1_5_reg_810;
                end if; 
            end if;
        end if;
    end process;


    cor_phaseClass0i_V_3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                cor_phaseClass0i_V_3 <= ap_const_lv16_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cond_i_reg_806 = ap_const_lv1_1) and (ap_reg_pp0_iter1_currentState_load_reg_797 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    cor_phaseClass0i_V_3 <= cor_phaseClass0i_V_2;
                end if; 
            end if;
        end if;
    end process;


    cor_phaseClass0i_V_4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                cor_phaseClass0i_V_4 <= ap_const_lv16_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cond_i_reg_806 = ap_const_lv1_1) and (ap_reg_pp0_iter1_currentState_load_reg_797 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    cor_phaseClass0i_V_4 <= cor_phaseClass0i_V_3;
                end if; 
            end if;
        end if;
    end process;


    cor_phaseClass0i_V_5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                cor_phaseClass0i_V_5 <= ap_const_lv16_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cond_i_reg_806 = ap_const_lv1_1) and (ap_reg_pp0_iter1_currentState_load_reg_797 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    cor_phaseClass0i_V_5 <= cor_phaseClass0i_V_4;
                end if; 
            end if;
        end if;
    end process;


    cor_phaseClass0i_V_6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                cor_phaseClass0i_V_6 <= ap_const_lv16_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cond_i_reg_806 = ap_const_lv1_1) and (ap_reg_pp0_iter1_currentState_load_reg_797 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    cor_phaseClass0i_V_6 <= cor_phaseClass0i_V_5;
                end if; 
            end if;
        end if;
    end process;


    cor_phaseClass0i_V_7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                cor_phaseClass0i_V_7 <= ap_const_lv16_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cond_i_reg_806 = ap_const_lv1_1) and (ap_reg_pp0_iter1_currentState_load_reg_797 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    cor_phaseClass0i_V_7 <= cor_phaseClass0i_V_6;
                end if; 
            end if;
        end if;
    end process;


    cor_phaseClass0i_V_8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                cor_phaseClass0i_V_8 <= ap_const_lv16_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cond_i_reg_806 = ap_const_lv1_1) and (ap_reg_pp0_iter1_currentState_load_reg_797 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    cor_phaseClass0i_V_8 <= cor_phaseClass0i_V_7;
                end if; 
            end if;
        end if;
    end process;


    cor_phaseClass0i_V_9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                cor_phaseClass0i_V_9 <= ap_const_lv16_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cond_i_reg_806 = ap_const_lv1_1) and (ap_reg_pp0_iter1_currentState_load_reg_797 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    cor_phaseClass0i_V_9 <= cor_phaseClass0i_V_8;
                end if; 
            end if;
        end if;
    end process;


    cor_phaseClass0q_V_0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                cor_phaseClass0q_V_0 <= ap_const_lv16_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cond_i_fu_239_p2 = ap_const_lv1_1) and (currentState_load_reg_797 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    cor_phaseClass0q_V_0 <= i_data_V_data_V_0_data_out(31 downto 16);
                end if; 
            end if;
        end if;
    end process;


    cor_phaseClass0q_V_1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                cor_phaseClass0q_V_1 <= ap_const_lv16_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cond_i_fu_239_p2 = ap_const_lv1_1) and (currentState_load_reg_797 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    cor_phaseClass0q_V_1 <= cor_phaseClass0q_V_0;
                end if; 
            end if;
        end if;
    end process;


    cor_phaseClass0q_V_10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                cor_phaseClass0q_V_10 <= ap_const_lv16_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cond_i_reg_806 = ap_const_lv1_1) and (ap_reg_pp0_iter1_currentState_load_reg_797 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    cor_phaseClass0q_V_10 <= cor_phaseClass0q_V_9;
                end if; 
            end if;
        end if;
    end process;


    cor_phaseClass0q_V_11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                cor_phaseClass0q_V_11 <= ap_const_lv16_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cond_i_reg_806 = ap_const_lv1_1) and (ap_reg_pp0_iter1_currentState_load_reg_797 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    cor_phaseClass0q_V_11 <= cor_phaseClass0q_V_10;
                end if; 
            end if;
        end if;
    end process;


    cor_phaseClass0q_V_12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                cor_phaseClass0q_V_12 <= ap_const_lv16_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cond_i_reg_806 = ap_const_lv1_1) and (ap_reg_pp0_iter1_currentState_load_reg_797 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    cor_phaseClass0q_V_12 <= cor_phaseClass0q_V_11;
                end if; 
            end if;
        end if;
    end process;


    cor_phaseClass0q_V_13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                cor_phaseClass0q_V_13 <= ap_const_lv16_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cond_i_reg_806 = ap_const_lv1_1) and (ap_reg_pp0_iter1_currentState_load_reg_797 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    cor_phaseClass0q_V_13 <= cor_phaseClass0q_V_12;
                end if; 
            end if;
        end if;
    end process;


    cor_phaseClass0q_V_14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                cor_phaseClass0q_V_14 <= ap_const_lv16_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cond_i_reg_806 = ap_const_lv1_1) and (ap_reg_pp0_iter1_currentState_load_reg_797 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    cor_phaseClass0q_V_14 <= cor_phaseClass0q_V_13;
                end if; 
            end if;
        end if;
    end process;


    cor_phaseClass0q_V_2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                cor_phaseClass0q_V_2 <= ap_const_lv16_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cond_i_reg_806 = ap_const_lv1_1) and (ap_reg_pp0_iter1_currentState_load_reg_797 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    cor_phaseClass0q_V_2 <= cor_phaseClass0q_V_1_5_reg_815;
                end if; 
            end if;
        end if;
    end process;


    cor_phaseClass0q_V_3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                cor_phaseClass0q_V_3 <= ap_const_lv16_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cond_i_reg_806 = ap_const_lv1_1) and (ap_reg_pp0_iter1_currentState_load_reg_797 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    cor_phaseClass0q_V_3 <= cor_phaseClass0q_V_2;
                end if; 
            end if;
        end if;
    end process;


    cor_phaseClass0q_V_4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                cor_phaseClass0q_V_4 <= ap_const_lv16_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cond_i_reg_806 = ap_const_lv1_1) and (ap_reg_pp0_iter1_currentState_load_reg_797 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    cor_phaseClass0q_V_4 <= cor_phaseClass0q_V_3;
                end if; 
            end if;
        end if;
    end process;


    cor_phaseClass0q_V_5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                cor_phaseClass0q_V_5 <= ap_const_lv16_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cond_i_reg_806 = ap_const_lv1_1) and (ap_reg_pp0_iter1_currentState_load_reg_797 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    cor_phaseClass0q_V_5 <= cor_phaseClass0q_V_4;
                end if; 
            end if;
        end if;
    end process;


    cor_phaseClass0q_V_6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                cor_phaseClass0q_V_6 <= ap_const_lv16_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cond_i_reg_806 = ap_const_lv1_1) and (ap_reg_pp0_iter1_currentState_load_reg_797 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    cor_phaseClass0q_V_6 <= cor_phaseClass0q_V_5;
                end if; 
            end if;
        end if;
    end process;


    cor_phaseClass0q_V_7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                cor_phaseClass0q_V_7 <= ap_const_lv16_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cond_i_reg_806 = ap_const_lv1_1) and (ap_reg_pp0_iter1_currentState_load_reg_797 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    cor_phaseClass0q_V_7 <= cor_phaseClass0q_V_6;
                end if; 
            end if;
        end if;
    end process;


    cor_phaseClass0q_V_8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                cor_phaseClass0q_V_8 <= ap_const_lv16_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cond_i_reg_806 = ap_const_lv1_1) and (ap_reg_pp0_iter1_currentState_load_reg_797 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    cor_phaseClass0q_V_8 <= cor_phaseClass0q_V_7;
                end if; 
            end if;
        end if;
    end process;


    cor_phaseClass0q_V_9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                cor_phaseClass0q_V_9 <= ap_const_lv16_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cond_i_reg_806 = ap_const_lv1_1) and (ap_reg_pp0_iter1_currentState_load_reg_797 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    cor_phaseClass0q_V_9 <= cor_phaseClass0q_V_8;
                end if; 
            end if;
        end if;
    end process;


    currentState_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                currentState <= ap_const_lv1_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    currentState <= ap_const_lv1_1;
                end if; 
            end if;
        end if;
    end process;


    i_data_V_data_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                i_data_V_data_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((i_data_V_data_V_0_ack_out = ap_const_logic_1) and (i_data_V_data_V_0_vld_out = ap_const_logic_1))) then 
                                        i_data_V_data_V_0_sel_rd <= not(i_data_V_data_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    i_data_V_data_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                i_data_V_data_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((i_data_V_data_V_0_ack_in = ap_const_logic_1) and (i_data_V_data_V_0_vld_in = ap_const_logic_1))) then 
                                        i_data_V_data_V_0_sel_wr <= not(i_data_V_data_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    i_data_V_data_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                i_data_V_data_V_0_state <= ap_const_lv2_0;
            else
                if ((((i_data_V_data_V_0_vld_in = ap_const_logic_0) and (i_data_V_data_V_0_state = ap_const_lv2_2)) or ((i_data_V_data_V_0_vld_in = ap_const_logic_0) and (i_data_V_data_V_0_state = ap_const_lv2_3) and (i_data_V_data_V_0_ack_out = ap_const_logic_1)))) then 
                    i_data_V_data_V_0_state <= ap_const_lv2_2;
                elsif ((((i_data_V_data_V_0_ack_out = ap_const_logic_0) and (i_data_V_data_V_0_state = ap_const_lv2_1)) or ((i_data_V_data_V_0_ack_out = ap_const_logic_0) and (i_data_V_data_V_0_state = ap_const_lv2_3) and (i_data_V_data_V_0_vld_in = ap_const_logic_1)))) then 
                    i_data_V_data_V_0_state <= ap_const_lv2_1;
                elsif (((not(((i_data_V_data_V_0_vld_in = ap_const_logic_0) and (i_data_V_data_V_0_ack_out = ap_const_logic_1))) and not(((i_data_V_data_V_0_ack_out = ap_const_logic_0) and (i_data_V_data_V_0_vld_in = ap_const_logic_1))) and (i_data_V_data_V_0_state = ap_const_lv2_3)) or ((i_data_V_data_V_0_state = ap_const_lv2_1) and (i_data_V_data_V_0_ack_out = ap_const_logic_1)) or ((i_data_V_data_V_0_state = ap_const_lv2_2) and (i_data_V_data_V_0_vld_in = ap_const_logic_1)))) then 
                    i_data_V_data_V_0_state <= ap_const_lv2_3;
                else 
                    i_data_V_data_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    i_data_V_last_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                i_data_V_last_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((i_data_V_last_V_0_ack_out = ap_const_logic_1) and (i_data_V_last_V_0_vld_out = ap_const_logic_1))) then 
                                        i_data_V_last_V_0_sel_rd <= not(i_data_V_last_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    i_data_V_last_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                i_data_V_last_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((i_data_V_last_V_0_ack_in = ap_const_logic_1) and (i_data_V_last_V_0_vld_in = ap_const_logic_1))) then 
                                        i_data_V_last_V_0_sel_wr <= not(i_data_V_last_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    i_data_V_last_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                i_data_V_last_V_0_state <= ap_const_lv2_0;
            else
                if ((((i_data_V_last_V_0_state = ap_const_lv2_3) and (i_data_V_last_V_0_vld_in = ap_const_logic_0) and (i_data_V_last_V_0_ack_out = ap_const_logic_1)) or ((i_data_V_last_V_0_state = ap_const_lv2_2) and (i_data_V_last_V_0_vld_in = ap_const_logic_0)))) then 
                    i_data_V_last_V_0_state <= ap_const_lv2_2;
                elsif ((((i_data_V_last_V_0_state = ap_const_lv2_1) and (i_data_V_last_V_0_ack_out = ap_const_logic_0)) or ((i_data_V_last_V_0_state = ap_const_lv2_3) and (i_data_V_last_V_0_ack_out = ap_const_logic_0) and (i_data_V_last_V_0_vld_in = ap_const_logic_1)))) then 
                    i_data_V_last_V_0_state <= ap_const_lv2_1;
                elsif ((((i_data_V_last_V_0_state = ap_const_lv2_1) and (i_data_V_last_V_0_ack_out = ap_const_logic_1)) or ((i_data_V_last_V_0_state = ap_const_lv2_2) and (i_data_V_last_V_0_vld_in = ap_const_logic_1)) or (not(((i_data_V_last_V_0_vld_in = ap_const_logic_0) and (i_data_V_last_V_0_ack_out = ap_const_logic_1))) and not(((i_data_V_last_V_0_ack_out = ap_const_logic_0) and (i_data_V_last_V_0_vld_in = ap_const_logic_1))) and (i_data_V_last_V_0_state = ap_const_lv2_3)))) then 
                    i_data_V_last_V_0_state <= ap_const_lv2_3;
                else 
                    i_data_V_last_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    loadCount_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                loadCount_V <= ap_const_lv32_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then
                    if ((ap_reg_pp0_iter9_currentState_load_reg_797 = ap_const_lv1_1)) then 
                        loadCount_V <= tmp_2_fu_777_p2;
                    elsif ((ap_reg_pp0_iter9_currentState_load_reg_797 = ap_const_lv1_0)) then 
                        loadCount_V <= ap_const_lv32_0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    o_data_V_data_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                o_data_V_data_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((o_data_V_data_V_1_ack_out = ap_const_logic_1) and (o_data_V_data_V_1_vld_out = ap_const_logic_1))) then 
                                        o_data_V_data_V_1_sel_rd <= not(o_data_V_data_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    o_data_V_data_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                o_data_V_data_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((o_data_V_data_V_1_ack_in = ap_const_logic_1) and (o_data_V_data_V_1_vld_in = ap_const_logic_1))) then 
                                        o_data_V_data_V_1_sel_wr <= not(o_data_V_data_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    o_data_V_data_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                o_data_V_data_V_1_state <= ap_const_lv2_0;
            else
                if ((((o_data_V_data_V_1_state = ap_const_lv2_2) and (o_data_V_data_V_1_vld_in = ap_const_logic_0)) or ((o_data_V_data_V_1_state = ap_const_lv2_3) and (o_data_V_data_V_1_vld_in = ap_const_logic_0) and (o_data_V_data_V_1_ack_out = ap_const_logic_1)))) then 
                    o_data_V_data_V_1_state <= ap_const_lv2_2;
                elsif ((((o_data_V_data_V_1_state = ap_const_lv2_1) and (o_data_V_data_V_1_ack_out = ap_const_logic_0)) or ((o_data_V_data_V_1_state = ap_const_lv2_3) and (o_data_V_data_V_1_ack_out = ap_const_logic_0) and (o_data_V_data_V_1_vld_in = ap_const_logic_1)))) then 
                    o_data_V_data_V_1_state <= ap_const_lv2_1;
                elsif (((not(((o_data_V_data_V_1_vld_in = ap_const_logic_0) and (o_data_V_data_V_1_ack_out = ap_const_logic_1))) and not(((o_data_V_data_V_1_ack_out = ap_const_logic_0) and (o_data_V_data_V_1_vld_in = ap_const_logic_1))) and (o_data_V_data_V_1_state = ap_const_lv2_3)) or ((o_data_V_data_V_1_state = ap_const_lv2_1) and (o_data_V_data_V_1_ack_out = ap_const_logic_1)) or ((o_data_V_data_V_1_state = ap_const_lv2_2) and (o_data_V_data_V_1_vld_in = ap_const_logic_1)))) then 
                    o_data_V_data_V_1_state <= ap_const_lv2_3;
                else 
                    o_data_V_data_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    o_data_V_last_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                o_data_V_last_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((o_data_V_last_V_1_ack_out = ap_const_logic_1) and (o_data_V_last_V_1_vld_out = ap_const_logic_1))) then 
                                        o_data_V_last_V_1_sel_rd <= not(o_data_V_last_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    o_data_V_last_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                o_data_V_last_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((o_data_V_last_V_1_ack_in = ap_const_logic_1) and (o_data_V_last_V_1_vld_in = ap_const_logic_1))) then 
                                        o_data_V_last_V_1_sel_wr <= not(o_data_V_last_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    o_data_V_last_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                o_data_V_last_V_1_state <= ap_const_lv2_0;
            else
                if ((((o_data_V_last_V_1_state = ap_const_lv2_2) and (o_data_V_last_V_1_vld_in = ap_const_logic_0)) or ((o_data_V_last_V_1_state = ap_const_lv2_3) and (o_data_V_last_V_1_vld_in = ap_const_logic_0) and (o_data_V_last_V_1_ack_out = ap_const_logic_1)))) then 
                    o_data_V_last_V_1_state <= ap_const_lv2_2;
                elsif ((((o_data_V_last_V_1_state = ap_const_lv2_1) and (o_data_V_last_V_1_ack_out = ap_const_logic_0)) or ((o_data_V_last_V_1_state = ap_const_lv2_3) and (o_data_V_last_V_1_ack_out = ap_const_logic_0) and (o_data_V_last_V_1_vld_in = ap_const_logic_1)))) then 
                    o_data_V_last_V_1_state <= ap_const_lv2_1;
                elsif (((not(((o_data_V_last_V_1_vld_in = ap_const_logic_0) and (o_data_V_last_V_1_ack_out = ap_const_logic_1))) and not(((o_data_V_last_V_1_ack_out = ap_const_logic_0) and (o_data_V_last_V_1_vld_in = ap_const_logic_1))) and (o_data_V_last_V_1_state = ap_const_lv2_3)) or ((o_data_V_last_V_1_state = ap_const_lv2_1) and (o_data_V_last_V_1_ack_out = ap_const_logic_1)) or ((o_data_V_last_V_1_state = ap_const_lv2_2) and (o_data_V_last_V_1_vld_in = ap_const_logic_1)))) then 
                    o_data_V_last_V_1_state <= ap_const_lv2_3;
                else 
                    o_data_V_last_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    phaseClass_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                phaseClass_V <= ap_const_lv4_0;
            else
                if ((ap_const_boolean_1 = ap_condition_502)) then
                    if ((currentState_load_reg_797 = ap_const_lv1_1)) then 
                        phaseClass_V <= tmp_4_fu_309_p2;
                    elsif ((currentState_load_reg_797 = ap_const_lv1_0)) then 
                        phaseClass_V <= ap_const_lv4_0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter2_p_0320_2_i_reg_174_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_502)) then
                if (((currentState_load_reg_797 = ap_const_lv1_1) and (cond_i_fu_239_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter2_p_0320_2_i_reg_174 <= ap_const_lv16_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter2_p_0320_2_i_reg_174 <= ap_phi_reg_pp0_iter1_p_0320_2_i_reg_174;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter2_p_0324_2_i_reg_163_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_502)) then
                if (((currentState_load_reg_797 = ap_const_lv1_1) and (cond_i_fu_239_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter2_p_0324_2_i_reg_163 <= ap_const_lv16_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter2_p_0324_2_i_reg_163 <= ap_phi_reg_pp0_iter1_p_0324_2_i_reg_163;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter2_p_0332_2_i_reg_152_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_502)) then
                if (((currentState_load_reg_797 = ap_const_lv1_1) and (cond_i_fu_239_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter2_p_0332_2_i_reg_152 <= ap_const_lv16_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter2_p_0332_2_i_reg_152 <= ap_phi_reg_pp0_iter1_p_0332_2_i_reg_152;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter2_p_0336_2_i_reg_141_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_502)) then
                if (((currentState_load_reg_797 = ap_const_lv1_1) and (cond_i_fu_239_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter2_p_0336_2_i_reg_141 <= ap_const_lv16_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter2_p_0336_2_i_reg_141 <= ap_phi_reg_pp0_iter1_p_0336_2_i_reg_141;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter4_p_0320_2_i_reg_174_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
                if (((ap_reg_pp0_iter2_cond_i_reg_806 = ap_const_lv1_1) and (ap_reg_pp0_iter2_currentState_load_reg_797 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter4_p_0320_2_i_reg_174 <= corHelperQPos_V_i_fu_686_p2;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter4_p_0320_2_i_reg_174 <= ap_phi_reg_pp0_iter3_p_0320_2_i_reg_174;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter4_p_0324_2_i_reg_163_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
                if (((ap_reg_pp0_iter2_cond_i_reg_806 = ap_const_lv1_1) and (ap_reg_pp0_iter2_currentState_load_reg_797 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter4_p_0324_2_i_reg_163 <= corHelperQNeg_V_7_i_fu_704_p2;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter4_p_0324_2_i_reg_163 <= ap_phi_reg_pp0_iter3_p_0324_2_i_reg_163;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter4_p_0332_2_i_reg_152_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
                if (((ap_reg_pp0_iter2_cond_i_reg_806 = ap_const_lv1_1) and (ap_reg_pp0_iter2_currentState_load_reg_797 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter4_p_0332_2_i_reg_152 <= corHelperIPos_V_i_fu_677_p2;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter4_p_0332_2_i_reg_152 <= ap_phi_reg_pp0_iter3_p_0332_2_i_reg_152;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter4_p_0336_2_i_reg_141_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
                if (((ap_reg_pp0_iter2_cond_i_reg_806 = ap_const_lv1_1) and (ap_reg_pp0_iter2_currentState_load_reg_797 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter4_p_0336_2_i_reg_141 <= corHelperINeg_V_7_i_fu_695_p2;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter4_p_0336_2_i_reg_141 <= ap_phi_reg_pp0_iter3_p_0336_2_i_reg_141;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_phi_reg_pp0_iter1_p_0320_2_i_reg_174 <= ap_phi_reg_pp0_iter0_p_0320_2_i_reg_174;
                ap_phi_reg_pp0_iter1_p_0324_2_i_reg_163 <= ap_phi_reg_pp0_iter0_p_0324_2_i_reg_163;
                ap_phi_reg_pp0_iter1_p_0332_2_i_reg_152 <= ap_phi_reg_pp0_iter0_p_0332_2_i_reg_152;
                ap_phi_reg_pp0_iter1_p_0336_2_i_reg_141 <= ap_phi_reg_pp0_iter0_p_0336_2_i_reg_141;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter3_p_0320_2_i_reg_174 <= ap_phi_reg_pp0_iter2_p_0320_2_i_reg_174;
                ap_phi_reg_pp0_iter3_p_0324_2_i_reg_163 <= ap_phi_reg_pp0_iter2_p_0324_2_i_reg_163;
                ap_phi_reg_pp0_iter3_p_0332_2_i_reg_152 <= ap_phi_reg_pp0_iter2_p_0332_2_i_reg_152;
                ap_phi_reg_pp0_iter3_p_0336_2_i_reg_141 <= ap_phi_reg_pp0_iter2_p_0336_2_i_reg_141;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_reg_pp0_iter1_currentState_load_reg_797 <= currentState_load_reg_797;
                currentState_load_reg_797 <= currentState;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                ap_reg_pp0_iter2_cond_i_reg_806 <= cond_i_reg_806;
                ap_reg_pp0_iter2_currentState_load_reg_797 <= ap_reg_pp0_iter1_currentState_load_reg_797;
                ap_reg_pp0_iter2_tmp_last_V_reg_801 <= tmp_last_V_reg_801;
                ap_reg_pp0_iter3_currentState_load_reg_797 <= ap_reg_pp0_iter2_currentState_load_reg_797;
                ap_reg_pp0_iter3_tmp_last_V_reg_801 <= ap_reg_pp0_iter2_tmp_last_V_reg_801;
                ap_reg_pp0_iter4_currentState_load_reg_797 <= ap_reg_pp0_iter3_currentState_load_reg_797;
                ap_reg_pp0_iter4_tmp_last_V_reg_801 <= ap_reg_pp0_iter3_tmp_last_V_reg_801;
                ap_reg_pp0_iter5_currentState_load_reg_797 <= ap_reg_pp0_iter4_currentState_load_reg_797;
                ap_reg_pp0_iter5_tmp_last_V_reg_801 <= ap_reg_pp0_iter4_tmp_last_V_reg_801;
                ap_reg_pp0_iter6_currentState_load_reg_797 <= ap_reg_pp0_iter5_currentState_load_reg_797;
                ap_reg_pp0_iter6_tmp_last_V_reg_801 <= ap_reg_pp0_iter5_tmp_last_V_reg_801;
                ap_reg_pp0_iter7_currentState_load_reg_797 <= ap_reg_pp0_iter6_currentState_load_reg_797;
                ap_reg_pp0_iter7_tmp_last_V_reg_801 <= ap_reg_pp0_iter6_tmp_last_V_reg_801;
                ap_reg_pp0_iter8_currentState_load_reg_797 <= ap_reg_pp0_iter7_currentState_load_reg_797;
                ap_reg_pp0_iter8_tmp_last_V_reg_801 <= ap_reg_pp0_iter7_tmp_last_V_reg_801;
                ap_reg_pp0_iter9_currentState_load_reg_797 <= ap_reg_pp0_iter8_currentState_load_reg_797;
                ap_reg_pp0_iter9_tmp_5_reg_937 <= tmp_5_reg_937;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (currentState_load_reg_797 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                cond_i_reg_806 <= cond_i_fu_239_p2;
                tmp_last_V_reg_801 <= i_data_V_last_V_0_data_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cond_i_reg_806 = ap_const_lv1_1) and (ap_reg_pp0_iter1_currentState_load_reg_797 = ap_const_lv1_1))) then
                cor_phaseClass0i_V_1_2_reg_830 <= cor_phaseClass0i_V_12;
                cor_phaseClass0q_V_1_2_reg_835 <= cor_phaseClass0q_V_12;
                tmp11_reg_860 <= tmp11_fu_627_p2;
                tmp12_reg_865 <= tmp12_fu_633_p2;
                tmp13_reg_870 <= tmp13_fu_645_p2;
                tmp18_reg_875 <= tmp18_fu_650_p2;
                tmp19_reg_880 <= tmp19_fu_656_p2;
                tmp1_reg_840 <= tmp1_fu_579_p2;
                tmp20_reg_885 <= tmp20_fu_668_p2;
                tmp2_reg_845 <= tmp2_fu_597_p2;
                tmp6_reg_850 <= tmp6_fu_603_p2;
                tmp7_reg_855 <= tmp7_fu_621_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cond_i_fu_239_p2 = ap_const_lv1_1) and (currentState_load_reg_797 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                cor_phaseClass0i_V_1_5_reg_810 <= cor_phaseClass0i_V_1;
                cor_phaseClass0q_V_1_5_reg_815 <= cor_phaseClass0q_V_1;
                tmp15_reg_820 <= tmp15_fu_291_p2;
                tmp22_reg_825 <= tmp22_fu_303_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((i_data_V_data_V_0_load_A = ap_const_logic_1)) then
                i_data_V_data_V_0_payload_A <= i_data_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((i_data_V_data_V_0_load_B = ap_const_logic_1)) then
                i_data_V_data_V_0_payload_B <= i_data_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((i_data_V_last_V_0_load_A = ap_const_logic_1)) then
                i_data_V_last_V_0_payload_A <= i_data_TLAST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((i_data_V_last_V_0_load_B = ap_const_logic_1)) then
                i_data_V_last_V_0_payload_B <= i_data_TLAST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((o_data_V_data_V_1_load_A = ap_const_logic_1)) then
                o_data_V_data_V_1_payload_A <= o_data_V_data_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((o_data_V_data_V_1_load_B = ap_const_logic_1)) then
                o_data_V_data_V_1_payload_B <= o_data_V_data_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((o_data_V_last_V_1_load_A = ap_const_logic_1)) then
                o_data_V_last_V_1_payload_A <= ap_reg_pp0_iter8_tmp_last_V_reg_801;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((o_data_V_last_V_1_load_B = ap_const_logic_1)) then
                o_data_V_last_V_1_payload_B <= ap_reg_pp0_iter8_tmp_last_V_reg_801;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_reg_pp0_iter7_currentState_load_reg_797 = ap_const_lv1_1))) then
                p_Result_s_reg_932 <= p_Result_s_fu_755_p3;
                tmp_5_reg_937 <= tmp_5_fu_761_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_reg_pp0_iter3_currentState_load_reg_797 = ap_const_lv1_1))) then
                resi_V_2_reg_910 <= resi_V_2_fu_727_p3;
                resq_V_2_reg_916 <= resq_V_2_fu_747_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_reg_pp0_iter6_currentState_load_reg_797 = ap_const_lv1_1))) then
                resi_V_3_reg_922 <= grp_fu_789_p2;
                resq_V_3_reg_927 <= grp_fu_793_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(i_data_V_data_V_0_vld_out, o_data_V_data_V_1_ack_in, o_data_V_last_V_1_ack_in, ap_enable_reg_pp0_iter1, currentState_load_reg_797, ap_enable_reg_pp0_iter10)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and ((o_data_V_last_V_1_ack_in = ap_const_logic_0) or (o_data_V_data_V_1_ack_in = ap_const_logic_0))) or ((currentState_load_reg_797 = ap_const_lv1_1) and (i_data_V_data_V_0_vld_out = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(i_data_V_data_V_0_vld_out, o_data_V_data_V_1_ack_in, o_data_V_last_V_1_ack_in, ap_enable_reg_pp0_iter1, currentState_load_reg_797, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_block_state10_io, ap_block_state11_io)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and ((o_data_V_last_V_1_ack_in = ap_const_logic_0) or (o_data_V_data_V_1_ack_in = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state11_io))) or ((ap_const_boolean_1 = ap_block_state10_io) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1)) or ((currentState_load_reg_797 = ap_const_lv1_1) and (i_data_V_data_V_0_vld_out = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(i_data_V_data_V_0_vld_out, o_data_V_data_V_1_ack_in, o_data_V_last_V_1_ack_in, ap_enable_reg_pp0_iter1, currentState_load_reg_797, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_block_state10_io, ap_block_state11_io)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and ((o_data_V_last_V_1_ack_in = ap_const_logic_0) or (o_data_V_data_V_1_ack_in = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state11_io))) or ((ap_const_boolean_1 = ap_block_state10_io) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1)) or ((currentState_load_reg_797 = ap_const_lv1_1) and (i_data_V_data_V_0_vld_out = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_state10_io_assign_proc : process(o_data_V_data_V_1_ack_in, ap_predicate_op138_write_state10, ap_predicate_op139_write_state10)
    begin
                ap_block_state10_io <= (((o_data_V_data_V_1_ack_in = ap_const_logic_0) and (ap_predicate_op139_write_state10 = ap_const_boolean_1)) or ((o_data_V_data_V_1_ack_in = ap_const_logic_0) and (ap_predicate_op138_write_state10 = ap_const_boolean_1)));
    end process;

        ap_block_state10_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state11_io_assign_proc : process(o_data_V_data_V_1_ack_in, ap_predicate_op159_write_state11, ap_predicate_op161_write_state11)
    begin
                ap_block_state11_io <= (((o_data_V_data_V_1_ack_in = ap_const_logic_0) and (ap_predicate_op161_write_state11 = ap_const_boolean_1)) or ((o_data_V_data_V_1_ack_in = ap_const_logic_0) and (ap_predicate_op159_write_state11 = ap_const_boolean_1)));
    end process;


    ap_block_state11_pp0_stage0_iter10_assign_proc : process(o_data_V_data_V_1_ack_in, o_data_V_last_V_1_ack_in)
    begin
                ap_block_state11_pp0_stage0_iter10 <= ((o_data_V_last_V_1_ack_in = ap_const_logic_0) or (o_data_V_data_V_1_ack_in = ap_const_logic_0));
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state2_pp0_stage0_iter1_assign_proc : process(i_data_V_data_V_0_vld_out, currentState_load_reg_797)
    begin
                ap_block_state2_pp0_stage0_iter1 <= ((currentState_load_reg_797 = ap_const_lv1_1) and (i_data_V_data_V_0_vld_out = ap_const_logic_0));
    end process;

        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_502_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
                ap_condition_502 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_p_0320_2_i_reg_174 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_p_0324_2_i_reg_163 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_p_0332_2_i_reg_152 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_p_0336_2_i_reg_141 <= "XXXXXXXXXXXXXXXX";

    ap_predicate_op138_write_state10_assign_proc : process(ap_reg_pp0_iter8_currentState_load_reg_797, tmp_5_reg_937)
    begin
                ap_predicate_op138_write_state10 <= ((ap_reg_pp0_iter8_currentState_load_reg_797 = ap_const_lv1_1) and (tmp_5_reg_937 = ap_const_lv1_0));
    end process;


    ap_predicate_op139_write_state10_assign_proc : process(ap_reg_pp0_iter8_currentState_load_reg_797, tmp_5_reg_937)
    begin
                ap_predicate_op139_write_state10 <= ((tmp_5_reg_937 = ap_const_lv1_1) and (ap_reg_pp0_iter8_currentState_load_reg_797 = ap_const_lv1_1));
    end process;


    ap_predicate_op159_write_state11_assign_proc : process(ap_reg_pp0_iter9_currentState_load_reg_797, ap_reg_pp0_iter9_tmp_5_reg_937)
    begin
                ap_predicate_op159_write_state11 <= ((ap_reg_pp0_iter9_currentState_load_reg_797 = ap_const_lv1_1) and (ap_reg_pp0_iter9_tmp_5_reg_937 = ap_const_lv1_0));
    end process;


    ap_predicate_op161_write_state11_assign_proc : process(ap_reg_pp0_iter9_currentState_load_reg_797, ap_reg_pp0_iter9_tmp_5_reg_937)
    begin
                ap_predicate_op161_write_state11 <= ((ap_reg_pp0_iter9_tmp_5_reg_937 = ap_const_lv1_1) and (ap_reg_pp0_iter9_currentState_load_reg_797 = ap_const_lv1_1));
    end process;

    ap_reset_idle_pp0 <= ap_const_logic_0;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    cond_i_fu_239_p2 <= "1" when (phaseClass_V = ap_const_lv4_0) else "0";
    corHelperINeg_V_7_i_fu_695_p2 <= std_logic_vector(unsigned(tmp13_reg_870) + unsigned(tmp10_fu_691_p2));
    corHelperIPos_V_i_fu_677_p2 <= std_logic_vector(unsigned(tmp2_reg_845) + unsigned(tmp_fu_673_p2));
    corHelperQNeg_V_7_i_fu_704_p2 <= std_logic_vector(unsigned(tmp20_reg_885) + unsigned(tmp17_fu_700_p2));
    corHelperQPos_V_i_fu_686_p2 <= std_logic_vector(unsigned(tmp7_reg_855) + unsigned(tmp5_fu_682_p2));

    grp_fu_789_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_789_ce <= ap_const_logic_1;
        else 
            grp_fu_789_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_793_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_793_ce <= ap_const_logic_1;
        else 
            grp_fu_793_ce <= ap_const_logic_0;
        end if; 
    end process;


    i_data_TDATA_blk_n_assign_proc : process(i_data_V_data_V_0_state, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, currentState_load_reg_797)
    begin
        if (((currentState_load_reg_797 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            i_data_TDATA_blk_n <= i_data_V_data_V_0_state(0);
        else 
            i_data_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    i_data_TREADY <= i_data_V_last_V_0_state(1);
    i_data_V_data_V_0_ack_in <= i_data_V_data_V_0_state(1);

    i_data_V_data_V_0_ack_out_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, currentState_load_reg_797, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (currentState_load_reg_797 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            i_data_V_data_V_0_ack_out <= ap_const_logic_1;
        else 
            i_data_V_data_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    i_data_V_data_V_0_data_out_assign_proc : process(i_data_V_data_V_0_payload_A, i_data_V_data_V_0_payload_B, i_data_V_data_V_0_sel)
    begin
        if ((i_data_V_data_V_0_sel = ap_const_logic_1)) then 
            i_data_V_data_V_0_data_out <= i_data_V_data_V_0_payload_B;
        else 
            i_data_V_data_V_0_data_out <= i_data_V_data_V_0_payload_A;
        end if; 
    end process;

    i_data_V_data_V_0_load_A <= (i_data_V_data_V_0_state_cmp_full and not(i_data_V_data_V_0_sel_wr));
    i_data_V_data_V_0_load_B <= (i_data_V_data_V_0_state_cmp_full and i_data_V_data_V_0_sel_wr);
    i_data_V_data_V_0_sel <= i_data_V_data_V_0_sel_rd;
    i_data_V_data_V_0_state_cmp_full <= '0' when (i_data_V_data_V_0_state = ap_const_lv2_1) else '1';
    i_data_V_data_V_0_vld_in <= i_data_TVALID;
    i_data_V_data_V_0_vld_out <= i_data_V_data_V_0_state(0);
    i_data_V_last_V_0_ack_in <= i_data_V_last_V_0_state(1);

    i_data_V_last_V_0_ack_out_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, currentState_load_reg_797, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (currentState_load_reg_797 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            i_data_V_last_V_0_ack_out <= ap_const_logic_1;
        else 
            i_data_V_last_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    i_data_V_last_V_0_data_out_assign_proc : process(i_data_V_last_V_0_payload_A, i_data_V_last_V_0_payload_B, i_data_V_last_V_0_sel)
    begin
        if ((i_data_V_last_V_0_sel = ap_const_logic_1)) then 
            i_data_V_last_V_0_data_out <= i_data_V_last_V_0_payload_B;
        else 
            i_data_V_last_V_0_data_out <= i_data_V_last_V_0_payload_A;
        end if; 
    end process;

    i_data_V_last_V_0_load_A <= (i_data_V_last_V_0_state_cmp_full and not(i_data_V_last_V_0_sel_wr));
    i_data_V_last_V_0_load_B <= (i_data_V_last_V_0_state_cmp_full and i_data_V_last_V_0_sel_wr);
    i_data_V_last_V_0_sel <= i_data_V_last_V_0_sel_rd;
    i_data_V_last_V_0_state_cmp_full <= '0' when (i_data_V_last_V_0_state = ap_const_lv2_1) else '1';
    i_data_V_last_V_0_vld_in <= i_data_TVALID;
    i_data_V_last_V_0_vld_out <= i_data_V_last_V_0_state(0);
    o_data_TDATA <= o_data_V_data_V_1_data_out;

    o_data_TDATA_blk_n_assign_proc : process(o_data_V_data_V_1_state, ap_block_pp0_stage0, ap_enable_reg_pp0_iter9, ap_reg_pp0_iter8_currentState_load_reg_797, tmp_5_reg_937, ap_enable_reg_pp0_iter10, ap_reg_pp0_iter9_currentState_load_reg_797, ap_reg_pp0_iter9_tmp_5_reg_937)
    begin
        if ((((ap_reg_pp0_iter9_tmp_5_reg_937 = ap_const_lv1_1) and (ap_reg_pp0_iter9_currentState_load_reg_797 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1)) or ((ap_reg_pp0_iter9_currentState_load_reg_797 = ap_const_lv1_1) and (ap_reg_pp0_iter9_tmp_5_reg_937 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1)) or ((tmp_5_reg_937 = ap_const_lv1_1) and (ap_reg_pp0_iter8_currentState_load_reg_797 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1)) or ((ap_reg_pp0_iter8_currentState_load_reg_797 = ap_const_lv1_1) and (tmp_5_reg_937 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1)))) then 
            o_data_TDATA_blk_n <= o_data_V_data_V_1_state(1);
        else 
            o_data_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    o_data_TLAST <= o_data_V_last_V_1_data_out;
    o_data_TVALID <= o_data_V_last_V_1_state(0);
    o_data_V_data_V_1_ack_in <= o_data_V_data_V_1_state(1);
    o_data_V_data_V_1_ack_out <= o_data_TREADY;

    o_data_V_data_V_1_data_in_assign_proc : process(ap_enable_reg_pp0_iter9, ap_predicate_op138_write_state10, ap_predicate_op139_write_state10, p_Result_s_reg_932, ap_block_pp0_stage0_01001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1))) then
            if ((ap_predicate_op139_write_state10 = ap_const_boolean_1)) then 
                o_data_V_data_V_1_data_in <= ap_const_lv32_0;
            elsif ((ap_predicate_op138_write_state10 = ap_const_boolean_1)) then 
                o_data_V_data_V_1_data_in <= p_Result_s_reg_932;
            else 
                o_data_V_data_V_1_data_in <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            o_data_V_data_V_1_data_in <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    o_data_V_data_V_1_data_out_assign_proc : process(o_data_V_data_V_1_payload_A, o_data_V_data_V_1_payload_B, o_data_V_data_V_1_sel)
    begin
        if ((o_data_V_data_V_1_sel = ap_const_logic_1)) then 
            o_data_V_data_V_1_data_out <= o_data_V_data_V_1_payload_B;
        else 
            o_data_V_data_V_1_data_out <= o_data_V_data_V_1_payload_A;
        end if; 
    end process;

    o_data_V_data_V_1_load_A <= (o_data_V_data_V_1_state_cmp_full and not(o_data_V_data_V_1_sel_wr));
    o_data_V_data_V_1_load_B <= (o_data_V_data_V_1_state_cmp_full and o_data_V_data_V_1_sel_wr);
    o_data_V_data_V_1_sel <= o_data_V_data_V_1_sel_rd;
    o_data_V_data_V_1_state_cmp_full <= '0' when (o_data_V_data_V_1_state = ap_const_lv2_1) else '1';

    o_data_V_data_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter9, ap_predicate_op138_write_state10, ap_predicate_op139_write_state10, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op139_write_state10 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op138_write_state10 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1)))) then 
            o_data_V_data_V_1_vld_in <= ap_const_logic_1;
        else 
            o_data_V_data_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    o_data_V_data_V_1_vld_out <= o_data_V_data_V_1_state(0);
    o_data_V_last_V_1_ack_in <= o_data_V_last_V_1_state(1);
    o_data_V_last_V_1_ack_out <= o_data_TREADY;

    o_data_V_last_V_1_data_out_assign_proc : process(o_data_V_last_V_1_payload_A, o_data_V_last_V_1_payload_B, o_data_V_last_V_1_sel)
    begin
        if ((o_data_V_last_V_1_sel = ap_const_logic_1)) then 
            o_data_V_last_V_1_data_out <= o_data_V_last_V_1_payload_B;
        else 
            o_data_V_last_V_1_data_out <= o_data_V_last_V_1_payload_A;
        end if; 
    end process;

    o_data_V_last_V_1_load_A <= (o_data_V_last_V_1_state_cmp_full and not(o_data_V_last_V_1_sel_wr));
    o_data_V_last_V_1_load_B <= (o_data_V_last_V_1_state_cmp_full and o_data_V_last_V_1_sel_wr);
    o_data_V_last_V_1_sel <= o_data_V_last_V_1_sel_rd;
    o_data_V_last_V_1_state_cmp_full <= '0' when (o_data_V_last_V_1_state = ap_const_lv2_1) else '1';

    o_data_V_last_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter9, ap_predicate_op138_write_state10, ap_predicate_op139_write_state10, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op139_write_state10 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op138_write_state10 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1)))) then 
            o_data_V_last_V_1_vld_in <= ap_const_logic_1;
        else 
            o_data_V_last_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    o_data_V_last_V_1_vld_out <= o_data_V_last_V_1_state(0);
    op2_V_read_assign_1_fu_223_p4 <= i_data_V_data_V_0_data_out(31 downto 16);
    p_Result_s_fu_755_p3 <= (resq_V_3_reg_927 & resi_V_3_reg_922);
    resi_V_1_fu_721_p2 <= std_logic_vector(unsigned(ap_phi_reg_pp0_iter4_p_0336_2_i_reg_141) - unsigned(ap_phi_reg_pp0_iter4_p_0332_2_i_reg_152));
    resi_V_2_fu_727_p3 <= 
        resi_V_fu_715_p2 when (tmp_4_i_fu_709_p2(0) = '1') else 
        resi_V_1_fu_721_p2;
    resi_V_fu_715_p2 <= std_logic_vector(unsigned(ap_phi_reg_pp0_iter4_p_0332_2_i_reg_152) - unsigned(ap_phi_reg_pp0_iter4_p_0336_2_i_reg_141));
    resq_V_1_fu_741_p2 <= std_logic_vector(unsigned(ap_phi_reg_pp0_iter4_p_0324_2_i_reg_163) - unsigned(ap_phi_reg_pp0_iter4_p_0320_2_i_reg_174));
    resq_V_2_fu_747_p3 <= 
        resq_V_fu_735_p2 when (tmp_4_i_fu_709_p2(0) = '1') else 
        resq_V_1_fu_741_p2;
    resq_V_fu_735_p2 <= std_logic_vector(unsigned(ap_phi_reg_pp0_iter4_p_0320_2_i_reg_174) - unsigned(ap_phi_reg_pp0_iter4_p_0324_2_i_reg_163));
    tmp10_fu_691_p2 <= std_logic_vector(unsigned(tmp12_reg_865) + unsigned(tmp11_reg_860));
    tmp11_fu_627_p2 <= std_logic_vector(unsigned(cor_phaseClass0i_V_11) + unsigned(cor_phaseClass0i_V_14));
    tmp12_fu_633_p2 <= std_logic_vector(unsigned(cor_phaseClass0i_V_10) + unsigned(cor_phaseClass0i_V_9));
    tmp13_fu_645_p2 <= std_logic_vector(unsigned(tmp15_reg_820) + unsigned(tmp14_fu_639_p2));
    tmp14_fu_639_p2 <= std_logic_vector(unsigned(cor_phaseClass0i_V_4) + unsigned(cor_phaseClass0i_V_3));
    tmp15_fu_291_p2 <= std_logic_vector(unsigned(tmp16_fu_285_p2) + unsigned(cor_phaseClass0i_V_1));
    tmp16_fu_285_p2 <= std_logic_vector(unsigned(cor_phaseClass0i_V_0) + unsigned(tmp_1_fu_213_p1));
    tmp17_fu_700_p2 <= std_logic_vector(unsigned(tmp19_reg_880) + unsigned(tmp18_reg_875));
    tmp18_fu_650_p2 <= std_logic_vector(unsigned(cor_phaseClass0q_V_11) + unsigned(cor_phaseClass0q_V_14));
    tmp19_fu_656_p2 <= std_logic_vector(unsigned(cor_phaseClass0q_V_10) + unsigned(cor_phaseClass0q_V_9));
    tmp1_fu_579_p2 <= std_logic_vector(unsigned(cor_phaseClass0i_V_13) + unsigned(cor_phaseClass0i_V_8));
    tmp20_fu_668_p2 <= std_logic_vector(unsigned(tmp22_reg_825) + unsigned(tmp21_fu_662_p2));
    tmp21_fu_662_p2 <= std_logic_vector(unsigned(cor_phaseClass0q_V_4) + unsigned(cor_phaseClass0q_V_3));
    tmp22_fu_303_p2 <= std_logic_vector(unsigned(tmp23_fu_297_p2) + unsigned(cor_phaseClass0q_V_1));
    tmp23_fu_297_p2 <= std_logic_vector(unsigned(cor_phaseClass0q_V_0) + unsigned(op2_V_read_assign_1_fu_223_p4));
    tmp2_fu_597_p2 <= std_logic_vector(unsigned(tmp4_fu_591_p2) + unsigned(tmp3_fu_585_p2));
    tmp3_fu_585_p2 <= std_logic_vector(unsigned(cor_phaseClass0i_V_7) + unsigned(cor_phaseClass0i_V_6));
    tmp4_fu_591_p2 <= std_logic_vector(unsigned(cor_phaseClass0i_V_5) + unsigned(cor_phaseClass0i_V_2));
    tmp5_fu_682_p2 <= std_logic_vector(unsigned(tmp6_reg_850) + unsigned(cor_phaseClass0q_V_1_2_reg_835));
    tmp6_fu_603_p2 <= std_logic_vector(unsigned(cor_phaseClass0q_V_13) + unsigned(cor_phaseClass0q_V_8));
    tmp7_fu_621_p2 <= std_logic_vector(unsigned(tmp9_fu_615_p2) + unsigned(tmp8_fu_609_p2));
    tmp8_fu_609_p2 <= std_logic_vector(unsigned(cor_phaseClass0q_V_7) + unsigned(cor_phaseClass0q_V_6));
    tmp9_fu_615_p2 <= std_logic_vector(unsigned(cor_phaseClass0q_V_5) + unsigned(cor_phaseClass0q_V_2));
    tmp_1_fu_213_p1 <= i_data_V_data_V_0_data_out(16 - 1 downto 0);
    tmp_2_fu_777_p2 <= std_logic_vector(unsigned(loadCount_V) + unsigned(ap_const_lv32_1));
    tmp_4_fu_309_p2 <= std_logic_vector(unsigned(phaseClass_V) + unsigned(ap_const_lv4_1));
    tmp_4_i_fu_709_p2 <= "1" when (signed(ap_phi_reg_pp0_iter4_p_0332_2_i_reg_152) > signed(ap_phi_reg_pp0_iter4_p_0336_2_i_reg_141)) else "0";
    tmp_5_fu_761_p2 <= "1" when (p_Result_s_fu_755_p3 = ap_const_lv32_0) else "0";
    tmp_fu_673_p2 <= std_logic_vector(unsigned(tmp1_reg_840) + unsigned(cor_phaseClass0i_V_1_2_reg_830));
end behav;
