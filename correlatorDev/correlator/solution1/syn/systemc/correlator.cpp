// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "correlator.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic correlator::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic correlator::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<1> correlator::ap_ST_fsm_state1 = "1";
const bool correlator::ap_const_boolean_1 = true;
const sc_lv<1> correlator::ap_const_lv1_0 = "0";
const sc_lv<1> correlator::ap_const_lv1_1 = "1";
const sc_lv<2> correlator::ap_const_lv2_0 = "00";
const sc_lv<2> correlator::ap_const_lv2_2 = "10";
const sc_lv<2> correlator::ap_const_lv2_3 = "11";
const sc_lv<2> correlator::ap_const_lv2_1 = "1";
const sc_lv<32> correlator::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<8> correlator::ap_const_lv8_0 = "00000000";

correlator::correlator(sc_module_name name) : sc_module(name), mVcdFile(0) {
    correlator_mux_25bkb_U1 = new correlator_mux_25bkbcorrelator_mux_25bkb_U1");
    correlator_mux_25bkb_U1->din0(ap_var_for_const0);
    correlator_mux_25bkb_U1->din1(ap_var_for_const0);
    correlator_mux_25bkb_U1->din2(ap_var_for_const0);
    correlator_mux_25bkb_U1->din3(ap_var_for_const0);
    correlator_mux_25bkb_U1->din4(ap_var_for_const0);
    correlator_mux_25bkb_U1->din5(ap_var_for_const0);
    correlator_mux_25bkb_U1->din6(ap_var_for_const0);
    correlator_mux_25bkb_U1->din7(ap_var_for_const0);
    correlator_mux_25bkb_U1->din8(ap_var_for_const0);
    correlator_mux_25bkb_U1->din9(ap_var_for_const0);
    correlator_mux_25bkb_U1->din10(ap_var_for_const0);
    correlator_mux_25bkb_U1->din11(ap_var_for_const0);
    correlator_mux_25bkb_U1->din12(ap_var_for_const0);
    correlator_mux_25bkb_U1->din13(ap_var_for_const0);
    correlator_mux_25bkb_U1->din14(ap_var_for_const0);
    correlator_mux_25bkb_U1->din15(ap_var_for_const0);
    correlator_mux_25bkb_U1->din16(ap_var_for_const0);
    correlator_mux_25bkb_U1->din17(ap_var_for_const0);
    correlator_mux_25bkb_U1->din18(ap_var_for_const0);
    correlator_mux_25bkb_U1->din19(ap_var_for_const0);
    correlator_mux_25bkb_U1->din20(ap_var_for_const0);
    correlator_mux_25bkb_U1->din21(ap_var_for_const0);
    correlator_mux_25bkb_U1->din22(ap_var_for_const0);
    correlator_mux_25bkb_U1->din23(ap_var_for_const0);
    correlator_mux_25bkb_U1->din24(ap_var_for_const0);
    correlator_mux_25bkb_U1->din25(ap_var_for_const0);
    correlator_mux_25bkb_U1->din26(ap_var_for_const0);
    correlator_mux_25bkb_U1->din27(ap_var_for_const0);
    correlator_mux_25bkb_U1->din28(ap_var_for_const0);
    correlator_mux_25bkb_U1->din29(ap_var_for_const0);
    correlator_mux_25bkb_U1->din30(ap_var_for_const0);
    correlator_mux_25bkb_U1->din31(ap_var_for_const0);
    correlator_mux_25bkb_U1->din32(ap_var_for_const0);
    correlator_mux_25bkb_U1->din33(ap_var_for_const0);
    correlator_mux_25bkb_U1->din34(ap_var_for_const0);
    correlator_mux_25bkb_U1->din35(ap_var_for_const0);
    correlator_mux_25bkb_U1->din36(ap_var_for_const0);
    correlator_mux_25bkb_U1->din37(ap_var_for_const0);
    correlator_mux_25bkb_U1->din38(ap_var_for_const0);
    correlator_mux_25bkb_U1->din39(ap_var_for_const0);
    correlator_mux_25bkb_U1->din40(ap_var_for_const0);
    correlator_mux_25bkb_U1->din41(ap_var_for_const0);
    correlator_mux_25bkb_U1->din42(ap_var_for_const0);
    correlator_mux_25bkb_U1->din43(ap_var_for_const0);
    correlator_mux_25bkb_U1->din44(ap_var_for_const0);
    correlator_mux_25bkb_U1->din45(ap_var_for_const0);
    correlator_mux_25bkb_U1->din46(ap_var_for_const0);
    correlator_mux_25bkb_U1->din47(ap_var_for_const0);
    correlator_mux_25bkb_U1->din48(ap_var_for_const0);
    correlator_mux_25bkb_U1->din49(ap_var_for_const0);
    correlator_mux_25bkb_U1->din50(ap_var_for_const0);
    correlator_mux_25bkb_U1->din51(ap_var_for_const0);
    correlator_mux_25bkb_U1->din52(ap_var_for_const0);
    correlator_mux_25bkb_U1->din53(ap_var_for_const0);
    correlator_mux_25bkb_U1->din54(ap_var_for_const0);
    correlator_mux_25bkb_U1->din55(ap_var_for_const0);
    correlator_mux_25bkb_U1->din56(ap_var_for_const0);
    correlator_mux_25bkb_U1->din57(ap_var_for_const0);
    correlator_mux_25bkb_U1->din58(ap_var_for_const0);
    correlator_mux_25bkb_U1->din59(ap_var_for_const0);
    correlator_mux_25bkb_U1->din60(ap_var_for_const0);
    correlator_mux_25bkb_U1->din61(ap_var_for_const0);
    correlator_mux_25bkb_U1->din62(ap_var_for_const0);
    correlator_mux_25bkb_U1->din63(ap_var_for_const0);
    correlator_mux_25bkb_U1->din64(ap_var_for_const0);
    correlator_mux_25bkb_U1->din65(ap_var_for_const0);
    correlator_mux_25bkb_U1->din66(ap_var_for_const0);
    correlator_mux_25bkb_U1->din67(ap_var_for_const0);
    correlator_mux_25bkb_U1->din68(ap_var_for_const0);
    correlator_mux_25bkb_U1->din69(ap_var_for_const0);
    correlator_mux_25bkb_U1->din70(ap_var_for_const0);
    correlator_mux_25bkb_U1->din71(ap_var_for_const0);
    correlator_mux_25bkb_U1->din72(ap_var_for_const0);
    correlator_mux_25bkb_U1->din73(ap_var_for_const0);
    correlator_mux_25bkb_U1->din74(ap_var_for_const0);
    correlator_mux_25bkb_U1->din75(ap_var_for_const0);
    correlator_mux_25bkb_U1->din76(ap_var_for_const0);
    correlator_mux_25bkb_U1->din77(ap_var_for_const0);
    correlator_mux_25bkb_U1->din78(ap_var_for_const0);
    correlator_mux_25bkb_U1->din79(ap_var_for_const0);
    correlator_mux_25bkb_U1->din80(ap_var_for_const0);
    correlator_mux_25bkb_U1->din81(ap_var_for_const0);
    correlator_mux_25bkb_U1->din82(ap_var_for_const0);
    correlator_mux_25bkb_U1->din83(ap_var_for_const0);
    correlator_mux_25bkb_U1->din84(ap_var_for_const0);
    correlator_mux_25bkb_U1->din85(ap_var_for_const0);
    correlator_mux_25bkb_U1->din86(ap_var_for_const0);
    correlator_mux_25bkb_U1->din87(ap_var_for_const0);
    correlator_mux_25bkb_U1->din88(ap_var_for_const0);
    correlator_mux_25bkb_U1->din89(ap_var_for_const0);
    correlator_mux_25bkb_U1->din90(ap_var_for_const0);
    correlator_mux_25bkb_U1->din91(ap_var_for_const0);
    correlator_mux_25bkb_U1->din92(ap_var_for_const0);
    correlator_mux_25bkb_U1->din93(ap_var_for_const0);
    correlator_mux_25bkb_U1->din94(ap_var_for_const0);
    correlator_mux_25bkb_U1->din95(ap_var_for_const0);
    correlator_mux_25bkb_U1->din96(ap_var_for_const0);
    correlator_mux_25bkb_U1->din97(ap_var_for_const0);
    correlator_mux_25bkb_U1->din98(ap_var_for_const0);
    correlator_mux_25bkb_U1->din99(ap_var_for_const0);
    correlator_mux_25bkb_U1->din100(ap_var_for_const0);
    correlator_mux_25bkb_U1->din101(ap_var_for_const0);
    correlator_mux_25bkb_U1->din102(ap_var_for_const0);
    correlator_mux_25bkb_U1->din103(ap_var_for_const0);
    correlator_mux_25bkb_U1->din104(ap_var_for_const0);
    correlator_mux_25bkb_U1->din105(ap_var_for_const0);
    correlator_mux_25bkb_U1->din106(ap_var_for_const0);
    correlator_mux_25bkb_U1->din107(ap_var_for_const0);
    correlator_mux_25bkb_U1->din108(ap_var_for_const0);
    correlator_mux_25bkb_U1->din109(ap_var_for_const0);
    correlator_mux_25bkb_U1->din110(ap_var_for_const0);
    correlator_mux_25bkb_U1->din111(ap_var_for_const0);
    correlator_mux_25bkb_U1->din112(ap_var_for_const0);
    correlator_mux_25bkb_U1->din113(ap_var_for_const0);
    correlator_mux_25bkb_U1->din114(ap_var_for_const0);
    correlator_mux_25bkb_U1->din115(ap_var_for_const0);
    correlator_mux_25bkb_U1->din116(ap_var_for_const0);
    correlator_mux_25bkb_U1->din117(ap_var_for_const0);
    correlator_mux_25bkb_U1->din118(ap_var_for_const0);
    correlator_mux_25bkb_U1->din119(ap_var_for_const0);
    correlator_mux_25bkb_U1->din120(ap_var_for_const0);
    correlator_mux_25bkb_U1->din121(ap_var_for_const0);
    correlator_mux_25bkb_U1->din122(ap_var_for_const0);
    correlator_mux_25bkb_U1->din123(ap_var_for_const0);
    correlator_mux_25bkb_U1->din124(ap_var_for_const0);
    correlator_mux_25bkb_U1->din125(ap_var_for_const0);
    correlator_mux_25bkb_U1->din126(ap_var_for_const0);
    correlator_mux_25bkb_U1->din127(ap_var_for_const0);
    correlator_mux_25bkb_U1->din128(ap_var_for_const0);
    correlator_mux_25bkb_U1->din129(ap_var_for_const0);
    correlator_mux_25bkb_U1->din130(ap_var_for_const0);
    correlator_mux_25bkb_U1->din131(ap_var_for_const0);
    correlator_mux_25bkb_U1->din132(ap_var_for_const0);
    correlator_mux_25bkb_U1->din133(ap_var_for_const0);
    correlator_mux_25bkb_U1->din134(ap_var_for_const0);
    correlator_mux_25bkb_U1->din135(ap_var_for_const0);
    correlator_mux_25bkb_U1->din136(ap_var_for_const0);
    correlator_mux_25bkb_U1->din137(ap_var_for_const0);
    correlator_mux_25bkb_U1->din138(ap_var_for_const0);
    correlator_mux_25bkb_U1->din139(ap_var_for_const0);
    correlator_mux_25bkb_U1->din140(ap_var_for_const0);
    correlator_mux_25bkb_U1->din141(ap_var_for_const0);
    correlator_mux_25bkb_U1->din142(ap_var_for_const0);
    correlator_mux_25bkb_U1->din143(ap_var_for_const0);
    correlator_mux_25bkb_U1->din144(ap_var_for_const0);
    correlator_mux_25bkb_U1->din145(ap_var_for_const0);
    correlator_mux_25bkb_U1->din146(ap_var_for_const0);
    correlator_mux_25bkb_U1->din147(ap_var_for_const0);
    correlator_mux_25bkb_U1->din148(ap_var_for_const0);
    correlator_mux_25bkb_U1->din149(ap_var_for_const0);
    correlator_mux_25bkb_U1->din150(ap_var_for_const0);
    correlator_mux_25bkb_U1->din151(ap_var_for_const0);
    correlator_mux_25bkb_U1->din152(ap_var_for_const0);
    correlator_mux_25bkb_U1->din153(ap_var_for_const0);
    correlator_mux_25bkb_U1->din154(ap_var_for_const0);
    correlator_mux_25bkb_U1->din155(ap_var_for_const0);
    correlator_mux_25bkb_U1->din156(ap_var_for_const0);
    correlator_mux_25bkb_U1->din157(ap_var_for_const0);
    correlator_mux_25bkb_U1->din158(ap_var_for_const0);
    correlator_mux_25bkb_U1->din159(ap_var_for_const0);
    correlator_mux_25bkb_U1->din160(ap_var_for_const0);
    correlator_mux_25bkb_U1->din161(ap_var_for_const0);
    correlator_mux_25bkb_U1->din162(ap_var_for_const0);
    correlator_mux_25bkb_U1->din163(ap_var_for_const0);
    correlator_mux_25bkb_U1->din164(ap_var_for_const0);
    correlator_mux_25bkb_U1->din165(ap_var_for_const0);
    correlator_mux_25bkb_U1->din166(ap_var_for_const0);
    correlator_mux_25bkb_U1->din167(ap_var_for_const0);
    correlator_mux_25bkb_U1->din168(ap_var_for_const0);
    correlator_mux_25bkb_U1->din169(ap_var_for_const0);
    correlator_mux_25bkb_U1->din170(ap_var_for_const0);
    correlator_mux_25bkb_U1->din171(ap_var_for_const0);
    correlator_mux_25bkb_U1->din172(ap_var_for_const0);
    correlator_mux_25bkb_U1->din173(ap_var_for_const0);
    correlator_mux_25bkb_U1->din174(ap_var_for_const0);
    correlator_mux_25bkb_U1->din175(ap_var_for_const0);
    correlator_mux_25bkb_U1->din176(ap_var_for_const0);
    correlator_mux_25bkb_U1->din177(ap_var_for_const0);
    correlator_mux_25bkb_U1->din178(ap_var_for_const0);
    correlator_mux_25bkb_U1->din179(ap_var_for_const0);
    correlator_mux_25bkb_U1->din180(ap_var_for_const0);
    correlator_mux_25bkb_U1->din181(ap_var_for_const0);
    correlator_mux_25bkb_U1->din182(ap_var_for_const0);
    correlator_mux_25bkb_U1->din183(ap_var_for_const0);
    correlator_mux_25bkb_U1->din184(ap_var_for_const0);
    correlator_mux_25bkb_U1->din185(ap_var_for_const0);
    correlator_mux_25bkb_U1->din186(ap_var_for_const0);
    correlator_mux_25bkb_U1->din187(ap_var_for_const0);
    correlator_mux_25bkb_U1->din188(ap_var_for_const0);
    correlator_mux_25bkb_U1->din189(ap_var_for_const0);
    correlator_mux_25bkb_U1->din190(ap_var_for_const0);
    correlator_mux_25bkb_U1->din191(ap_var_for_const0);
    correlator_mux_25bkb_U1->din192(ap_var_for_const0);
    correlator_mux_25bkb_U1->din193(ap_var_for_const0);
    correlator_mux_25bkb_U1->din194(ap_var_for_const0);
    correlator_mux_25bkb_U1->din195(ap_var_for_const0);
    correlator_mux_25bkb_U1->din196(ap_var_for_const0);
    correlator_mux_25bkb_U1->din197(ap_var_for_const0);
    correlator_mux_25bkb_U1->din198(ap_var_for_const0);
    correlator_mux_25bkb_U1->din199(ap_var_for_const0);
    correlator_mux_25bkb_U1->din200(ap_var_for_const0);
    correlator_mux_25bkb_U1->din201(ap_var_for_const0);
    correlator_mux_25bkb_U1->din202(ap_var_for_const0);
    correlator_mux_25bkb_U1->din203(ap_var_for_const0);
    correlator_mux_25bkb_U1->din204(ap_var_for_const0);
    correlator_mux_25bkb_U1->din205(ap_var_for_const0);
    correlator_mux_25bkb_U1->din206(ap_var_for_const0);
    correlator_mux_25bkb_U1->din207(ap_var_for_const0);
    correlator_mux_25bkb_U1->din208(ap_var_for_const0);
    correlator_mux_25bkb_U1->din209(ap_var_for_const0);
    correlator_mux_25bkb_U1->din210(ap_var_for_const0);
    correlator_mux_25bkb_U1->din211(ap_var_for_const0);
    correlator_mux_25bkb_U1->din212(ap_var_for_const0);
    correlator_mux_25bkb_U1->din213(ap_var_for_const0);
    correlator_mux_25bkb_U1->din214(ap_var_for_const0);
    correlator_mux_25bkb_U1->din215(ap_var_for_const0);
    correlator_mux_25bkb_U1->din216(ap_var_for_const0);
    correlator_mux_25bkb_U1->din217(ap_var_for_const0);
    correlator_mux_25bkb_U1->din218(ap_var_for_const0);
    correlator_mux_25bkb_U1->din219(ap_var_for_const0);
    correlator_mux_25bkb_U1->din220(ap_var_for_const0);
    correlator_mux_25bkb_U1->din221(ap_var_for_const0);
    correlator_mux_25bkb_U1->din222(ap_var_for_const0);
    correlator_mux_25bkb_U1->din223(ap_var_for_const0);
    correlator_mux_25bkb_U1->din224(ap_var_for_const0);
    correlator_mux_25bkb_U1->din225(ap_var_for_const0);
    correlator_mux_25bkb_U1->din226(ap_var_for_const0);
    correlator_mux_25bkb_U1->din227(ap_var_for_const0);
    correlator_mux_25bkb_U1->din228(ap_var_for_const0);
    correlator_mux_25bkb_U1->din229(ap_var_for_const0);
    correlator_mux_25bkb_U1->din230(ap_var_for_const0);
    correlator_mux_25bkb_U1->din231(ap_var_for_const0);
    correlator_mux_25bkb_U1->din232(ap_var_for_const0);
    correlator_mux_25bkb_U1->din233(ap_var_for_const0);
    correlator_mux_25bkb_U1->din234(ap_var_for_const0);
    correlator_mux_25bkb_U1->din235(ap_var_for_const0);
    correlator_mux_25bkb_U1->din236(ap_var_for_const0);
    correlator_mux_25bkb_U1->din237(ap_var_for_const0);
    correlator_mux_25bkb_U1->din238(ap_var_for_const0);
    correlator_mux_25bkb_U1->din239(ap_var_for_const0);
    correlator_mux_25bkb_U1->din240(ap_var_for_const0);
    correlator_mux_25bkb_U1->din241(ap_var_for_const0);
    correlator_mux_25bkb_U1->din242(ap_var_for_const0);
    correlator_mux_25bkb_U1->din243(ap_var_for_const0);
    correlator_mux_25bkb_U1->din244(ap_var_for_const0);
    correlator_mux_25bkb_U1->din245(ap_var_for_const0);
    correlator_mux_25bkb_U1->din246(ap_var_for_const0);
    correlator_mux_25bkb_U1->din247(ap_var_for_const0);
    correlator_mux_25bkb_U1->din248(ap_var_for_const0);
    correlator_mux_25bkb_U1->din249(ap_var_for_const0);
    correlator_mux_25bkb_U1->din250(ap_var_for_const0);
    correlator_mux_25bkb_U1->din251(ap_var_for_const0);
    correlator_mux_25bkb_U1->din252(ap_var_for_const0);
    correlator_mux_25bkb_U1->din253(ap_var_for_const0);
    correlator_mux_25bkb_U1->din254(ap_var_for_const0);
    correlator_mux_25bkb_U1->din255(ap_var_for_const0);
    correlator_mux_25bkb_U1->din256(ap_var_for_const1);
    correlator_mux_25bkb_U1->dout(empty_3_fu_86_p258);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( i_data_TVALID );
    sensitive << ( ap_predicate_op23_read_state1 );

    SC_METHOD(thread_ap_predicate_op23_read_state1);
    sensitive << ( currentState );
    sensitive << ( tmp_nbreadreq_fu_58_p4 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_currentState_load_load_fu_76_p1);
    sensitive << ( currentState );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_i_data_TDATA_blk_n);
    sensitive << ( i_data_TVALID );
    sensitive << ( currentState );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( tmp_nbreadreq_fu_58_p4 );

    SC_METHOD(thread_i_data_TREADY);
    sensitive << ( i_data_TVALID );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_predicate_op23_read_state1 );

    SC_METHOD(thread_o_data_TREADY);
    sensitive << ( o_data_V_last_V_0_state );

    SC_METHOD(thread_o_data_V_last_V_0_ack_out);

    SC_METHOD(thread_o_data_V_last_V_0_vld_in);
    sensitive << ( o_data_TVALID );

    SC_METHOD(thread_start_V_read_read_fu_52_p2);
    sensitive << ( i_data_TVALID );
    sensitive << ( start_V );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_predicate_op23_read_state1 );

    SC_METHOD(thread_tmp_nbreadreq_fu_58_p4);
    sensitive << ( i_data_TVALID );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( i_data_TVALID );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_predicate_op23_read_state1 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    o_data_V_last_V_0_state = "00";
    currentState = "0";
    ap_CS_fsm = "1";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "correlator_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, i_data_TDATA, "(port)i_data_TDATA");
    sc_trace(mVcdFile, i_data_TVALID, "(port)i_data_TVALID");
    sc_trace(mVcdFile, i_data_TREADY, "(port)i_data_TREADY");
    sc_trace(mVcdFile, i_data_TLAST, "(port)i_data_TLAST");
    sc_trace(mVcdFile, o_data_TDATA, "(port)o_data_TDATA");
    sc_trace(mVcdFile, o_data_TVALID, "(port)o_data_TVALID");
    sc_trace(mVcdFile, o_data_TREADY, "(port)o_data_TREADY");
    sc_trace(mVcdFile, o_data_TLAST, "(port)o_data_TLAST");
    sc_trace(mVcdFile, start_V, "(port)start_V");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, o_data_V_last_V_0_vld_in, "o_data_V_last_V_0_vld_in");
    sc_trace(mVcdFile, o_data_V_last_V_0_ack_out, "o_data_V_last_V_0_ack_out");
    sc_trace(mVcdFile, o_data_V_last_V_0_state, "o_data_V_last_V_0_state");
    sc_trace(mVcdFile, currentState, "currentState");
    sc_trace(mVcdFile, i_data_TDATA_blk_n, "i_data_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, currentState_load_load_fu_76_p1, "currentState_load_load_fu_76_p1");
    sc_trace(mVcdFile, tmp_nbreadreq_fu_58_p4, "tmp_nbreadreq_fu_58_p4");
    sc_trace(mVcdFile, ap_predicate_op23_read_state1, "ap_predicate_op23_read_state1");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, start_V_read_read_fu_52_p2, "start_V_read_read_fu_52_p2");
    sc_trace(mVcdFile, empty_3_fu_86_p258, "empty_3_fu_86_p258");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("correlator.hdltvin.dat");
    mHdltvoutHandle.open("correlator.hdltvout.dat");
}

correlator::~correlator() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete correlator_mux_25bkb_U1;
}

void correlator::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_lv32_0;
}

void correlator::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv8_0;
}

void correlator::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        currentState = ap_const_lv1_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, i_data_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op23_read_state1.read())) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, currentState_load_load_fu_76_p1.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, start_V_read_read_fu_52_p2.read()))) {
            currentState = ap_const_lv1_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        o_data_V_last_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, o_data_V_last_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, o_data_V_last_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, o_data_V_last_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, o_data_V_last_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, o_data_V_last_V_0_state.read())))) {
            o_data_V_last_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, o_data_V_last_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, o_data_V_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, o_data_V_last_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, o_data_V_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, o_data_V_last_V_0_state.read())))) {
            o_data_V_last_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, o_data_V_last_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, o_data_V_last_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, o_data_V_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, o_data_V_last_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, o_data_V_last_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, o_data_V_last_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, o_data_V_last_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, o_data_V_last_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, o_data_V_last_V_0_ack_out.read()))))) {
            o_data_V_last_V_0_state = ap_const_lv2_3;
        } else {
            o_data_V_last_V_0_state = ap_const_lv2_2;
        }
    }
}

void correlator::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void correlator::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, i_data_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op23_read_state1.read()));
}

void correlator::thread_ap_predicate_op23_read_state1() {
    ap_predicate_op23_read_state1 = (esl_seteq<1,1,1>(ap_const_lv1_1, currentState.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_nbreadreq_fu_58_p4.read()));
}

void correlator::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void correlator::thread_currentState_load_load_fu_76_p1() {
    currentState_load_load_fu_76_p1 = currentState.read();
}

void correlator::thread_i_data_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, currentState.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_nbreadreq_fu_58_p4.read()))) {
        i_data_TDATA_blk_n = i_data_TVALID.read();
    } else {
        i_data_TDATA_blk_n = ap_const_logic_1;
    }
}

void correlator::thread_i_data_TREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op23_read_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, i_data_TVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op23_read_state1.read())))) {
        i_data_TREADY = ap_const_logic_1;
    } else {
        i_data_TREADY = ap_const_logic_0;
    }
}

void correlator::thread_o_data_TREADY() {
    o_data_TREADY = o_data_V_last_V_0_state.read()[1];
}

void correlator::thread_o_data_V_last_V_0_ack_out() {
    o_data_V_last_V_0_ack_out = ap_const_logic_0;
}

void correlator::thread_o_data_V_last_V_0_vld_in() {
    o_data_V_last_V_0_vld_in = o_data_TVALID.read();
}

void correlator::thread_start_V_read_read_fu_52_p2() {
    start_V_read_read_fu_52_p2 = start_V.read();
}

void correlator::thread_tmp_nbreadreq_fu_58_p4() {
    tmp_nbreadreq_fu_58_p4 =  (sc_lv<1>) ((i_data_TVALID.read()));
}

void correlator::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_state1;
break;
        default : 
            ap_NS_fsm = "X";
            break;
    }
}

void correlator::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"i_data_TDATA\" :  \"" << i_data_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"i_data_TVALID\" :  \"" << i_data_TVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"i_data_TREADY\" :  \"" << i_data_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"i_data_TLAST\" :  \"" << i_data_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"o_data_TDATA\" :  \"" << o_data_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"o_data_TVALID\" :  \"" << o_data_TVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"o_data_TREADY\" :  \"" << o_data_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"o_data_TLAST\" :  \"" << o_data_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"start_V\" :  \"" << start_V.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

