// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _correlator_HH_
#define _correlator_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct correlator : public sc_module {
    // Port declarations 12
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_lv<32> > i_data_TDATA;
    sc_in< sc_logic > i_data_TVALID;
    sc_out< sc_logic > i_data_TREADY;
    sc_in< sc_lv<1> > i_data_TLAST;
    sc_out< sc_lv<32> > o_data_TDATA;
    sc_out< sc_logic > o_data_TVALID;
    sc_in< sc_logic > o_data_TREADY;
    sc_out< sc_lv<1> > o_data_TLAST;
    sc_in< sc_lv<4> > phaseClass_V;
    sc_in< sc_lv<1> > start_V;


    // Module declarations
    correlator(sc_module_name name);
    SC_HAS_PROCESS(correlator);

    ~correlator();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_lv<32> > o_data_V_data_V_1_data_out;
    sc_signal< sc_logic > o_data_V_data_V_1_vld_in;
    sc_signal< sc_logic > o_data_V_data_V_1_vld_out;
    sc_signal< sc_logic > o_data_V_data_V_1_ack_in;
    sc_signal< sc_logic > o_data_V_data_V_1_ack_out;
    sc_signal< sc_lv<32> > o_data_V_data_V_1_payload_A;
    sc_signal< sc_lv<32> > o_data_V_data_V_1_payload_B;
    sc_signal< sc_logic > o_data_V_data_V_1_sel_rd;
    sc_signal< sc_logic > o_data_V_data_V_1_sel_wr;
    sc_signal< sc_logic > o_data_V_data_V_1_sel;
    sc_signal< sc_logic > o_data_V_data_V_1_load_A;
    sc_signal< sc_logic > o_data_V_data_V_1_load_B;
    sc_signal< sc_lv<2> > o_data_V_data_V_1_state;
    sc_signal< sc_logic > o_data_V_data_V_1_state_cmp_full;
    sc_signal< sc_lv<1> > o_data_V_last_V_1_data_out;
    sc_signal< sc_logic > o_data_V_last_V_1_vld_in;
    sc_signal< sc_logic > o_data_V_last_V_1_vld_out;
    sc_signal< sc_logic > o_data_V_last_V_1_ack_in;
    sc_signal< sc_logic > o_data_V_last_V_1_ack_out;
    sc_signal< sc_logic > o_data_V_last_V_1_sel_rd;
    sc_signal< sc_logic > o_data_V_last_V_1_sel;
    sc_signal< sc_lv<2> > o_data_V_last_V_1_state;
    sc_signal< sc_lv<1> > corState;
    sc_signal< sc_lv<16> > phaseClass0_V_3;
    sc_signal< sc_lv<16> > phaseClass0_V_2;
    sc_signal< sc_lv<16> > phaseClass0_V_1;
    sc_signal< sc_lv<16> > phaseClass0_V_0;
    sc_signal< sc_lv<32> > loadCount_V;
    sc_signal< sc_lv<32> > corHelper_V;
    sc_signal< sc_lv<1> > currentState;
    sc_signal< sc_logic > i_data_TDATA_blk_n;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > currentState_load_load_fu_299_p1;
    sc_signal< sc_lv<1> > tmp_nbreadreq_fu_130_p4;
    sc_signal< sc_logic > o_data_TDATA_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<1> > corState_load_reg_476;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter1_corState_load_reg_476;
    sc_signal< sc_lv<1> > cond_reg_485;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter1_cond_reg_485;
    sc_signal< sc_lv<1> > tmp_4_reg_502;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter2_corState_load_reg_476;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter2_cond_reg_485;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter2_tmp_4_reg_502;
    sc_signal< bool > ap_predicate_op33_read_state1;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter2;
    sc_signal< bool > ap_predicate_op70_write_state3;
    sc_signal< bool > ap_block_state3_io;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter3;
    sc_signal< bool > ap_predicate_op93_write_state4;
    sc_signal< bool > ap_block_state4_io;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > start_V_read_read_fu_118_p2;
    sc_signal< sc_lv<4> > phaseClass_V_read_read_fu_124_p2;
    sc_signal< sc_lv<1> > corState_load_load_fu_221_p1;
    sc_signal< sc_lv<16> > phaseClass0_V_2_load_reg_480;
    sc_signal< sc_lv<1> > cond_fu_241_p2;
    sc_signal< sc_lv<23> > tmp4_fu_293_p2;
    sc_signal< sc_lv<23> > tmp4_reg_489;
    sc_signal< sc_lv<1> > currentState_load_reg_494;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter1_currentState_load_reg_494;
    sc_signal< sc_lv<1> > tmp_reg_498;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter1_tmp_reg_498;
    sc_signal< sc_lv<1> > tmp_4_fu_445_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_lv<1> > ap_phi_mux_corState_flag_phi_fu_162_p4;
    sc_signal< sc_lv<1> > ap_phi_reg_pp0_iter0_corState_flag_reg_159;
    sc_signal< sc_lv<1> > ap_phi_mux_corState_flag_1_phi_fu_173_p4;
    sc_signal< sc_lv<1> > ap_phi_reg_pp0_iter0_corState_flag_1_reg_170;
    sc_signal< sc_lv<1> > ap_phi_mux_corState_new_1_phi_fu_184_p4;
    sc_signal< sc_lv<1> > ap_phi_reg_pp0_iter0_corState_new_1_reg_181;
    sc_signal< sc_lv<1> > ap_phi_mux_corState_flag_2_phi_fu_195_p4;
    sc_signal< sc_lv<1> > ap_phi_reg_pp0_iter0_corState_flag_2_reg_192;
    sc_signal< sc_lv<1> > ap_phi_mux_corState_new_2_phi_fu_207_p4;
    sc_signal< sc_lv<1> > ap_phi_reg_pp0_iter0_corState_new_2_reg_204;
    sc_signal< sc_lv<16> > tmp_s_fu_317_p3;
    sc_signal< sc_lv<32> > tmp_1_fu_456_p2;
    sc_signal< sc_lv<32> > p_Val2_2_7_fu_433_p2;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<21> > tmp_7_4_fu_247_p3;
    sc_signal< sc_lv<21> > tmp_7_6_fu_259_p3;
    sc_signal< sc_lv<21> > tmp_7_7_fu_271_p3;
    sc_signal< sc_lv<22> > tmp_7_7_cast_fu_279_p1;
    sc_signal< sc_lv<22> > tmp_7_4_cast_fu_255_p1;
    sc_signal< sc_lv<22> > tmp5_fu_283_p2;
    sc_signal< sc_lv<23> > tmp_7_6_cast_fu_267_p1;
    sc_signal< sc_lv<23> > tmp5_cast_fu_289_p1;
    sc_signal< sc_lv<11> > tmp_2_fu_307_p4;
    sc_signal< sc_lv<21> > tmp_7_5_fu_413_p3;
    sc_signal< sc_lv<32> > tmp_7_5_cast_fu_420_p1;
    sc_signal< sc_lv<32> > tmp3_fu_424_p2;
    sc_signal< sc_lv<32> > tmp4_cast_fu_430_p1;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    sc_signal< sc_logic > ap_reset_idle_pp0;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< bool > ap_condition_304;
    sc_signal< bool > ap_condition_162;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_pp0_stage0;
    static const bool ap_const_boolean_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_1A;
    static const sc_lv<32> ap_const_lv32_1000;
    static const sc_lv<32> ap_const_lv32_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state2_pp0_stage0_iter1();
    void thread_ap_block_state3_io();
    void thread_ap_block_state3_pp0_stage0_iter2();
    void thread_ap_block_state4_io();
    void thread_ap_block_state4_pp0_stage0_iter3();
    void thread_ap_condition_162();
    void thread_ap_condition_304();
    void thread_ap_enable_pp0();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_corState_flag_1_phi_fu_173_p4();
    void thread_ap_phi_mux_corState_flag_2_phi_fu_195_p4();
    void thread_ap_phi_mux_corState_flag_phi_fu_162_p4();
    void thread_ap_phi_mux_corState_new_1_phi_fu_184_p4();
    void thread_ap_phi_mux_corState_new_2_phi_fu_207_p4();
    void thread_ap_phi_reg_pp0_iter0_corState_flag_1_reg_170();
    void thread_ap_phi_reg_pp0_iter0_corState_flag_2_reg_192();
    void thread_ap_phi_reg_pp0_iter0_corState_flag_reg_159();
    void thread_ap_phi_reg_pp0_iter0_corState_new_1_reg_181();
    void thread_ap_phi_reg_pp0_iter0_corState_new_2_reg_204();
    void thread_ap_predicate_op33_read_state1();
    void thread_ap_predicate_op70_write_state3();
    void thread_ap_predicate_op93_write_state4();
    void thread_ap_reset_idle_pp0();
    void thread_ap_rst_n_inv();
    void thread_cond_fu_241_p2();
    void thread_corState_load_load_fu_221_p1();
    void thread_currentState_load_load_fu_299_p1();
    void thread_i_data_TDATA_blk_n();
    void thread_i_data_TREADY();
    void thread_o_data_TDATA();
    void thread_o_data_TDATA_blk_n();
    void thread_o_data_TLAST();
    void thread_o_data_TVALID();
    void thread_o_data_V_data_V_1_ack_in();
    void thread_o_data_V_data_V_1_ack_out();
    void thread_o_data_V_data_V_1_data_out();
    void thread_o_data_V_data_V_1_load_A();
    void thread_o_data_V_data_V_1_load_B();
    void thread_o_data_V_data_V_1_sel();
    void thread_o_data_V_data_V_1_state_cmp_full();
    void thread_o_data_V_data_V_1_vld_in();
    void thread_o_data_V_data_V_1_vld_out();
    void thread_o_data_V_last_V_1_ack_in();
    void thread_o_data_V_last_V_1_ack_out();
    void thread_o_data_V_last_V_1_data_out();
    void thread_o_data_V_last_V_1_sel();
    void thread_o_data_V_last_V_1_vld_in();
    void thread_o_data_V_last_V_1_vld_out();
    void thread_p_Val2_2_7_fu_433_p2();
    void thread_phaseClass_V_read_read_fu_124_p2();
    void thread_start_V_read_read_fu_118_p2();
    void thread_tmp3_fu_424_p2();
    void thread_tmp4_cast_fu_430_p1();
    void thread_tmp4_fu_293_p2();
    void thread_tmp5_cast_fu_289_p1();
    void thread_tmp5_fu_283_p2();
    void thread_tmp_1_fu_456_p2();
    void thread_tmp_2_fu_307_p4();
    void thread_tmp_4_fu_445_p2();
    void thread_tmp_7_4_cast_fu_255_p1();
    void thread_tmp_7_4_fu_247_p3();
    void thread_tmp_7_5_cast_fu_420_p1();
    void thread_tmp_7_5_fu_413_p3();
    void thread_tmp_7_6_cast_fu_267_p1();
    void thread_tmp_7_6_fu_259_p3();
    void thread_tmp_7_7_cast_fu_279_p1();
    void thread_tmp_7_7_fu_271_p3();
    void thread_tmp_nbreadreq_fu_130_p4();
    void thread_tmp_s_fu_317_p3();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
