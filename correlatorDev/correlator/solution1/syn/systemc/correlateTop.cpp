// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "correlateTop.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic correlateTop::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic correlateTop::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<2> correlateTop::ap_ST_fsm_pp0_stage0 = "1";
const sc_lv<2> correlateTop::ap_ST_fsm_pp0_stage1 = "10";
const bool correlateTop::ap_const_boolean_1 = true;
const sc_lv<1> correlateTop::ap_const_lv1_0 = "0";
const sc_lv<1> correlateTop::ap_const_lv1_1 = "1";
const sc_lv<2> correlateTop::ap_const_lv2_0 = "00";
const sc_lv<2> correlateTop::ap_const_lv2_2 = "10";
const sc_lv<2> correlateTop::ap_const_lv2_3 = "11";
const sc_lv<2> correlateTop::ap_const_lv2_1 = "1";
const sc_lv<32> correlateTop::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool correlateTop::ap_const_boolean_0 = false;
const sc_lv<32> correlateTop::ap_const_lv32_1 = "1";
const sc_lv<32> correlateTop::ap_const_lv32_5 = "101";
const sc_lv<32> correlateTop::ap_const_lv32_14 = "10100";
const sc_lv<32> correlateTop::ap_const_lv32_20 = "100000";
const sc_lv<16> correlateTop::ap_const_lv16_1F40 = "1111101000000";

correlateTop::correlateTop(sc_module_name name) : sc_module(name), mVcdFile(0) {
    cor_phaseArray_phase_8_U = new correlateTop_cor_bkb("cor_phaseArray_phase_8_U");
    cor_phaseArray_phase_8_U->clk(ap_clk);
    cor_phaseArray_phase_8_U->reset(ap_rst_n_inv);
    cor_phaseArray_phase_8_U->address0(cor_phaseArray_phase_8_address0);
    cor_phaseArray_phase_8_U->ce0(cor_phaseArray_phase_8_ce0);
    cor_phaseArray_phase_8_U->we0(cor_phaseArray_phase_8_we0);
    cor_phaseArray_phase_8_U->d0(cor_phaseArray_phase_9_q0);
    cor_phaseArray_phase_8_U->q0(cor_phaseArray_phase_8_q0);
    cor_phaseArray_phase_9_U = new correlateTop_cor_bkb("cor_phaseArray_phase_9_U");
    cor_phaseArray_phase_9_U->clk(ap_clk);
    cor_phaseArray_phase_9_U->reset(ap_rst_n_inv);
    cor_phaseArray_phase_9_U->address0(cor_phaseArray_phase_9_address0);
    cor_phaseArray_phase_9_U->ce0(cor_phaseArray_phase_9_ce0);
    cor_phaseArray_phase_9_U->we0(cor_phaseArray_phase_9_we0);
    cor_phaseArray_phase_9_U->d0(cor_phaseArray_phase_10_q0);
    cor_phaseArray_phase_9_U->q0(cor_phaseArray_phase_9_q0);
    cor_phaseArray_phase_10_U = new correlateTop_cor_bkb("cor_phaseArray_phase_10_U");
    cor_phaseArray_phase_10_U->clk(ap_clk);
    cor_phaseArray_phase_10_U->reset(ap_rst_n_inv);
    cor_phaseArray_phase_10_U->address0(cor_phaseArray_phase_10_address0);
    cor_phaseArray_phase_10_U->ce0(cor_phaseArray_phase_10_ce0);
    cor_phaseArray_phase_10_U->we0(cor_phaseArray_phase_10_we0);
    cor_phaseArray_phase_10_U->d0(cor_phaseArray_phase_11_q0);
    cor_phaseArray_phase_10_U->q0(cor_phaseArray_phase_10_q0);
    cor_phaseArray_phase_11_U = new correlateTop_cor_bkb("cor_phaseArray_phase_11_U");
    cor_phaseArray_phase_11_U->clk(ap_clk);
    cor_phaseArray_phase_11_U->reset(ap_rst_n_inv);
    cor_phaseArray_phase_11_U->address0(cor_phaseArray_phase_11_address0);
    cor_phaseArray_phase_11_U->ce0(cor_phaseArray_phase_11_ce0);
    cor_phaseArray_phase_11_U->we0(cor_phaseArray_phase_11_we0);
    cor_phaseArray_phase_11_U->d0(cor_phaseArray_phase_12_q0);
    cor_phaseArray_phase_11_U->q0(cor_phaseArray_phase_11_q0);
    cor_phaseArray_phase_12_U = new correlateTop_cor_bkb("cor_phaseArray_phase_12_U");
    cor_phaseArray_phase_12_U->clk(ap_clk);
    cor_phaseArray_phase_12_U->reset(ap_rst_n_inv);
    cor_phaseArray_phase_12_U->address0(cor_phaseArray_phase_12_address0);
    cor_phaseArray_phase_12_U->ce0(cor_phaseArray_phase_12_ce0);
    cor_phaseArray_phase_12_U->we0(cor_phaseArray_phase_12_we0);
    cor_phaseArray_phase_12_U->d0(cor_phaseArray_phase_q0);
    cor_phaseArray_phase_12_U->q0(cor_phaseArray_phase_12_q0);
    cor_phaseArray_phase_U = new correlateTop_cor_bkb("cor_phaseArray_phase_U");
    cor_phaseArray_phase_U->clk(ap_clk);
    cor_phaseArray_phase_U->reset(ap_rst_n_inv);
    cor_phaseArray_phase_U->address0(cor_phaseArray_phase_address0);
    cor_phaseArray_phase_U->ce0(cor_phaseArray_phase_ce0);
    cor_phaseArray_phase_U->we0(cor_phaseArray_phase_we0);
    cor_phaseArray_phase_U->d0(cor_phaseArray_phase_1_q0);
    cor_phaseArray_phase_U->q0(cor_phaseArray_phase_q0);
    cor_phaseArray_phase_1_U = new correlateTop_cor_bkb("cor_phaseArray_phase_1_U");
    cor_phaseArray_phase_1_U->clk(ap_clk);
    cor_phaseArray_phase_1_U->reset(ap_rst_n_inv);
    cor_phaseArray_phase_1_U->address0(cor_phaseArray_phase_1_address0);
    cor_phaseArray_phase_1_U->ce0(cor_phaseArray_phase_1_ce0);
    cor_phaseArray_phase_1_U->we0(cor_phaseArray_phase_1_we0);
    cor_phaseArray_phase_1_U->d0(cor_phaseArray_phase_2_q0);
    cor_phaseArray_phase_1_U->q0(cor_phaseArray_phase_1_q0);
    cor_phaseArray_phase_2_U = new correlateTop_cor_bkb("cor_phaseArray_phase_2_U");
    cor_phaseArray_phase_2_U->clk(ap_clk);
    cor_phaseArray_phase_2_U->reset(ap_rst_n_inv);
    cor_phaseArray_phase_2_U->address0(cor_phaseArray_phase_2_address0);
    cor_phaseArray_phase_2_U->ce0(cor_phaseArray_phase_2_ce0);
    cor_phaseArray_phase_2_U->we0(cor_phaseArray_phase_2_we0);
    cor_phaseArray_phase_2_U->d0(cor_phaseArray_phase_3_q0);
    cor_phaseArray_phase_2_U->q0(cor_phaseArray_phase_2_q0);
    cor_phaseArray_phase_3_U = new correlateTop_cor_bkb("cor_phaseArray_phase_3_U");
    cor_phaseArray_phase_3_U->clk(ap_clk);
    cor_phaseArray_phase_3_U->reset(ap_rst_n_inv);
    cor_phaseArray_phase_3_U->address0(cor_phaseArray_phase_3_address0);
    cor_phaseArray_phase_3_U->ce0(cor_phaseArray_phase_3_ce0);
    cor_phaseArray_phase_3_U->we0(cor_phaseArray_phase_3_we0);
    cor_phaseArray_phase_3_U->d0(cor_phaseArray_phase_4_q0);
    cor_phaseArray_phase_3_U->q0(cor_phaseArray_phase_3_q0);
    cor_phaseArray_phase_4_U = new correlateTop_cor_bkb("cor_phaseArray_phase_4_U");
    cor_phaseArray_phase_4_U->clk(ap_clk);
    cor_phaseArray_phase_4_U->reset(ap_rst_n_inv);
    cor_phaseArray_phase_4_U->address0(cor_phaseArray_phase_4_address0);
    cor_phaseArray_phase_4_U->ce0(cor_phaseArray_phase_4_ce0);
    cor_phaseArray_phase_4_U->we0(cor_phaseArray_phase_4_we0);
    cor_phaseArray_phase_4_U->d0(cor_phaseArray_phase_5_q0);
    cor_phaseArray_phase_4_U->q0(cor_phaseArray_phase_4_q0);
    cor_phaseArray_phase_5_U = new correlateTop_cor_bkb("cor_phaseArray_phase_5_U");
    cor_phaseArray_phase_5_U->clk(ap_clk);
    cor_phaseArray_phase_5_U->reset(ap_rst_n_inv);
    cor_phaseArray_phase_5_U->address0(cor_phaseArray_phase_5_address0);
    cor_phaseArray_phase_5_U->ce0(cor_phaseArray_phase_5_ce0);
    cor_phaseArray_phase_5_U->we0(cor_phaseArray_phase_5_we0);
    cor_phaseArray_phase_5_U->d0(cor_phaseArray_phase_6_q0);
    cor_phaseArray_phase_5_U->q0(cor_phaseArray_phase_5_q0);
    cor_phaseArray_phase_6_U = new correlateTop_cor_bkb("cor_phaseArray_phase_6_U");
    cor_phaseArray_phase_6_U->clk(ap_clk);
    cor_phaseArray_phase_6_U->reset(ap_rst_n_inv);
    cor_phaseArray_phase_6_U->address0(cor_phaseArray_phase_6_address0);
    cor_phaseArray_phase_6_U->ce0(cor_phaseArray_phase_6_ce0);
    cor_phaseArray_phase_6_U->we0(cor_phaseArray_phase_6_we0);
    cor_phaseArray_phase_6_U->d0(cor_phaseArray_phase_7_q0);
    cor_phaseArray_phase_6_U->q0(cor_phaseArray_phase_6_q0);
    cor_phaseArray_phase_7_U = new correlateTop_cor_bkb("cor_phaseArray_phase_7_U");
    cor_phaseArray_phase_7_U->clk(ap_clk);
    cor_phaseArray_phase_7_U->reset(ap_rst_n_inv);
    cor_phaseArray_phase_7_U->address0(cor_phaseArray_phase_7_address0);
    cor_phaseArray_phase_7_U->ce0(cor_phaseArray_phase_7_ce0);
    cor_phaseArray_phase_7_U->we0(cor_phaseArray_phase_7_we0);
    cor_phaseArray_phase_7_U->d0(cor_phaseArray_phase_13_q0);
    cor_phaseArray_phase_7_U->q0(cor_phaseArray_phase_7_q0);
    cor_phaseArray_phase_13_U = new correlateTop_cor_bkb("cor_phaseArray_phase_13_U");
    cor_phaseArray_phase_13_U->clk(ap_clk);
    cor_phaseArray_phase_13_U->reset(ap_rst_n_inv);
    cor_phaseArray_phase_13_U->address0(cor_phaseArray_phase_13_address0);
    cor_phaseArray_phase_13_U->ce0(cor_phaseArray_phase_13_ce0);
    cor_phaseArray_phase_13_U->we0(cor_phaseArray_phase_13_we0);
    cor_phaseArray_phase_13_U->d0(cor_phaseArray_phase_14_q0);
    cor_phaseArray_phase_13_U->q0(cor_phaseArray_phase_13_q0);
    cor_phaseArray_phase_14_U = new correlateTop_cor_bkb("cor_phaseArray_phase_14_U");
    cor_phaseArray_phase_14_U->clk(ap_clk);
    cor_phaseArray_phase_14_U->reset(ap_rst_n_inv);
    cor_phaseArray_phase_14_U->address0(cor_phaseArray_phase_14_address0);
    cor_phaseArray_phase_14_U->ce0(cor_phaseArray_phase_14_ce0);
    cor_phaseArray_phase_14_U->we0(cor_phaseArray_phase_14_we0);
    cor_phaseArray_phase_14_U->d0(tmp_1_fu_377_p1);
    cor_phaseArray_phase_14_U->q0(cor_phaseArray_phase_14_q0);
    cor_phaseArray_loadC_U = new correlateTop_cor_qcK("cor_phaseArray_loadC_U");
    cor_phaseArray_loadC_U->clk(ap_clk);
    cor_phaseArray_loadC_U->reset(ap_rst_n_inv);
    cor_phaseArray_loadC_U->address0(cor_phaseArray_loadC_address0);
    cor_phaseArray_loadC_U->ce0(cor_phaseArray_loadC_ce0);
    cor_phaseArray_loadC_U->we0(cor_phaseArray_loadC_we0);
    cor_phaseArray_loadC_U->d0(tmp_8_i_fu_505_p2);
    cor_phaseArray_loadC_U->q0(cor_phaseArray_loadC_q0);
    correlateTop_mul_rcU_U1 = new correlateTop_mul_rcU<1,1,16,16,21>("correlateTop_mul_rcU_U1");
    correlateTop_mul_rcU_U1->din0(p_Val2_1_fu_526_p0);
    correlateTop_mul_rcU_U1->din1(p_Val2_1_fu_526_p1);
    correlateTop_mul_rcU_U1->dout(p_Val2_1_fu_526_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_OP1_V_cast_fu_492_p1);
    sensitive << ( tmp_i_4_fu_484_p3 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( i_data_data_V_0_vld_out );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( currentState_load_reg_533 );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( i_data_data_V_0_vld_out );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( currentState_load_reg_533 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_state5_io );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( i_data_data_V_0_vld_out );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( currentState_load_reg_533 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_state5_io );

    SC_METHOD(thread_ap_block_pp0_stage1);

    SC_METHOD(thread_ap_block_pp0_stage1_01001);
    sensitive << ( o_data_data_V_1_ack_in );
    sensitive << ( o_data_last_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_block_pp0_stage1_11001);
    sensitive << ( o_data_data_V_1_ack_in );
    sensitive << ( o_data_last_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_state6_io );

    SC_METHOD(thread_ap_block_pp0_stage1_subdone);
    sensitive << ( o_data_data_V_1_ack_in );
    sensitive << ( o_data_last_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_state6_io );

    SC_METHOD(thread_ap_block_state1_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state2_pp0_stage1_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);
    sensitive << ( i_data_data_V_0_vld_out );
    sensitive << ( currentState_load_reg_533 );

    SC_METHOD(thread_ap_block_state4_pp0_stage1_iter1);

    SC_METHOD(thread_ap_block_state5_io);
    sensitive << ( o_data_data_V_1_ack_in );
    sensitive << ( ap_reg_pp0_iter1_currentState_load_reg_533 );

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state6_io);
    sensitive << ( o_data_data_V_1_ack_in );
    sensitive << ( ap_reg_pp0_iter2_currentState_load_reg_533 );

    SC_METHOD(thread_ap_block_state6_pp0_stage1_iter2);
    sensitive << ( o_data_data_V_1_ack_in );
    sensitive << ( o_data_last_V_1_ack_in );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_reset_idle_pp0);

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_cor_phaseArray_loadC_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( cor_phaseArray_loadC_reg_616 );
    sensitive << ( ap_reg_pp0_iter1_cor_phaseArray_loadC_reg_616 );

    SC_METHOD(thread_cor_phaseArray_loadC_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_cor_phaseArray_loadC_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_reg_pp0_iter1_currentState_load_reg_533 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_cor_phaseArray_phase_10_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( cor_phaseArray_phase_4_reg_551 );
    sensitive << ( tmp_i_fu_349_p1 );

    SC_METHOD(thread_cor_phaseArray_phase_10_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_cor_phaseArray_phase_10_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( currentState_load_reg_533 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_cor_phaseArray_phase_11_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( cor_phaseArray_phase_6_reg_556 );
    sensitive << ( tmp_i_fu_349_p1 );

    SC_METHOD(thread_cor_phaseArray_phase_11_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_cor_phaseArray_phase_11_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( currentState_load_reg_533 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_cor_phaseArray_phase_12_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( cor_phaseArray_phase_8_reg_561 );
    sensitive << ( tmp_i_fu_349_p1 );

    SC_METHOD(thread_cor_phaseArray_phase_12_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_cor_phaseArray_phase_12_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( currentState_load_reg_533 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_cor_phaseArray_phase_13_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( cor_phaseArray_phase_26_reg_606 );
    sensitive << ( tmp_i_fu_349_p1 );

    SC_METHOD(thread_cor_phaseArray_phase_13_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_cor_phaseArray_phase_13_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( currentState_load_reg_533 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_cor_phaseArray_phase_14_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( cor_phaseArray_phase_28_reg_611 );
    sensitive << ( tmp_i_fu_349_p1 );

    SC_METHOD(thread_cor_phaseArray_phase_14_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_cor_phaseArray_phase_14_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( currentState_load_reg_533 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_cor_phaseArray_phase_1_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( cor_phaseArray_phase_12_reg_571 );
    sensitive << ( tmp_i_fu_349_p1 );

    SC_METHOD(thread_cor_phaseArray_phase_1_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_cor_phaseArray_phase_1_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( currentState_load_reg_533 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_cor_phaseArray_phase_2_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( cor_phaseArray_phase_14_reg_576 );
    sensitive << ( tmp_i_fu_349_p1 );

    SC_METHOD(thread_cor_phaseArray_phase_2_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_cor_phaseArray_phase_2_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( currentState_load_reg_533 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_cor_phaseArray_phase_3_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( cor_phaseArray_phase_16_reg_581 );
    sensitive << ( tmp_i_fu_349_p1 );

    SC_METHOD(thread_cor_phaseArray_phase_3_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_cor_phaseArray_phase_3_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( currentState_load_reg_533 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_cor_phaseArray_phase_4_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( cor_phaseArray_phase_18_reg_586 );
    sensitive << ( tmp_i_fu_349_p1 );

    SC_METHOD(thread_cor_phaseArray_phase_4_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_cor_phaseArray_phase_4_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( currentState_load_reg_533 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_cor_phaseArray_phase_5_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( cor_phaseArray_phase_20_reg_591 );
    sensitive << ( tmp_i_fu_349_p1 );

    SC_METHOD(thread_cor_phaseArray_phase_5_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_cor_phaseArray_phase_5_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( currentState_load_reg_533 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_cor_phaseArray_phase_6_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( cor_phaseArray_phase_22_reg_596 );
    sensitive << ( tmp_i_fu_349_p1 );

    SC_METHOD(thread_cor_phaseArray_phase_6_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_cor_phaseArray_phase_6_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( currentState_load_reg_533 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_cor_phaseArray_phase_7_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( cor_phaseArray_phase_24_reg_601 );
    sensitive << ( tmp_i_fu_349_p1 );

    SC_METHOD(thread_cor_phaseArray_phase_7_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_cor_phaseArray_phase_7_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( currentState_load_reg_533 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_cor_phaseArray_phase_8_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( cor_phaseArray_phase_reg_541 );
    sensitive << ( tmp_i_fu_349_p1 );

    SC_METHOD(thread_cor_phaseArray_phase_8_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_cor_phaseArray_phase_8_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( currentState_load_reg_533 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_cor_phaseArray_phase_9_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( cor_phaseArray_phase_2_reg_546 );
    sensitive << ( tmp_i_fu_349_p1 );

    SC_METHOD(thread_cor_phaseArray_phase_9_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_cor_phaseArray_phase_9_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( currentState_load_reg_533 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_cor_phaseArray_phase_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( cor_phaseArray_phase_10_reg_566 );
    sensitive << ( tmp_i_fu_349_p1 );

    SC_METHOD(thread_cor_phaseArray_phase_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_cor_phaseArray_phase_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( currentState_load_reg_533 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_i_data_TDATA_blk_n);
    sensitive << ( i_data_data_V_0_state );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( currentState_load_reg_533 );

    SC_METHOD(thread_i_data_TREADY);
    sensitive << ( i_data_last_V_0_state );

    SC_METHOD(thread_i_data_data_V_0_ack_in);
    sensitive << ( i_data_data_V_0_state );

    SC_METHOD(thread_i_data_data_V_0_ack_out);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( currentState_load_reg_533 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_i_data_data_V_0_data_out);
    sensitive << ( i_data_data_V_0_payload_A );
    sensitive << ( i_data_data_V_0_payload_B );
    sensitive << ( i_data_data_V_0_sel );

    SC_METHOD(thread_i_data_data_V_0_load_A);
    sensitive << ( i_data_data_V_0_sel_wr );
    sensitive << ( i_data_data_V_0_state_cmp_full );

    SC_METHOD(thread_i_data_data_V_0_load_B);
    sensitive << ( i_data_data_V_0_sel_wr );
    sensitive << ( i_data_data_V_0_state_cmp_full );

    SC_METHOD(thread_i_data_data_V_0_sel);
    sensitive << ( i_data_data_V_0_sel_rd );

    SC_METHOD(thread_i_data_data_V_0_state_cmp_full);
    sensitive << ( i_data_data_V_0_state );

    SC_METHOD(thread_i_data_data_V_0_vld_in);
    sensitive << ( i_data_TVALID );

    SC_METHOD(thread_i_data_data_V_0_vld_out);
    sensitive << ( i_data_data_V_0_state );

    SC_METHOD(thread_i_data_last_V_0_ack_in);
    sensitive << ( i_data_last_V_0_state );

    SC_METHOD(thread_i_data_last_V_0_ack_out);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( currentState_load_reg_533 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_i_data_last_V_0_data_out);
    sensitive << ( i_data_last_V_0_payload_A );
    sensitive << ( i_data_last_V_0_payload_B );
    sensitive << ( i_data_last_V_0_sel );

    SC_METHOD(thread_i_data_last_V_0_load_A);
    sensitive << ( i_data_last_V_0_sel_wr );
    sensitive << ( i_data_last_V_0_state_cmp_full );

    SC_METHOD(thread_i_data_last_V_0_load_B);
    sensitive << ( i_data_last_V_0_sel_wr );
    sensitive << ( i_data_last_V_0_state_cmp_full );

    SC_METHOD(thread_i_data_last_V_0_sel);
    sensitive << ( i_data_last_V_0_sel_rd );

    SC_METHOD(thread_i_data_last_V_0_state_cmp_full);
    sensitive << ( i_data_last_V_0_state );

    SC_METHOD(thread_i_data_last_V_0_vld_in);
    sensitive << ( i_data_TVALID );

    SC_METHOD(thread_i_data_last_V_0_vld_out);
    sensitive << ( i_data_last_V_0_state );

    SC_METHOD(thread_o_data_TDATA);
    sensitive << ( o_data_data_V_1_data_out );

    SC_METHOD(thread_o_data_TDATA_blk_n);
    sensitive << ( o_data_data_V_1_state );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_reg_pp0_iter1_currentState_load_reg_533 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_reg_pp0_iter2_currentState_load_reg_533 );

    SC_METHOD(thread_o_data_TLAST);
    sensitive << ( o_data_last_V_1_data_out );

    SC_METHOD(thread_o_data_TVALID);
    sensitive << ( o_data_last_V_1_state );

    SC_METHOD(thread_o_data_data_V_1_ack_in);
    sensitive << ( o_data_data_V_1_state );

    SC_METHOD(thread_o_data_data_V_1_ack_out);
    sensitive << ( o_data_TREADY );

    SC_METHOD(thread_o_data_data_V_1_data_out);
    sensitive << ( o_data_data_V_1_payload_A );
    sensitive << ( o_data_data_V_1_payload_B );
    sensitive << ( o_data_data_V_1_sel );

    SC_METHOD(thread_o_data_data_V_1_load_A);
    sensitive << ( o_data_data_V_1_sel_wr );
    sensitive << ( o_data_data_V_1_state_cmp_full );

    SC_METHOD(thread_o_data_data_V_1_load_B);
    sensitive << ( o_data_data_V_1_sel_wr );
    sensitive << ( o_data_data_V_1_state_cmp_full );

    SC_METHOD(thread_o_data_data_V_1_sel);
    sensitive << ( o_data_data_V_1_sel_rd );

    SC_METHOD(thread_o_data_data_V_1_state_cmp_full);
    sensitive << ( o_data_data_V_1_state );

    SC_METHOD(thread_o_data_data_V_1_vld_in);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_reg_pp0_iter1_currentState_load_reg_533 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_o_data_data_V_1_vld_out);
    sensitive << ( o_data_data_V_1_state );

    SC_METHOD(thread_o_data_data_V_tmp_fu_517_p3);
    sensitive << ( tmp_8_i_fu_505_p2 );
    sensitive << ( tmp_2_fu_512_p2 );

    SC_METHOD(thread_o_data_last_V_1_ack_in);
    sensitive << ( o_data_last_V_1_state );

    SC_METHOD(thread_o_data_last_V_1_ack_out);
    sensitive << ( o_data_TREADY );

    SC_METHOD(thread_o_data_last_V_1_data_out);
    sensitive << ( o_data_last_V_1_payload_A );
    sensitive << ( o_data_last_V_1_payload_B );
    sensitive << ( o_data_last_V_1_sel );

    SC_METHOD(thread_o_data_last_V_1_load_A);
    sensitive << ( o_data_last_V_1_sel_wr );
    sensitive << ( o_data_last_V_1_state_cmp_full );

    SC_METHOD(thread_o_data_last_V_1_load_B);
    sensitive << ( o_data_last_V_1_sel_wr );
    sensitive << ( o_data_last_V_1_state_cmp_full );

    SC_METHOD(thread_o_data_last_V_1_sel);
    sensitive << ( o_data_last_V_1_sel_rd );

    SC_METHOD(thread_o_data_last_V_1_state_cmp_full);
    sensitive << ( o_data_last_V_1_state );

    SC_METHOD(thread_o_data_last_V_1_vld_in);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_reg_pp0_iter1_currentState_load_reg_533 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_o_data_last_V_1_vld_out);
    sensitive << ( o_data_last_V_1_state );

    SC_METHOD(thread_p_Val2_1_fu_526_p0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( OP1_V_cast_fu_492_p1 );

    SC_METHOD(thread_p_Val2_1_fu_526_p1);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( OP1_V_cast_fu_492_p1 );

    SC_METHOD(thread_p_Val2_2_5_i_fu_466_p2);
    sensitive << ( tmp8_fu_442_p2 );
    sensitive << ( tmp11_fu_460_p2 );

    SC_METHOD(thread_p_Val2_5_2_i_fu_424_p2);
    sensitive << ( tmp2_fu_400_p2 );
    sensitive << ( tmp5_fu_418_p2 );

    SC_METHOD(thread_p_Val2_8_i_fu_480_p2);
    sensitive << ( p_Val2_5_2_i_reg_626 );
    sensitive << ( p_Val2_2_5_i_reg_633 );

    SC_METHOD(thread_p_Val2_9_i_fu_476_p2);
    sensitive << ( p_Val2_5_2_i_reg_626 );
    sensitive << ( p_Val2_2_5_i_reg_633 );

    SC_METHOD(thread_start_V_read_read_fu_104_p2);
    sensitive << ( start_V );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_tmp10_fu_454_p2);
    sensitive << ( cor_phaseArray_phase_8_q0 );
    sensitive << ( tmp_1_fu_377_p1 );

    SC_METHOD(thread_tmp11_fu_460_p2);
    sensitive << ( tmp9_fu_448_p2 );
    sensitive << ( tmp10_fu_454_p2 );

    SC_METHOD(thread_tmp1_fu_394_p2);
    sensitive << ( cor_phaseArray_phase_2_q0 );
    sensitive << ( cor_phaseArray_phase_4_q0 );

    SC_METHOD(thread_tmp2_fu_400_p2);
    sensitive << ( tmp_fu_388_p2 );
    sensitive << ( tmp1_fu_394_p2 );

    SC_METHOD(thread_tmp3_fu_406_p2);
    sensitive << ( cor_phaseArray_phase_q0 );
    sensitive << ( cor_phaseArray_phase_1_q0 );

    SC_METHOD(thread_tmp4_fu_412_p2);
    sensitive << ( cor_phaseArray_phase_12_q0 );
    sensitive << ( cor_phaseArray_phase_14_q0 );

    SC_METHOD(thread_tmp5_fu_418_p2);
    sensitive << ( tmp3_fu_406_p2 );
    sensitive << ( tmp4_fu_412_p2 );

    SC_METHOD(thread_tmp6_fu_430_p2);
    sensitive << ( cor_phaseArray_phase_5_q0 );
    sensitive << ( cor_phaseArray_phase_13_q0 );

    SC_METHOD(thread_tmp7_fu_436_p2);
    sensitive << ( cor_phaseArray_phase_11_q0 );
    sensitive << ( cor_phaseArray_phase_3_q0 );

    SC_METHOD(thread_tmp8_fu_442_p2);
    sensitive << ( tmp6_fu_430_p2 );
    sensitive << ( tmp7_fu_436_p2 );

    SC_METHOD(thread_tmp9_fu_448_p2);
    sensitive << ( cor_phaseArray_phase_9_q0 );
    sensitive << ( cor_phaseArray_phase_10_q0 );

    SC_METHOD(thread_tmp_1_fu_377_p1);
    sensitive << ( i_data_data_V_0_data_out );

    SC_METHOD(thread_tmp_2_fu_512_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_reg_pp0_iter1_currentState_load_reg_533 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( res_V_reg_640 );

    SC_METHOD(thread_tmp_4_i_fu_472_p2);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_reg_pp0_iter1_currentState_load_reg_533 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( p_Val2_5_2_i_reg_626 );
    sensitive << ( p_Val2_2_5_i_reg_633 );

    SC_METHOD(thread_tmp_8_i_fu_505_p2);
    sensitive << ( cor_phaseArray_loadC_q0 );

    SC_METHOD(thread_tmp_fu_388_p2);
    sensitive << ( cor_phaseArray_phase_6_q0 );
    sensitive << ( cor_phaseArray_phase_7_q0 );

    SC_METHOD(thread_tmp_i_4_fu_484_p3);
    sensitive << ( tmp_4_i_fu_472_p2 );
    sensitive << ( p_Val2_8_i_fu_480_p2 );
    sensitive << ( p_Val2_9_i_fu_476_p2 );

    SC_METHOD(thread_tmp_i_fu_349_p1);
    sensitive << ( phaseClass_V );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_block_pp0_stage1_subdone );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_reset_idle_pp0 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    i_data_data_V_0_sel_rd = SC_LOGIC_0;
    i_data_data_V_0_sel_wr = SC_LOGIC_0;
    i_data_data_V_0_state = "00";
    i_data_last_V_0_sel_rd = SC_LOGIC_0;
    i_data_last_V_0_sel_wr = SC_LOGIC_0;
    i_data_last_V_0_state = "00";
    o_data_data_V_1_sel_rd = SC_LOGIC_0;
    o_data_data_V_1_sel_wr = SC_LOGIC_0;
    o_data_data_V_1_state = "00";
    o_data_last_V_1_sel_rd = SC_LOGIC_0;
    o_data_last_V_1_sel_wr = SC_LOGIC_0;
    o_data_last_V_1_state = "00";
    currentState = "0";
    ap_CS_fsm = "01";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "correlateTop_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, i_data_TDATA, "(port)i_data_TDATA");
    sc_trace(mVcdFile, i_data_TVALID, "(port)i_data_TVALID");
    sc_trace(mVcdFile, i_data_TREADY, "(port)i_data_TREADY");
    sc_trace(mVcdFile, i_data_TLAST, "(port)i_data_TLAST");
    sc_trace(mVcdFile, o_data_TDATA, "(port)o_data_TDATA");
    sc_trace(mVcdFile, o_data_TVALID, "(port)o_data_TVALID");
    sc_trace(mVcdFile, o_data_TREADY, "(port)o_data_TREADY");
    sc_trace(mVcdFile, o_data_TLAST, "(port)o_data_TLAST");
    sc_trace(mVcdFile, start_V, "(port)start_V");
    sc_trace(mVcdFile, phaseClass_V, "(port)phaseClass_V");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, i_data_data_V_0_data_out, "i_data_data_V_0_data_out");
    sc_trace(mVcdFile, i_data_data_V_0_vld_in, "i_data_data_V_0_vld_in");
    sc_trace(mVcdFile, i_data_data_V_0_vld_out, "i_data_data_V_0_vld_out");
    sc_trace(mVcdFile, i_data_data_V_0_ack_in, "i_data_data_V_0_ack_in");
    sc_trace(mVcdFile, i_data_data_V_0_ack_out, "i_data_data_V_0_ack_out");
    sc_trace(mVcdFile, i_data_data_V_0_payload_A, "i_data_data_V_0_payload_A");
    sc_trace(mVcdFile, i_data_data_V_0_payload_B, "i_data_data_V_0_payload_B");
    sc_trace(mVcdFile, i_data_data_V_0_sel_rd, "i_data_data_V_0_sel_rd");
    sc_trace(mVcdFile, i_data_data_V_0_sel_wr, "i_data_data_V_0_sel_wr");
    sc_trace(mVcdFile, i_data_data_V_0_sel, "i_data_data_V_0_sel");
    sc_trace(mVcdFile, i_data_data_V_0_load_A, "i_data_data_V_0_load_A");
    sc_trace(mVcdFile, i_data_data_V_0_load_B, "i_data_data_V_0_load_B");
    sc_trace(mVcdFile, i_data_data_V_0_state, "i_data_data_V_0_state");
    sc_trace(mVcdFile, i_data_data_V_0_state_cmp_full, "i_data_data_V_0_state_cmp_full");
    sc_trace(mVcdFile, i_data_last_V_0_data_out, "i_data_last_V_0_data_out");
    sc_trace(mVcdFile, i_data_last_V_0_vld_in, "i_data_last_V_0_vld_in");
    sc_trace(mVcdFile, i_data_last_V_0_vld_out, "i_data_last_V_0_vld_out");
    sc_trace(mVcdFile, i_data_last_V_0_ack_in, "i_data_last_V_0_ack_in");
    sc_trace(mVcdFile, i_data_last_V_0_ack_out, "i_data_last_V_0_ack_out");
    sc_trace(mVcdFile, i_data_last_V_0_payload_A, "i_data_last_V_0_payload_A");
    sc_trace(mVcdFile, i_data_last_V_0_payload_B, "i_data_last_V_0_payload_B");
    sc_trace(mVcdFile, i_data_last_V_0_sel_rd, "i_data_last_V_0_sel_rd");
    sc_trace(mVcdFile, i_data_last_V_0_sel_wr, "i_data_last_V_0_sel_wr");
    sc_trace(mVcdFile, i_data_last_V_0_sel, "i_data_last_V_0_sel");
    sc_trace(mVcdFile, i_data_last_V_0_load_A, "i_data_last_V_0_load_A");
    sc_trace(mVcdFile, i_data_last_V_0_load_B, "i_data_last_V_0_load_B");
    sc_trace(mVcdFile, i_data_last_V_0_state, "i_data_last_V_0_state");
    sc_trace(mVcdFile, i_data_last_V_0_state_cmp_full, "i_data_last_V_0_state_cmp_full");
    sc_trace(mVcdFile, o_data_data_V_1_data_out, "o_data_data_V_1_data_out");
    sc_trace(mVcdFile, o_data_data_V_1_vld_in, "o_data_data_V_1_vld_in");
    sc_trace(mVcdFile, o_data_data_V_1_vld_out, "o_data_data_V_1_vld_out");
    sc_trace(mVcdFile, o_data_data_V_1_ack_in, "o_data_data_V_1_ack_in");
    sc_trace(mVcdFile, o_data_data_V_1_ack_out, "o_data_data_V_1_ack_out");
    sc_trace(mVcdFile, o_data_data_V_1_payload_A, "o_data_data_V_1_payload_A");
    sc_trace(mVcdFile, o_data_data_V_1_payload_B, "o_data_data_V_1_payload_B");
    sc_trace(mVcdFile, o_data_data_V_1_sel_rd, "o_data_data_V_1_sel_rd");
    sc_trace(mVcdFile, o_data_data_V_1_sel_wr, "o_data_data_V_1_sel_wr");
    sc_trace(mVcdFile, o_data_data_V_1_sel, "o_data_data_V_1_sel");
    sc_trace(mVcdFile, o_data_data_V_1_load_A, "o_data_data_V_1_load_A");
    sc_trace(mVcdFile, o_data_data_V_1_load_B, "o_data_data_V_1_load_B");
    sc_trace(mVcdFile, o_data_data_V_1_state, "o_data_data_V_1_state");
    sc_trace(mVcdFile, o_data_data_V_1_state_cmp_full, "o_data_data_V_1_state_cmp_full");
    sc_trace(mVcdFile, o_data_last_V_1_data_out, "o_data_last_V_1_data_out");
    sc_trace(mVcdFile, o_data_last_V_1_vld_in, "o_data_last_V_1_vld_in");
    sc_trace(mVcdFile, o_data_last_V_1_vld_out, "o_data_last_V_1_vld_out");
    sc_trace(mVcdFile, o_data_last_V_1_ack_in, "o_data_last_V_1_ack_in");
    sc_trace(mVcdFile, o_data_last_V_1_ack_out, "o_data_last_V_1_ack_out");
    sc_trace(mVcdFile, o_data_last_V_1_payload_A, "o_data_last_V_1_payload_A");
    sc_trace(mVcdFile, o_data_last_V_1_payload_B, "o_data_last_V_1_payload_B");
    sc_trace(mVcdFile, o_data_last_V_1_sel_rd, "o_data_last_V_1_sel_rd");
    sc_trace(mVcdFile, o_data_last_V_1_sel_wr, "o_data_last_V_1_sel_wr");
    sc_trace(mVcdFile, o_data_last_V_1_sel, "o_data_last_V_1_sel");
    sc_trace(mVcdFile, o_data_last_V_1_load_A, "o_data_last_V_1_load_A");
    sc_trace(mVcdFile, o_data_last_V_1_load_B, "o_data_last_V_1_load_B");
    sc_trace(mVcdFile, o_data_last_V_1_state, "o_data_last_V_1_state");
    sc_trace(mVcdFile, o_data_last_V_1_state_cmp_full, "o_data_last_V_1_state_cmp_full");
    sc_trace(mVcdFile, currentState, "currentState");
    sc_trace(mVcdFile, cor_phaseArray_phase_8_address0, "cor_phaseArray_phase_8_address0");
    sc_trace(mVcdFile, cor_phaseArray_phase_8_ce0, "cor_phaseArray_phase_8_ce0");
    sc_trace(mVcdFile, cor_phaseArray_phase_8_we0, "cor_phaseArray_phase_8_we0");
    sc_trace(mVcdFile, cor_phaseArray_phase_8_q0, "cor_phaseArray_phase_8_q0");
    sc_trace(mVcdFile, cor_phaseArray_phase_9_address0, "cor_phaseArray_phase_9_address0");
    sc_trace(mVcdFile, cor_phaseArray_phase_9_ce0, "cor_phaseArray_phase_9_ce0");
    sc_trace(mVcdFile, cor_phaseArray_phase_9_we0, "cor_phaseArray_phase_9_we0");
    sc_trace(mVcdFile, cor_phaseArray_phase_9_q0, "cor_phaseArray_phase_9_q0");
    sc_trace(mVcdFile, cor_phaseArray_phase_10_address0, "cor_phaseArray_phase_10_address0");
    sc_trace(mVcdFile, cor_phaseArray_phase_10_ce0, "cor_phaseArray_phase_10_ce0");
    sc_trace(mVcdFile, cor_phaseArray_phase_10_we0, "cor_phaseArray_phase_10_we0");
    sc_trace(mVcdFile, cor_phaseArray_phase_10_q0, "cor_phaseArray_phase_10_q0");
    sc_trace(mVcdFile, cor_phaseArray_phase_11_address0, "cor_phaseArray_phase_11_address0");
    sc_trace(mVcdFile, cor_phaseArray_phase_11_ce0, "cor_phaseArray_phase_11_ce0");
    sc_trace(mVcdFile, cor_phaseArray_phase_11_we0, "cor_phaseArray_phase_11_we0");
    sc_trace(mVcdFile, cor_phaseArray_phase_11_q0, "cor_phaseArray_phase_11_q0");
    sc_trace(mVcdFile, cor_phaseArray_phase_12_address0, "cor_phaseArray_phase_12_address0");
    sc_trace(mVcdFile, cor_phaseArray_phase_12_ce0, "cor_phaseArray_phase_12_ce0");
    sc_trace(mVcdFile, cor_phaseArray_phase_12_we0, "cor_phaseArray_phase_12_we0");
    sc_trace(mVcdFile, cor_phaseArray_phase_12_q0, "cor_phaseArray_phase_12_q0");
    sc_trace(mVcdFile, cor_phaseArray_phase_address0, "cor_phaseArray_phase_address0");
    sc_trace(mVcdFile, cor_phaseArray_phase_ce0, "cor_phaseArray_phase_ce0");
    sc_trace(mVcdFile, cor_phaseArray_phase_we0, "cor_phaseArray_phase_we0");
    sc_trace(mVcdFile, cor_phaseArray_phase_q0, "cor_phaseArray_phase_q0");
    sc_trace(mVcdFile, cor_phaseArray_phase_1_address0, "cor_phaseArray_phase_1_address0");
    sc_trace(mVcdFile, cor_phaseArray_phase_1_ce0, "cor_phaseArray_phase_1_ce0");
    sc_trace(mVcdFile, cor_phaseArray_phase_1_we0, "cor_phaseArray_phase_1_we0");
    sc_trace(mVcdFile, cor_phaseArray_phase_1_q0, "cor_phaseArray_phase_1_q0");
    sc_trace(mVcdFile, cor_phaseArray_phase_2_address0, "cor_phaseArray_phase_2_address0");
    sc_trace(mVcdFile, cor_phaseArray_phase_2_ce0, "cor_phaseArray_phase_2_ce0");
    sc_trace(mVcdFile, cor_phaseArray_phase_2_we0, "cor_phaseArray_phase_2_we0");
    sc_trace(mVcdFile, cor_phaseArray_phase_2_q0, "cor_phaseArray_phase_2_q0");
    sc_trace(mVcdFile, cor_phaseArray_phase_3_address0, "cor_phaseArray_phase_3_address0");
    sc_trace(mVcdFile, cor_phaseArray_phase_3_ce0, "cor_phaseArray_phase_3_ce0");
    sc_trace(mVcdFile, cor_phaseArray_phase_3_we0, "cor_phaseArray_phase_3_we0");
    sc_trace(mVcdFile, cor_phaseArray_phase_3_q0, "cor_phaseArray_phase_3_q0");
    sc_trace(mVcdFile, cor_phaseArray_phase_4_address0, "cor_phaseArray_phase_4_address0");
    sc_trace(mVcdFile, cor_phaseArray_phase_4_ce0, "cor_phaseArray_phase_4_ce0");
    sc_trace(mVcdFile, cor_phaseArray_phase_4_we0, "cor_phaseArray_phase_4_we0");
    sc_trace(mVcdFile, cor_phaseArray_phase_4_q0, "cor_phaseArray_phase_4_q0");
    sc_trace(mVcdFile, cor_phaseArray_phase_5_address0, "cor_phaseArray_phase_5_address0");
    sc_trace(mVcdFile, cor_phaseArray_phase_5_ce0, "cor_phaseArray_phase_5_ce0");
    sc_trace(mVcdFile, cor_phaseArray_phase_5_we0, "cor_phaseArray_phase_5_we0");
    sc_trace(mVcdFile, cor_phaseArray_phase_5_q0, "cor_phaseArray_phase_5_q0");
    sc_trace(mVcdFile, cor_phaseArray_phase_6_address0, "cor_phaseArray_phase_6_address0");
    sc_trace(mVcdFile, cor_phaseArray_phase_6_ce0, "cor_phaseArray_phase_6_ce0");
    sc_trace(mVcdFile, cor_phaseArray_phase_6_we0, "cor_phaseArray_phase_6_we0");
    sc_trace(mVcdFile, cor_phaseArray_phase_6_q0, "cor_phaseArray_phase_6_q0");
    sc_trace(mVcdFile, cor_phaseArray_phase_7_address0, "cor_phaseArray_phase_7_address0");
    sc_trace(mVcdFile, cor_phaseArray_phase_7_ce0, "cor_phaseArray_phase_7_ce0");
    sc_trace(mVcdFile, cor_phaseArray_phase_7_we0, "cor_phaseArray_phase_7_we0");
    sc_trace(mVcdFile, cor_phaseArray_phase_7_q0, "cor_phaseArray_phase_7_q0");
    sc_trace(mVcdFile, cor_phaseArray_phase_13_address0, "cor_phaseArray_phase_13_address0");
    sc_trace(mVcdFile, cor_phaseArray_phase_13_ce0, "cor_phaseArray_phase_13_ce0");
    sc_trace(mVcdFile, cor_phaseArray_phase_13_we0, "cor_phaseArray_phase_13_we0");
    sc_trace(mVcdFile, cor_phaseArray_phase_13_q0, "cor_phaseArray_phase_13_q0");
    sc_trace(mVcdFile, cor_phaseArray_phase_14_address0, "cor_phaseArray_phase_14_address0");
    sc_trace(mVcdFile, cor_phaseArray_phase_14_ce0, "cor_phaseArray_phase_14_ce0");
    sc_trace(mVcdFile, cor_phaseArray_phase_14_we0, "cor_phaseArray_phase_14_we0");
    sc_trace(mVcdFile, cor_phaseArray_phase_14_q0, "cor_phaseArray_phase_14_q0");
    sc_trace(mVcdFile, cor_phaseArray_loadC_address0, "cor_phaseArray_loadC_address0");
    sc_trace(mVcdFile, cor_phaseArray_loadC_ce0, "cor_phaseArray_loadC_ce0");
    sc_trace(mVcdFile, cor_phaseArray_loadC_we0, "cor_phaseArray_loadC_we0");
    sc_trace(mVcdFile, cor_phaseArray_loadC_q0, "cor_phaseArray_loadC_q0");
    sc_trace(mVcdFile, i_data_TDATA_blk_n, "i_data_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, currentState_load_reg_533, "currentState_load_reg_533");
    sc_trace(mVcdFile, o_data_TDATA_blk_n, "o_data_TDATA_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_currentState_load_reg_533, "ap_reg_pp0_iter1_currentState_load_reg_533");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_block_pp0_stage1, "ap_block_pp0_stage1");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_currentState_load_reg_533, "ap_reg_pp0_iter2_currentState_load_reg_533");
    sc_trace(mVcdFile, ap_block_state1_pp0_stage0_iter0, "ap_block_state1_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter2, "ap_block_state5_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state5_io, "ap_block_state5_io");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, start_V_read_read_fu_104_p2, "start_V_read_read_fu_104_p2");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage1_iter0, "ap_block_state2_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage1_iter1, "ap_block_state4_pp0_stage1_iter1");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage1_iter2, "ap_block_state6_pp0_stage1_iter2");
    sc_trace(mVcdFile, ap_block_state6_io, "ap_block_state6_io");
    sc_trace(mVcdFile, ap_block_pp0_stage1_11001, "ap_block_pp0_stage1_11001");
    sc_trace(mVcdFile, cor_phaseArray_phase_reg_541, "cor_phaseArray_phase_reg_541");
    sc_trace(mVcdFile, cor_phaseArray_phase_2_reg_546, "cor_phaseArray_phase_2_reg_546");
    sc_trace(mVcdFile, cor_phaseArray_phase_4_reg_551, "cor_phaseArray_phase_4_reg_551");
    sc_trace(mVcdFile, cor_phaseArray_phase_6_reg_556, "cor_phaseArray_phase_6_reg_556");
    sc_trace(mVcdFile, cor_phaseArray_phase_8_reg_561, "cor_phaseArray_phase_8_reg_561");
    sc_trace(mVcdFile, cor_phaseArray_phase_10_reg_566, "cor_phaseArray_phase_10_reg_566");
    sc_trace(mVcdFile, cor_phaseArray_phase_12_reg_571, "cor_phaseArray_phase_12_reg_571");
    sc_trace(mVcdFile, cor_phaseArray_phase_14_reg_576, "cor_phaseArray_phase_14_reg_576");
    sc_trace(mVcdFile, cor_phaseArray_phase_16_reg_581, "cor_phaseArray_phase_16_reg_581");
    sc_trace(mVcdFile, cor_phaseArray_phase_18_reg_586, "cor_phaseArray_phase_18_reg_586");
    sc_trace(mVcdFile, cor_phaseArray_phase_20_reg_591, "cor_phaseArray_phase_20_reg_591");
    sc_trace(mVcdFile, cor_phaseArray_phase_22_reg_596, "cor_phaseArray_phase_22_reg_596");
    sc_trace(mVcdFile, cor_phaseArray_phase_24_reg_601, "cor_phaseArray_phase_24_reg_601");
    sc_trace(mVcdFile, cor_phaseArray_phase_26_reg_606, "cor_phaseArray_phase_26_reg_606");
    sc_trace(mVcdFile, cor_phaseArray_phase_28_reg_611, "cor_phaseArray_phase_28_reg_611");
    sc_trace(mVcdFile, cor_phaseArray_loadC_reg_616, "cor_phaseArray_loadC_reg_616");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_cor_phaseArray_loadC_reg_616, "ap_reg_pp0_iter1_cor_phaseArray_loadC_reg_616");
    sc_trace(mVcdFile, i_data_last_V_tmp_reg_621, "i_data_last_V_tmp_reg_621");
    sc_trace(mVcdFile, p_Val2_5_2_i_fu_424_p2, "p_Val2_5_2_i_fu_424_p2");
    sc_trace(mVcdFile, p_Val2_5_2_i_reg_626, "p_Val2_5_2_i_reg_626");
    sc_trace(mVcdFile, p_Val2_2_5_i_fu_466_p2, "p_Val2_2_5_i_fu_466_p2");
    sc_trace(mVcdFile, p_Val2_2_5_i_reg_633, "p_Val2_2_5_i_reg_633");
    sc_trace(mVcdFile, res_V_reg_640, "res_V_reg_640");
    sc_trace(mVcdFile, o_data_data_V_tmp_fu_517_p3, "o_data_data_V_tmp_fu_517_p3");
    sc_trace(mVcdFile, ap_block_pp0_stage1_subdone, "ap_block_pp0_stage1_subdone");
    sc_trace(mVcdFile, tmp_i_fu_349_p1, "tmp_i_fu_349_p1");
    sc_trace(mVcdFile, tmp_1_fu_377_p1, "tmp_1_fu_377_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, ap_block_pp0_stage1_01001, "ap_block_pp0_stage1_01001");
    sc_trace(mVcdFile, tmp_8_i_fu_505_p2, "tmp_8_i_fu_505_p2");
    sc_trace(mVcdFile, tmp_fu_388_p2, "tmp_fu_388_p2");
    sc_trace(mVcdFile, tmp1_fu_394_p2, "tmp1_fu_394_p2");
    sc_trace(mVcdFile, tmp3_fu_406_p2, "tmp3_fu_406_p2");
    sc_trace(mVcdFile, tmp4_fu_412_p2, "tmp4_fu_412_p2");
    sc_trace(mVcdFile, tmp2_fu_400_p2, "tmp2_fu_400_p2");
    sc_trace(mVcdFile, tmp5_fu_418_p2, "tmp5_fu_418_p2");
    sc_trace(mVcdFile, tmp6_fu_430_p2, "tmp6_fu_430_p2");
    sc_trace(mVcdFile, tmp7_fu_436_p2, "tmp7_fu_436_p2");
    sc_trace(mVcdFile, tmp9_fu_448_p2, "tmp9_fu_448_p2");
    sc_trace(mVcdFile, tmp10_fu_454_p2, "tmp10_fu_454_p2");
    sc_trace(mVcdFile, tmp8_fu_442_p2, "tmp8_fu_442_p2");
    sc_trace(mVcdFile, tmp11_fu_460_p2, "tmp11_fu_460_p2");
    sc_trace(mVcdFile, tmp_4_i_fu_472_p2, "tmp_4_i_fu_472_p2");
    sc_trace(mVcdFile, p_Val2_8_i_fu_480_p2, "p_Val2_8_i_fu_480_p2");
    sc_trace(mVcdFile, p_Val2_9_i_fu_476_p2, "p_Val2_9_i_fu_476_p2");
    sc_trace(mVcdFile, tmp_i_4_fu_484_p3, "tmp_i_4_fu_484_p3");
    sc_trace(mVcdFile, p_Val2_1_fu_526_p2, "p_Val2_1_fu_526_p2");
    sc_trace(mVcdFile, tmp_2_fu_512_p2, "tmp_2_fu_512_p2");
    sc_trace(mVcdFile, p_Val2_1_fu_526_p0, "p_Val2_1_fu_526_p0");
    sc_trace(mVcdFile, OP1_V_cast_fu_492_p1, "OP1_V_cast_fu_492_p1");
    sc_trace(mVcdFile, p_Val2_1_fu_526_p1, "p_Val2_1_fu_526_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_reset_idle_pp0, "ap_reset_idle_pp0");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
    mHdltvinHandle.open("correlateTop.hdltvin.dat");
    mHdltvoutHandle.open("correlateTop.hdltvout.dat");
}

correlateTop::~correlateTop() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete cor_phaseArray_phase_8_U;
    delete cor_phaseArray_phase_9_U;
    delete cor_phaseArray_phase_10_U;
    delete cor_phaseArray_phase_11_U;
    delete cor_phaseArray_phase_12_U;
    delete cor_phaseArray_phase_U;
    delete cor_phaseArray_phase_1_U;
    delete cor_phaseArray_phase_2_U;
    delete cor_phaseArray_phase_3_U;
    delete cor_phaseArray_phase_4_U;
    delete cor_phaseArray_phase_5_U;
    delete cor_phaseArray_phase_6_U;
    delete cor_phaseArray_phase_7_U;
    delete cor_phaseArray_phase_13_U;
    delete cor_phaseArray_phase_14_U;
    delete cor_phaseArray_loadC_U;
    delete correlateTop_mul_rcU_U1;
}

void correlateTop::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_pp0_stage0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        currentState = ap_const_lv1_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
              esl_seteq<1,1,1>(ap_const_lv1_0, currentState_load_reg_533.read()) && 
              esl_seteq<1,1,1>(ap_const_lv1_1, start_V_read_read_fu_104_p2.read())) || 
             (esl_seteq<1,1,1>(ap_const_lv1_1, currentState_load_reg_533.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1)))) {
            currentState = ap_const_lv1_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        i_data_data_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, i_data_data_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, i_data_data_V_0_vld_out.read()))) {
            i_data_data_V_0_sel_rd =  (sc_logic) (~i_data_data_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        i_data_data_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, i_data_data_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, i_data_data_V_0_ack_in.read()))) {
            i_data_data_V_0_sel_wr =  (sc_logic) (~i_data_data_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        i_data_data_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, i_data_data_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, i_data_data_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(i_data_data_V_0_state.read(), ap_const_lv2_3)) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, i_data_data_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(i_data_data_V_0_state.read(), ap_const_lv2_2)))) {
            i_data_data_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, i_data_data_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, i_data_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(i_data_data_V_0_state.read(), ap_const_lv2_3)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, i_data_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(i_data_data_V_0_state.read(), ap_const_lv2_1)))) {
            i_data_data_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, i_data_data_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(i_data_data_V_0_state.read(), ap_const_lv2_2)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, i_data_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(i_data_data_V_0_state.read(), ap_const_lv2_1)) || 
                    (esl_seteq<1,2,2>(i_data_data_V_0_state.read(), ap_const_lv2_3) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, i_data_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, i_data_data_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, i_data_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, i_data_data_V_0_ack_out.read()))))) {
            i_data_data_V_0_state = ap_const_lv2_3;
        } else {
            i_data_data_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        i_data_last_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, i_data_last_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, i_data_last_V_0_vld_out.read()))) {
            i_data_last_V_0_sel_rd =  (sc_logic) (~i_data_last_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        i_data_last_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, i_data_last_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, i_data_last_V_0_ack_in.read()))) {
            i_data_last_V_0_sel_wr =  (sc_logic) (~i_data_last_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        i_data_last_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, i_data_last_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, i_data_last_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, i_data_last_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, i_data_last_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, i_data_last_V_0_state.read())))) {
            i_data_last_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, i_data_last_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, i_data_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, i_data_last_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, i_data_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, i_data_last_V_0_state.read())))) {
            i_data_last_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, i_data_last_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, i_data_last_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, i_data_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, i_data_last_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, i_data_last_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, i_data_last_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, i_data_last_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, i_data_last_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, i_data_last_V_0_ack_out.read()))))) {
            i_data_last_V_0_state = ap_const_lv2_3;
        } else {
            i_data_last_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        o_data_data_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, o_data_data_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, o_data_data_V_1_vld_out.read()))) {
            o_data_data_V_1_sel_rd =  (sc_logic) (~o_data_data_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        o_data_data_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, o_data_data_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, o_data_data_V_1_ack_in.read()))) {
            o_data_data_V_1_sel_wr =  (sc_logic) (~o_data_data_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        o_data_data_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, o_data_data_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, o_data_data_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, o_data_data_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, o_data_data_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, o_data_data_V_1_state.read())))) {
            o_data_data_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, o_data_data_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, o_data_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, o_data_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, o_data_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, o_data_data_V_1_state.read())))) {
            o_data_data_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, o_data_data_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, o_data_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, o_data_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, o_data_data_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, o_data_data_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, o_data_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, o_data_data_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, o_data_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, o_data_data_V_1_ack_out.read()))))) {
            o_data_data_V_1_state = ap_const_lv2_3;
        } else {
            o_data_data_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        o_data_last_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, o_data_last_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, o_data_last_V_1_vld_out.read()))) {
            o_data_last_V_1_sel_rd =  (sc_logic) (~o_data_last_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        o_data_last_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, o_data_last_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, o_data_last_V_1_ack_in.read()))) {
            o_data_last_V_1_sel_wr =  (sc_logic) (~o_data_last_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        o_data_last_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, o_data_last_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, o_data_last_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, o_data_last_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, o_data_last_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, o_data_last_V_1_state.read())))) {
            o_data_last_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, o_data_last_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, o_data_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, o_data_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, o_data_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, o_data_last_V_1_state.read())))) {
            o_data_last_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, o_data_last_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, o_data_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, o_data_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, o_data_last_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, o_data_last_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, o_data_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, o_data_last_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, o_data_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, o_data_last_V_1_ack_out.read()))))) {
            o_data_last_V_1_state = ap_const_lv2_3;
        } else {
            o_data_last_V_1_state = ap_const_lv2_2;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        ap_reg_pp0_iter1_cor_phaseArray_loadC_reg_616 = cor_phaseArray_loadC_reg_616.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ap_reg_pp0_iter1_currentState_load_reg_533 = currentState_load_reg_533.read();
        ap_reg_pp0_iter2_currentState_load_reg_533 = ap_reg_pp0_iter1_currentState_load_reg_533.read();
        currentState_load_reg_533 = currentState.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, currentState_load_reg_533.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        cor_phaseArray_loadC_reg_616 =  (sc_lv<4>) (tmp_i_fu_349_p1.read());
        cor_phaseArray_phase_10_reg_566 =  (sc_lv<4>) (tmp_i_fu_349_p1.read());
        cor_phaseArray_phase_12_reg_571 =  (sc_lv<4>) (tmp_i_fu_349_p1.read());
        cor_phaseArray_phase_14_reg_576 =  (sc_lv<4>) (tmp_i_fu_349_p1.read());
        cor_phaseArray_phase_16_reg_581 =  (sc_lv<4>) (tmp_i_fu_349_p1.read());
        cor_phaseArray_phase_18_reg_586 =  (sc_lv<4>) (tmp_i_fu_349_p1.read());
        cor_phaseArray_phase_20_reg_591 =  (sc_lv<4>) (tmp_i_fu_349_p1.read());
        cor_phaseArray_phase_22_reg_596 =  (sc_lv<4>) (tmp_i_fu_349_p1.read());
        cor_phaseArray_phase_24_reg_601 =  (sc_lv<4>) (tmp_i_fu_349_p1.read());
        cor_phaseArray_phase_26_reg_606 =  (sc_lv<4>) (tmp_i_fu_349_p1.read());
        cor_phaseArray_phase_28_reg_611 =  (sc_lv<4>) (tmp_i_fu_349_p1.read());
        cor_phaseArray_phase_2_reg_546 =  (sc_lv<4>) (tmp_i_fu_349_p1.read());
        cor_phaseArray_phase_4_reg_551 =  (sc_lv<4>) (tmp_i_fu_349_p1.read());
        cor_phaseArray_phase_6_reg_556 =  (sc_lv<4>) (tmp_i_fu_349_p1.read());
        cor_phaseArray_phase_8_reg_561 =  (sc_lv<4>) (tmp_i_fu_349_p1.read());
        cor_phaseArray_phase_reg_541 =  (sc_lv<4>) (tmp_i_fu_349_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, i_data_data_V_0_load_A.read())) {
        i_data_data_V_0_payload_A = i_data_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, i_data_data_V_0_load_B.read())) {
        i_data_data_V_0_payload_B = i_data_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, i_data_last_V_0_load_A.read())) {
        i_data_last_V_0_payload_A = i_data_TLAST.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, i_data_last_V_0_load_B.read())) {
        i_data_last_V_0_payload_B = i_data_TLAST.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, currentState_load_reg_533.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        i_data_last_V_tmp_reg_621 = i_data_last_V_0_data_out.read();
        p_Val2_2_5_i_reg_633 = p_Val2_2_5_i_fu_466_p2.read();
        p_Val2_5_2_i_reg_626 = p_Val2_5_2_i_fu_424_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, o_data_data_V_1_load_A.read())) {
        o_data_data_V_1_payload_A = o_data_data_V_tmp_fu_517_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, o_data_data_V_1_load_B.read())) {
        o_data_data_V_1_payload_B = o_data_data_V_tmp_fu_517_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, o_data_last_V_1_load_A.read())) {
        o_data_last_V_1_payload_A = i_data_last_V_tmp_reg_621.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, o_data_last_V_1_load_B.read())) {
        o_data_last_V_1_payload_B = i_data_last_V_tmp_reg_621.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter1_currentState_load_reg_533.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        res_V_reg_640 = p_Val2_1_fu_526_p2.read().range(20, 5);
    }
}

void correlateTop::thread_OP1_V_cast_fu_492_p1() {
    OP1_V_cast_fu_492_p1 = esl_sext<21,16>(tmp_i_4_fu_484_p3.read());
}

void correlateTop::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[0];
}

void correlateTop::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[1];
}

void correlateTop::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void correlateTop::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, currentState_load_reg_533.read()) && esl_seteq<1,1,1>(ap_const_logic_0, i_data_data_V_0_vld_out.read()));
}

void correlateTop::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, currentState_load_reg_533.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, i_data_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state5_io.read())));
}

void correlateTop::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, currentState_load_reg_533.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, i_data_data_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state5_io.read())));
}

void correlateTop::thread_ap_block_pp0_stage1() {
    ap_block_pp0_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void correlateTop::thread_ap_block_pp0_stage1_01001() {
    ap_block_pp0_stage1_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && (esl_seteq<1,1,1>(ap_const_logic_0, o_data_data_V_1_ack_in.read()) || 
  esl_seteq<1,1,1>(ap_const_logic_0, o_data_last_V_1_ack_in.read())));
}

void correlateTop::thread_ap_block_pp0_stage1_11001() {
    ap_block_pp0_stage1_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && (esl_seteq<1,1,1>(ap_const_logic_0, o_data_data_V_1_ack_in.read()) || 
  esl_seteq<1,1,1>(ap_const_logic_0, o_data_last_V_1_ack_in.read()) || 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state6_io.read())));
}

void correlateTop::thread_ap_block_pp0_stage1_subdone() {
    ap_block_pp0_stage1_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && (esl_seteq<1,1,1>(ap_const_logic_0, o_data_data_V_1_ack_in.read()) || 
  esl_seteq<1,1,1>(ap_const_logic_0, o_data_last_V_1_ack_in.read()) || 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state6_io.read())));
}

void correlateTop::thread_ap_block_state1_pp0_stage0_iter0() {
    ap_block_state1_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void correlateTop::thread_ap_block_state2_pp0_stage1_iter0() {
    ap_block_state2_pp0_stage1_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void correlateTop::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_1, currentState_load_reg_533.read()) && esl_seteq<1,1,1>(ap_const_logic_0, i_data_data_V_0_vld_out.read()));
}

void correlateTop::thread_ap_block_state4_pp0_stage1_iter1() {
    ap_block_state4_pp0_stage1_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void correlateTop::thread_ap_block_state5_io() {
    ap_block_state5_io = (esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter1_currentState_load_reg_533.read()) && esl_seteq<1,1,1>(ap_const_logic_0, o_data_data_V_1_ack_in.read()));
}

void correlateTop::thread_ap_block_state5_pp0_stage0_iter2() {
    ap_block_state5_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void correlateTop::thread_ap_block_state6_io() {
    ap_block_state6_io = (esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter2_currentState_load_reg_533.read()) && esl_seteq<1,1,1>(ap_const_logic_0, o_data_data_V_1_ack_in.read()));
}

void correlateTop::thread_ap_block_state6_pp0_stage1_iter2() {
    ap_block_state6_pp0_stage1_iter2 = (esl_seteq<1,1,1>(ap_const_logic_0, o_data_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, o_data_last_V_1_ack_in.read()));
}

void correlateTop::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void correlateTop::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void correlateTop::thread_ap_reset_idle_pp0() {
    if (!esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        ap_reset_idle_pp0 = ap_const_logic_1;
    } else {
        ap_reset_idle_pp0 = ap_const_logic_0;
    }
}

void correlateTop::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void correlateTop::thread_cor_phaseArray_loadC_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        cor_phaseArray_loadC_address0 = ap_reg_pp0_iter1_cor_phaseArray_loadC_reg_616.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        cor_phaseArray_loadC_address0 = cor_phaseArray_loadC_reg_616.read();
    } else {
        cor_phaseArray_loadC_address0 = "XXXX";
    }
}

void correlateTop::thread_cor_phaseArray_loadC_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)))) {
        cor_phaseArray_loadC_ce0 = ap_const_logic_1;
    } else {
        cor_phaseArray_loadC_ce0 = ap_const_logic_0;
    }
}

void correlateTop::thread_cor_phaseArray_loadC_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter1_currentState_load_reg_533.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        cor_phaseArray_loadC_we0 = ap_const_logic_1;
    } else {
        cor_phaseArray_loadC_we0 = ap_const_logic_0;
    }
}

void correlateTop::thread_cor_phaseArray_phase_10_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        cor_phaseArray_phase_10_address0 = cor_phaseArray_phase_4_reg_551.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1))) {
        cor_phaseArray_phase_10_address0 =  (sc_lv<4>) (tmp_i_fu_349_p1.read());
    } else {
        cor_phaseArray_phase_10_address0 = "XXXX";
    }
}

void correlateTop::thread_cor_phaseArray_phase_10_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        cor_phaseArray_phase_10_ce0 = ap_const_logic_1;
    } else {
        cor_phaseArray_phase_10_ce0 = ap_const_logic_0;
    }
}

void correlateTop::thread_cor_phaseArray_phase_10_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, currentState_load_reg_533.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        cor_phaseArray_phase_10_we0 = ap_const_logic_1;
    } else {
        cor_phaseArray_phase_10_we0 = ap_const_logic_0;
    }
}

void correlateTop::thread_cor_phaseArray_phase_11_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        cor_phaseArray_phase_11_address0 = cor_phaseArray_phase_6_reg_556.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1))) {
        cor_phaseArray_phase_11_address0 =  (sc_lv<4>) (tmp_i_fu_349_p1.read());
    } else {
        cor_phaseArray_phase_11_address0 = "XXXX";
    }
}

void correlateTop::thread_cor_phaseArray_phase_11_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        cor_phaseArray_phase_11_ce0 = ap_const_logic_1;
    } else {
        cor_phaseArray_phase_11_ce0 = ap_const_logic_0;
    }
}

void correlateTop::thread_cor_phaseArray_phase_11_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, currentState_load_reg_533.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        cor_phaseArray_phase_11_we0 = ap_const_logic_1;
    } else {
        cor_phaseArray_phase_11_we0 = ap_const_logic_0;
    }
}

void correlateTop::thread_cor_phaseArray_phase_12_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        cor_phaseArray_phase_12_address0 = cor_phaseArray_phase_8_reg_561.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1))) {
        cor_phaseArray_phase_12_address0 =  (sc_lv<4>) (tmp_i_fu_349_p1.read());
    } else {
        cor_phaseArray_phase_12_address0 = "XXXX";
    }
}

void correlateTop::thread_cor_phaseArray_phase_12_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        cor_phaseArray_phase_12_ce0 = ap_const_logic_1;
    } else {
        cor_phaseArray_phase_12_ce0 = ap_const_logic_0;
    }
}

void correlateTop::thread_cor_phaseArray_phase_12_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, currentState_load_reg_533.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        cor_phaseArray_phase_12_we0 = ap_const_logic_1;
    } else {
        cor_phaseArray_phase_12_we0 = ap_const_logic_0;
    }
}

void correlateTop::thread_cor_phaseArray_phase_13_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        cor_phaseArray_phase_13_address0 = cor_phaseArray_phase_26_reg_606.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1))) {
        cor_phaseArray_phase_13_address0 =  (sc_lv<4>) (tmp_i_fu_349_p1.read());
    } else {
        cor_phaseArray_phase_13_address0 = "XXXX";
    }
}

void correlateTop::thread_cor_phaseArray_phase_13_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        cor_phaseArray_phase_13_ce0 = ap_const_logic_1;
    } else {
        cor_phaseArray_phase_13_ce0 = ap_const_logic_0;
    }
}

void correlateTop::thread_cor_phaseArray_phase_13_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, currentState_load_reg_533.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        cor_phaseArray_phase_13_we0 = ap_const_logic_1;
    } else {
        cor_phaseArray_phase_13_we0 = ap_const_logic_0;
    }
}

void correlateTop::thread_cor_phaseArray_phase_14_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        cor_phaseArray_phase_14_address0 = cor_phaseArray_phase_28_reg_611.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1))) {
        cor_phaseArray_phase_14_address0 =  (sc_lv<4>) (tmp_i_fu_349_p1.read());
    } else {
        cor_phaseArray_phase_14_address0 = "XXXX";
    }
}

void correlateTop::thread_cor_phaseArray_phase_14_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        cor_phaseArray_phase_14_ce0 = ap_const_logic_1;
    } else {
        cor_phaseArray_phase_14_ce0 = ap_const_logic_0;
    }
}

void correlateTop::thread_cor_phaseArray_phase_14_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, currentState_load_reg_533.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        cor_phaseArray_phase_14_we0 = ap_const_logic_1;
    } else {
        cor_phaseArray_phase_14_we0 = ap_const_logic_0;
    }
}

void correlateTop::thread_cor_phaseArray_phase_1_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        cor_phaseArray_phase_1_address0 = cor_phaseArray_phase_12_reg_571.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1))) {
        cor_phaseArray_phase_1_address0 =  (sc_lv<4>) (tmp_i_fu_349_p1.read());
    } else {
        cor_phaseArray_phase_1_address0 = "XXXX";
    }
}

void correlateTop::thread_cor_phaseArray_phase_1_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        cor_phaseArray_phase_1_ce0 = ap_const_logic_1;
    } else {
        cor_phaseArray_phase_1_ce0 = ap_const_logic_0;
    }
}

void correlateTop::thread_cor_phaseArray_phase_1_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, currentState_load_reg_533.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        cor_phaseArray_phase_1_we0 = ap_const_logic_1;
    } else {
        cor_phaseArray_phase_1_we0 = ap_const_logic_0;
    }
}

void correlateTop::thread_cor_phaseArray_phase_2_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        cor_phaseArray_phase_2_address0 = cor_phaseArray_phase_14_reg_576.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1))) {
        cor_phaseArray_phase_2_address0 =  (sc_lv<4>) (tmp_i_fu_349_p1.read());
    } else {
        cor_phaseArray_phase_2_address0 = "XXXX";
    }
}

void correlateTop::thread_cor_phaseArray_phase_2_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        cor_phaseArray_phase_2_ce0 = ap_const_logic_1;
    } else {
        cor_phaseArray_phase_2_ce0 = ap_const_logic_0;
    }
}

void correlateTop::thread_cor_phaseArray_phase_2_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, currentState_load_reg_533.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        cor_phaseArray_phase_2_we0 = ap_const_logic_1;
    } else {
        cor_phaseArray_phase_2_we0 = ap_const_logic_0;
    }
}

void correlateTop::thread_cor_phaseArray_phase_3_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        cor_phaseArray_phase_3_address0 = cor_phaseArray_phase_16_reg_581.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1))) {
        cor_phaseArray_phase_3_address0 =  (sc_lv<4>) (tmp_i_fu_349_p1.read());
    } else {
        cor_phaseArray_phase_3_address0 = "XXXX";
    }
}

void correlateTop::thread_cor_phaseArray_phase_3_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        cor_phaseArray_phase_3_ce0 = ap_const_logic_1;
    } else {
        cor_phaseArray_phase_3_ce0 = ap_const_logic_0;
    }
}

void correlateTop::thread_cor_phaseArray_phase_3_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, currentState_load_reg_533.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        cor_phaseArray_phase_3_we0 = ap_const_logic_1;
    } else {
        cor_phaseArray_phase_3_we0 = ap_const_logic_0;
    }
}

void correlateTop::thread_cor_phaseArray_phase_4_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        cor_phaseArray_phase_4_address0 = cor_phaseArray_phase_18_reg_586.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1))) {
        cor_phaseArray_phase_4_address0 =  (sc_lv<4>) (tmp_i_fu_349_p1.read());
    } else {
        cor_phaseArray_phase_4_address0 = "XXXX";
    }
}

void correlateTop::thread_cor_phaseArray_phase_4_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        cor_phaseArray_phase_4_ce0 = ap_const_logic_1;
    } else {
        cor_phaseArray_phase_4_ce0 = ap_const_logic_0;
    }
}

void correlateTop::thread_cor_phaseArray_phase_4_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, currentState_load_reg_533.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        cor_phaseArray_phase_4_we0 = ap_const_logic_1;
    } else {
        cor_phaseArray_phase_4_we0 = ap_const_logic_0;
    }
}

void correlateTop::thread_cor_phaseArray_phase_5_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        cor_phaseArray_phase_5_address0 = cor_phaseArray_phase_20_reg_591.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1))) {
        cor_phaseArray_phase_5_address0 =  (sc_lv<4>) (tmp_i_fu_349_p1.read());
    } else {
        cor_phaseArray_phase_5_address0 = "XXXX";
    }
}

void correlateTop::thread_cor_phaseArray_phase_5_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        cor_phaseArray_phase_5_ce0 = ap_const_logic_1;
    } else {
        cor_phaseArray_phase_5_ce0 = ap_const_logic_0;
    }
}

void correlateTop::thread_cor_phaseArray_phase_5_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, currentState_load_reg_533.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        cor_phaseArray_phase_5_we0 = ap_const_logic_1;
    } else {
        cor_phaseArray_phase_5_we0 = ap_const_logic_0;
    }
}

void correlateTop::thread_cor_phaseArray_phase_6_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        cor_phaseArray_phase_6_address0 = cor_phaseArray_phase_22_reg_596.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1))) {
        cor_phaseArray_phase_6_address0 =  (sc_lv<4>) (tmp_i_fu_349_p1.read());
    } else {
        cor_phaseArray_phase_6_address0 = "XXXX";
    }
}

void correlateTop::thread_cor_phaseArray_phase_6_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        cor_phaseArray_phase_6_ce0 = ap_const_logic_1;
    } else {
        cor_phaseArray_phase_6_ce0 = ap_const_logic_0;
    }
}

void correlateTop::thread_cor_phaseArray_phase_6_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, currentState_load_reg_533.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        cor_phaseArray_phase_6_we0 = ap_const_logic_1;
    } else {
        cor_phaseArray_phase_6_we0 = ap_const_logic_0;
    }
}

void correlateTop::thread_cor_phaseArray_phase_7_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        cor_phaseArray_phase_7_address0 = cor_phaseArray_phase_24_reg_601.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1))) {
        cor_phaseArray_phase_7_address0 =  (sc_lv<4>) (tmp_i_fu_349_p1.read());
    } else {
        cor_phaseArray_phase_7_address0 = "XXXX";
    }
}

void correlateTop::thread_cor_phaseArray_phase_7_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        cor_phaseArray_phase_7_ce0 = ap_const_logic_1;
    } else {
        cor_phaseArray_phase_7_ce0 = ap_const_logic_0;
    }
}

void correlateTop::thread_cor_phaseArray_phase_7_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, currentState_load_reg_533.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        cor_phaseArray_phase_7_we0 = ap_const_logic_1;
    } else {
        cor_phaseArray_phase_7_we0 = ap_const_logic_0;
    }
}

void correlateTop::thread_cor_phaseArray_phase_8_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        cor_phaseArray_phase_8_address0 = cor_phaseArray_phase_reg_541.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1))) {
        cor_phaseArray_phase_8_address0 =  (sc_lv<4>) (tmp_i_fu_349_p1.read());
    } else {
        cor_phaseArray_phase_8_address0 = "XXXX";
    }
}

void correlateTop::thread_cor_phaseArray_phase_8_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        cor_phaseArray_phase_8_ce0 = ap_const_logic_1;
    } else {
        cor_phaseArray_phase_8_ce0 = ap_const_logic_0;
    }
}

void correlateTop::thread_cor_phaseArray_phase_8_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, currentState_load_reg_533.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        cor_phaseArray_phase_8_we0 = ap_const_logic_1;
    } else {
        cor_phaseArray_phase_8_we0 = ap_const_logic_0;
    }
}

void correlateTop::thread_cor_phaseArray_phase_9_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        cor_phaseArray_phase_9_address0 = cor_phaseArray_phase_2_reg_546.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1))) {
        cor_phaseArray_phase_9_address0 =  (sc_lv<4>) (tmp_i_fu_349_p1.read());
    } else {
        cor_phaseArray_phase_9_address0 = "XXXX";
    }
}

void correlateTop::thread_cor_phaseArray_phase_9_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        cor_phaseArray_phase_9_ce0 = ap_const_logic_1;
    } else {
        cor_phaseArray_phase_9_ce0 = ap_const_logic_0;
    }
}

void correlateTop::thread_cor_phaseArray_phase_9_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, currentState_load_reg_533.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        cor_phaseArray_phase_9_we0 = ap_const_logic_1;
    } else {
        cor_phaseArray_phase_9_we0 = ap_const_logic_0;
    }
}

void correlateTop::thread_cor_phaseArray_phase_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        cor_phaseArray_phase_address0 = cor_phaseArray_phase_10_reg_566.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1))) {
        cor_phaseArray_phase_address0 =  (sc_lv<4>) (tmp_i_fu_349_p1.read());
    } else {
        cor_phaseArray_phase_address0 = "XXXX";
    }
}

void correlateTop::thread_cor_phaseArray_phase_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        cor_phaseArray_phase_ce0 = ap_const_logic_1;
    } else {
        cor_phaseArray_phase_ce0 = ap_const_logic_0;
    }
}

void correlateTop::thread_cor_phaseArray_phase_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, currentState_load_reg_533.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        cor_phaseArray_phase_we0 = ap_const_logic_1;
    } else {
        cor_phaseArray_phase_we0 = ap_const_logic_0;
    }
}

void correlateTop::thread_i_data_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, currentState_load_reg_533.read()))) {
        i_data_TDATA_blk_n = i_data_data_V_0_state.read()[0];
    } else {
        i_data_TDATA_blk_n = ap_const_logic_1;
    }
}

void correlateTop::thread_i_data_TREADY() {
    i_data_TREADY = i_data_last_V_0_state.read()[1];
}

void correlateTop::thread_i_data_data_V_0_ack_in() {
    i_data_data_V_0_ack_in = i_data_data_V_0_state.read()[1];
}

void correlateTop::thread_i_data_data_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, currentState_load_reg_533.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        i_data_data_V_0_ack_out = ap_const_logic_1;
    } else {
        i_data_data_V_0_ack_out = ap_const_logic_0;
    }
}

void correlateTop::thread_i_data_data_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, i_data_data_V_0_sel.read())) {
        i_data_data_V_0_data_out = i_data_data_V_0_payload_B.read();
    } else {
        i_data_data_V_0_data_out = i_data_data_V_0_payload_A.read();
    }
}

void correlateTop::thread_i_data_data_V_0_load_A() {
    i_data_data_V_0_load_A = (i_data_data_V_0_state_cmp_full.read() & ~i_data_data_V_0_sel_wr.read());
}

void correlateTop::thread_i_data_data_V_0_load_B() {
    i_data_data_V_0_load_B = (i_data_data_V_0_sel_wr.read() & i_data_data_V_0_state_cmp_full.read());
}

void correlateTop::thread_i_data_data_V_0_sel() {
    i_data_data_V_0_sel = i_data_data_V_0_sel_rd.read();
}

void correlateTop::thread_i_data_data_V_0_state_cmp_full() {
    i_data_data_V_0_state_cmp_full =  (sc_logic) ((!i_data_data_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(i_data_data_V_0_state.read() != ap_const_lv2_1))[0];
}

void correlateTop::thread_i_data_data_V_0_vld_in() {
    i_data_data_V_0_vld_in = i_data_TVALID.read();
}

void correlateTop::thread_i_data_data_V_0_vld_out() {
    i_data_data_V_0_vld_out = i_data_data_V_0_state.read()[0];
}

void correlateTop::thread_i_data_last_V_0_ack_in() {
    i_data_last_V_0_ack_in = i_data_last_V_0_state.read()[1];
}

void correlateTop::thread_i_data_last_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, currentState_load_reg_533.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        i_data_last_V_0_ack_out = ap_const_logic_1;
    } else {
        i_data_last_V_0_ack_out = ap_const_logic_0;
    }
}

void correlateTop::thread_i_data_last_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, i_data_last_V_0_sel.read())) {
        i_data_last_V_0_data_out = i_data_last_V_0_payload_B.read();
    } else {
        i_data_last_V_0_data_out = i_data_last_V_0_payload_A.read();
    }
}

void correlateTop::thread_i_data_last_V_0_load_A() {
    i_data_last_V_0_load_A = (i_data_last_V_0_state_cmp_full.read() & ~i_data_last_V_0_sel_wr.read());
}

void correlateTop::thread_i_data_last_V_0_load_B() {
    i_data_last_V_0_load_B = (i_data_last_V_0_sel_wr.read() & i_data_last_V_0_state_cmp_full.read());
}

void correlateTop::thread_i_data_last_V_0_sel() {
    i_data_last_V_0_sel = i_data_last_V_0_sel_rd.read();
}

void correlateTop::thread_i_data_last_V_0_state_cmp_full() {
    i_data_last_V_0_state_cmp_full =  (sc_logic) ((!i_data_last_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(i_data_last_V_0_state.read() != ap_const_lv2_1))[0];
}

void correlateTop::thread_i_data_last_V_0_vld_in() {
    i_data_last_V_0_vld_in = i_data_TVALID.read();
}

void correlateTop::thread_i_data_last_V_0_vld_out() {
    i_data_last_V_0_vld_out = i_data_last_V_0_state.read()[0];
}

void correlateTop::thread_o_data_TDATA() {
    o_data_TDATA = o_data_data_V_1_data_out.read();
}

void correlateTop::thread_o_data_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter1_currentState_load_reg_533.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter2_currentState_load_reg_533.read())))) {
        o_data_TDATA_blk_n = o_data_data_V_1_state.read()[1];
    } else {
        o_data_TDATA_blk_n = ap_const_logic_1;
    }
}

void correlateTop::thread_o_data_TLAST() {
    o_data_TLAST = o_data_last_V_1_data_out.read();
}

void correlateTop::thread_o_data_TVALID() {
    o_data_TVALID = o_data_last_V_1_state.read()[0];
}

void correlateTop::thread_o_data_data_V_1_ack_in() {
    o_data_data_V_1_ack_in = o_data_data_V_1_state.read()[1];
}

void correlateTop::thread_o_data_data_V_1_ack_out() {
    o_data_data_V_1_ack_out = o_data_TREADY.read();
}

void correlateTop::thread_o_data_data_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, o_data_data_V_1_sel.read())) {
        o_data_data_V_1_data_out = o_data_data_V_1_payload_B.read();
    } else {
        o_data_data_V_1_data_out = o_data_data_V_1_payload_A.read();
    }
}

void correlateTop::thread_o_data_data_V_1_load_A() {
    o_data_data_V_1_load_A = (o_data_data_V_1_state_cmp_full.read() & ~o_data_data_V_1_sel_wr.read());
}

void correlateTop::thread_o_data_data_V_1_load_B() {
    o_data_data_V_1_load_B = (o_data_data_V_1_sel_wr.read() & o_data_data_V_1_state_cmp_full.read());
}

void correlateTop::thread_o_data_data_V_1_sel() {
    o_data_data_V_1_sel = o_data_data_V_1_sel_rd.read();
}

void correlateTop::thread_o_data_data_V_1_state_cmp_full() {
    o_data_data_V_1_state_cmp_full =  (sc_logic) ((!o_data_data_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(o_data_data_V_1_state.read() != ap_const_lv2_1))[0];
}

void correlateTop::thread_o_data_data_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter1_currentState_load_reg_533.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        o_data_data_V_1_vld_in = ap_const_logic_1;
    } else {
        o_data_data_V_1_vld_in = ap_const_logic_0;
    }
}

void correlateTop::thread_o_data_data_V_1_vld_out() {
    o_data_data_V_1_vld_out = o_data_data_V_1_state.read()[0];
}

void correlateTop::thread_o_data_data_V_tmp_fu_517_p3() {
    o_data_data_V_tmp_fu_517_p3 = (!tmp_2_fu_512_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_2_fu_512_p2.read()[0].to_bool())? ap_const_lv32_0: tmp_8_i_fu_505_p2.read());
}

void correlateTop::thread_o_data_last_V_1_ack_in() {
    o_data_last_V_1_ack_in = o_data_last_V_1_state.read()[1];
}

void correlateTop::thread_o_data_last_V_1_ack_out() {
    o_data_last_V_1_ack_out = o_data_TREADY.read();
}

void correlateTop::thread_o_data_last_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, o_data_last_V_1_sel.read())) {
        o_data_last_V_1_data_out = o_data_last_V_1_payload_B.read();
    } else {
        o_data_last_V_1_data_out = o_data_last_V_1_payload_A.read();
    }
}

void correlateTop::thread_o_data_last_V_1_load_A() {
    o_data_last_V_1_load_A = (o_data_last_V_1_state_cmp_full.read() & ~o_data_last_V_1_sel_wr.read());
}

void correlateTop::thread_o_data_last_V_1_load_B() {
    o_data_last_V_1_load_B = (o_data_last_V_1_sel_wr.read() & o_data_last_V_1_state_cmp_full.read());
}

void correlateTop::thread_o_data_last_V_1_sel() {
    o_data_last_V_1_sel = o_data_last_V_1_sel_rd.read();
}

void correlateTop::thread_o_data_last_V_1_state_cmp_full() {
    o_data_last_V_1_state_cmp_full =  (sc_logic) ((!o_data_last_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(o_data_last_V_1_state.read() != ap_const_lv2_1))[0];
}

void correlateTop::thread_o_data_last_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter1_currentState_load_reg_533.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        o_data_last_V_1_vld_in = ap_const_logic_1;
    } else {
        o_data_last_V_1_vld_in = ap_const_logic_0;
    }
}

void correlateTop::thread_o_data_last_V_1_vld_out() {
    o_data_last_V_1_vld_out = o_data_last_V_1_state.read()[0];
}

void correlateTop::thread_p_Val2_1_fu_526_p0() {
    p_Val2_1_fu_526_p0 =  (sc_lv<16>) (OP1_V_cast_fu_492_p1.read());
}

void correlateTop::thread_p_Val2_1_fu_526_p1() {
    p_Val2_1_fu_526_p1 =  (sc_lv<16>) (OP1_V_cast_fu_492_p1.read());
}

void correlateTop::thread_p_Val2_2_5_i_fu_466_p2() {
    p_Val2_2_5_i_fu_466_p2 = (!tmp8_fu_442_p2.read().is_01() || !tmp11_fu_460_p2.read().is_01())? sc_lv<16>(): (sc_biguint<16>(tmp8_fu_442_p2.read()) + sc_biguint<16>(tmp11_fu_460_p2.read()));
}

void correlateTop::thread_p_Val2_5_2_i_fu_424_p2() {
    p_Val2_5_2_i_fu_424_p2 = (!tmp2_fu_400_p2.read().is_01() || !tmp5_fu_418_p2.read().is_01())? sc_lv<16>(): (sc_biguint<16>(tmp2_fu_400_p2.read()) + sc_biguint<16>(tmp5_fu_418_p2.read()));
}

void correlateTop::thread_p_Val2_8_i_fu_480_p2() {
    p_Val2_8_i_fu_480_p2 = (!p_Val2_5_2_i_reg_626.read().is_01() || !p_Val2_2_5_i_reg_633.read().is_01())? sc_lv<16>(): (sc_biguint<16>(p_Val2_5_2_i_reg_626.read()) - sc_biguint<16>(p_Val2_2_5_i_reg_633.read()));
}

void correlateTop::thread_p_Val2_9_i_fu_476_p2() {
    p_Val2_9_i_fu_476_p2 = (!p_Val2_2_5_i_reg_633.read().is_01() || !p_Val2_5_2_i_reg_626.read().is_01())? sc_lv<16>(): (sc_biguint<16>(p_Val2_2_5_i_reg_633.read()) - sc_biguint<16>(p_Val2_5_2_i_reg_626.read()));
}

void correlateTop::thread_start_V_read_read_fu_104_p2() {
    start_V_read_read_fu_104_p2 = start_V.read();
}

void correlateTop::thread_tmp10_fu_454_p2() {
    tmp10_fu_454_p2 = (!tmp_1_fu_377_p1.read().is_01() || !cor_phaseArray_phase_8_q0.read().is_01())? sc_lv<16>(): (sc_biguint<16>(tmp_1_fu_377_p1.read()) + sc_biguint<16>(cor_phaseArray_phase_8_q0.read()));
}

void correlateTop::thread_tmp11_fu_460_p2() {
    tmp11_fu_460_p2 = (!tmp9_fu_448_p2.read().is_01() || !tmp10_fu_454_p2.read().is_01())? sc_lv<16>(): (sc_biguint<16>(tmp9_fu_448_p2.read()) + sc_biguint<16>(tmp10_fu_454_p2.read()));
}

void correlateTop::thread_tmp1_fu_394_p2() {
    tmp1_fu_394_p2 = (!cor_phaseArray_phase_2_q0.read().is_01() || !cor_phaseArray_phase_4_q0.read().is_01())? sc_lv<16>(): (sc_biguint<16>(cor_phaseArray_phase_2_q0.read()) + sc_biguint<16>(cor_phaseArray_phase_4_q0.read()));
}

void correlateTop::thread_tmp2_fu_400_p2() {
    tmp2_fu_400_p2 = (!tmp_fu_388_p2.read().is_01() || !tmp1_fu_394_p2.read().is_01())? sc_lv<16>(): (sc_biguint<16>(tmp_fu_388_p2.read()) + sc_biguint<16>(tmp1_fu_394_p2.read()));
}

void correlateTop::thread_tmp3_fu_406_p2() {
    tmp3_fu_406_p2 = (!cor_phaseArray_phase_1_q0.read().is_01() || !cor_phaseArray_phase_q0.read().is_01())? sc_lv<16>(): (sc_biguint<16>(cor_phaseArray_phase_1_q0.read()) + sc_biguint<16>(cor_phaseArray_phase_q0.read()));
}

void correlateTop::thread_tmp4_fu_412_p2() {
    tmp4_fu_412_p2 = (!cor_phaseArray_phase_14_q0.read().is_01() || !cor_phaseArray_phase_12_q0.read().is_01())? sc_lv<16>(): (sc_biguint<16>(cor_phaseArray_phase_14_q0.read()) + sc_biguint<16>(cor_phaseArray_phase_12_q0.read()));
}

void correlateTop::thread_tmp5_fu_418_p2() {
    tmp5_fu_418_p2 = (!tmp3_fu_406_p2.read().is_01() || !tmp4_fu_412_p2.read().is_01())? sc_lv<16>(): (sc_biguint<16>(tmp3_fu_406_p2.read()) + sc_biguint<16>(tmp4_fu_412_p2.read()));
}

void correlateTop::thread_tmp6_fu_430_p2() {
    tmp6_fu_430_p2 = (!cor_phaseArray_phase_13_q0.read().is_01() || !cor_phaseArray_phase_5_q0.read().is_01())? sc_lv<16>(): (sc_biguint<16>(cor_phaseArray_phase_13_q0.read()) + sc_biguint<16>(cor_phaseArray_phase_5_q0.read()));
}

void correlateTop::thread_tmp7_fu_436_p2() {
    tmp7_fu_436_p2 = (!cor_phaseArray_phase_11_q0.read().is_01() || !cor_phaseArray_phase_3_q0.read().is_01())? sc_lv<16>(): (sc_biguint<16>(cor_phaseArray_phase_11_q0.read()) + sc_biguint<16>(cor_phaseArray_phase_3_q0.read()));
}

void correlateTop::thread_tmp8_fu_442_p2() {
    tmp8_fu_442_p2 = (!tmp6_fu_430_p2.read().is_01() || !tmp7_fu_436_p2.read().is_01())? sc_lv<16>(): (sc_biguint<16>(tmp6_fu_430_p2.read()) + sc_biguint<16>(tmp7_fu_436_p2.read()));
}

void correlateTop::thread_tmp9_fu_448_p2() {
    tmp9_fu_448_p2 = (!cor_phaseArray_phase_10_q0.read().is_01() || !cor_phaseArray_phase_9_q0.read().is_01())? sc_lv<16>(): (sc_biguint<16>(cor_phaseArray_phase_10_q0.read()) + sc_biguint<16>(cor_phaseArray_phase_9_q0.read()));
}

void correlateTop::thread_tmp_1_fu_377_p1() {
    tmp_1_fu_377_p1 = i_data_data_V_0_data_out.read().range(16-1, 0);
}

void correlateTop::thread_tmp_2_fu_512_p2() {
    tmp_2_fu_512_p2 = (!res_V_reg_640.read().is_01() || !ap_const_lv16_1F40.is_01())? sc_lv<1>(): (sc_bigint<16>(res_V_reg_640.read()) < sc_bigint<16>(ap_const_lv16_1F40));
}

void correlateTop::thread_tmp_4_i_fu_472_p2() {
    tmp_4_i_fu_472_p2 = (!p_Val2_5_2_i_reg_626.read().is_01() || !p_Val2_2_5_i_reg_633.read().is_01())? sc_lv<1>(): (sc_bigint<16>(p_Val2_5_2_i_reg_626.read()) > sc_bigint<16>(p_Val2_2_5_i_reg_633.read()));
}

void correlateTop::thread_tmp_8_i_fu_505_p2() {
    tmp_8_i_fu_505_p2 = (!ap_const_lv32_20.is_01() || !cor_phaseArray_loadC_q0.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_20) + sc_biguint<32>(cor_phaseArray_loadC_q0.read()));
}

void correlateTop::thread_tmp_fu_388_p2() {
    tmp_fu_388_p2 = (!cor_phaseArray_phase_7_q0.read().is_01() || !cor_phaseArray_phase_6_q0.read().is_01())? sc_lv<16>(): (sc_biguint<16>(cor_phaseArray_phase_7_q0.read()) + sc_biguint<16>(cor_phaseArray_phase_6_q0.read()));
}

void correlateTop::thread_tmp_i_4_fu_484_p3() {
    tmp_i_4_fu_484_p3 = (!tmp_4_i_fu_472_p2.read()[0].is_01())? sc_lv<16>(): ((tmp_4_i_fu_472_p2.read()[0].to_bool())? p_Val2_8_i_fu_480_p2.read(): p_Val2_9_i_fu_476_p2.read());
}

void correlateTop::thread_tmp_i_fu_349_p1() {
    tmp_i_fu_349_p1 = esl_zext<64,4>(phaseClass_V.read());
}

void correlateTop::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 2 : 
            if (((esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reset_idle_pp0.read())) || (esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_reset_idle_pp0.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<2>) ("XX");
            break;
    }
}

void correlateTop::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"i_data_TDATA\" :  \"" << i_data_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"i_data_TVALID\" :  \"" << i_data_TVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"i_data_TREADY\" :  \"" << i_data_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"i_data_TLAST\" :  \"" << i_data_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"o_data_TDATA\" :  \"" << o_data_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"o_data_TVALID\" :  \"" << o_data_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"o_data_TREADY\" :  \"" << o_data_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"o_data_TLAST\" :  \"" << o_data_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"start_V\" :  \"" << start_V.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"phaseClass_V\" :  \"" << phaseClass_V.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

