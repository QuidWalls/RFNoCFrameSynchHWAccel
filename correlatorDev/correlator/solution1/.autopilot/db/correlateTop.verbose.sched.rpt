

================================================================
== Vivado HLS Report for 'correlateTop'
================================================================
* Date:           Thu Mar 28 14:56:21 2019

* Version:        2017.4 (Build 2086221 on Fri Dec 15 21:13:33 MST 2017)
* Project:        correlator
* Solution:       solution1
* Product family: kintex7
* Target device:  xc7k160tfbg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   5.00|      4.03|        0.62|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+----------+
    |  Latency  |  Interval | Pipeline |
    | min | max | min | max |   Type   |
    +-----+-----+-----+-----+----------+
    |   10|   10|    1|    1| function |
    +-----+-----+-----+-----+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 1
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 11


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 11
* Pipeline : 1
  Pipeline-0 : II = 1, D = 11, States = { 1 2 3 4 5 6 7 8 9 10 11 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 

* FSM state operations: 

 <State 1> : 0.48ns
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%currentState_load = load i1* @currentState, align 1" [correlator.cpp:64]
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "br i1 %currentState_load, label %._crit_edge191, label %0" [correlator.cpp:70]
ST_1 : Operation 14 [2/2] (0.00ns)   --->   "%empty = call { i32, i1 } @_ssdm_op_Read.axis.volatile.i32P.i1P(i32* %i_data_V_data_V, i1* %i_data_V_last_V)" [correlator.cpp:79]   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "store i1 true, i1* @currentState, align 1" [correlator.cpp:111]

 <State 2> : 2.54ns
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "%phaseClass_V_load = load i4* @phaseClass_V, align 1" [correlator.cpp:89]
ST_2 : Operation 17 [1/1] (1.06ns)   --->   "store i4 0, i4* @phaseClass_V, align 1" [correlator.cpp:74]
ST_2 : Operation 18 [1/2] (0.00ns)   --->   "%empty = call { i32, i1 } @_ssdm_op_Read.axis.volatile.i32P.i1P(i32* %i_data_V_data_V, i1* %i_data_V_last_V)" [correlator.cpp:79]   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%tmp_data_V_1 = extractvalue { i32, i1 } %empty, 0" [correlator.cpp:79]
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%tmp_last_V = extractvalue { i32, i1 } %empty, 1" [correlator.cpp:79]
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%tmp_1 = trunc i32 %tmp_data_V_1 to i16" [correlator.cpp:82]
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "store i16 %tmp_1, i16* @newVali_V, align 2" [correlator.cpp:82]
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%op2_V_read_assign_1 = call i16 @_ssdm_op_PartSelect.i16.i32.i32.i32(i32 %tmp_data_V_1, i32 16, i32 31)" [correlator.cpp:83]
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "store i16 %op2_V_read_assign_1, i16* @newValq_V, align 2" [correlator.cpp:83]
ST_2 : Operation 25 [1/1] (1.08ns)   --->   "%cond_i = icmp eq i4 %phaseClass_V_load, 0" [correlator.cpp:119->correlator.cpp:89]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 26 [1/1] (1.06ns)   --->   "br i1 %cond_i, label %.preheader.0.i, label %correlator.exit" [correlator.cpp:119->correlator.cpp:89]
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%cor_phaseClass0i_V_1_5 = load i16* @cor_phaseClass0i_V_1, align 2" [correlator.cpp:123->correlator.cpp:89]
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%cor_phaseClass0q_V_1_5 = load i16* @cor_phaseClass0q_V_1, align 2" [correlator.cpp:124->correlator.cpp:89]
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%cor_phaseClass0i_V_0 = load i16* @cor_phaseClass0i_V_0, align 16" [correlator.cpp:123->correlator.cpp:89]
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "store i16 %cor_phaseClass0i_V_0, i16* @cor_phaseClass0i_V_1, align 2" [correlator.cpp:123->correlator.cpp:89]
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%cor_phaseClass0q_V_0 = load i16* @cor_phaseClass0q_V_0, align 16" [correlator.cpp:124->correlator.cpp:89]
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "store i16 %cor_phaseClass0q_V_0, i16* @cor_phaseClass0q_V_1, align 2" [correlator.cpp:124->correlator.cpp:89]
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "store i16 %tmp_1, i16* @cor_phaseClass0i_V_0, align 16" [correlator.cpp:126->correlator.cpp:89]
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "store i16 %op2_V_read_assign_1, i16* @cor_phaseClass0q_V_0, align 16" [correlator.cpp:127->correlator.cpp:89]
ST_2 : Operation 35 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp16 = add i16 %cor_phaseClass0i_V_0, %tmp_1" [correlator.cpp:267->correlator.cpp:90]   --->   Core 80 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.27> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 36 [1/1] (2.54ns) (root node of TernaryAdder)   --->   "%tmp15 = add i16 %tmp16, %cor_phaseClass0i_V_1_5" [correlator.cpp:267->correlator.cpp:90]   --->   Core 80 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.27> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 37 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp23 = add i16 %cor_phaseClass0q_V_0, %op2_V_read_assign_1" [correlator.cpp:268->correlator.cpp:90]   --->   Core 80 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.27> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 38 [1/1] (2.54ns) (root node of TernaryAdder)   --->   "%tmp22 = add i16 %tmp23, %cor_phaseClass0q_V_1_5" [correlator.cpp:268->correlator.cpp:90]   --->   Core 80 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.27> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 39 [1/1] (1.32ns)   --->   "%tmp_4 = add i4 %phaseClass_V_load, 1" [correlator.cpp:97]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (1.06ns)   --->   "store i4 %tmp_4, i4* @phaseClass_V, align 1" [correlator.cpp:95]

 <State 3> : 4.03ns
ST_3 : Operation 41 [1/1] (0.00ns)   --->   "%cor_phaseClass0i_V_1 = load i16* @cor_phaseClass0i_V_14, align 4" [correlator.cpp:123->correlator.cpp:89]
ST_3 : Operation 42 [1/1] (0.00ns)   --->   "%cor_phaseClass0q_V_1 = load i16* @cor_phaseClass0q_V_14, align 4" [correlator.cpp:124->correlator.cpp:89]
ST_3 : Operation 43 [1/1] (0.00ns)   --->   "%cor_phaseClass0i_V_1_1 = load i16* @cor_phaseClass0i_V_13, align 2" [correlator.cpp:123->correlator.cpp:89]
ST_3 : Operation 44 [1/1] (0.00ns)   --->   "store i16 %cor_phaseClass0i_V_1_1, i16* @cor_phaseClass0i_V_14, align 4" [correlator.cpp:123->correlator.cpp:89]
ST_3 : Operation 45 [1/1] (0.00ns)   --->   "%cor_phaseClass0q_V_1_1 = load i16* @cor_phaseClass0q_V_13, align 2" [correlator.cpp:124->correlator.cpp:89]
ST_3 : Operation 46 [1/1] (0.00ns)   --->   "store i16 %cor_phaseClass0q_V_1_1, i16* @cor_phaseClass0q_V_14, align 4" [correlator.cpp:124->correlator.cpp:89]
ST_3 : Operation 47 [1/1] (0.00ns)   --->   "%cor_phaseClass0i_V_1_2 = load i16* @cor_phaseClass0i_V_12, align 8" [correlator.cpp:123->correlator.cpp:89]
ST_3 : Operation 48 [1/1] (0.00ns)   --->   "store i16 %cor_phaseClass0i_V_1_2, i16* @cor_phaseClass0i_V_13, align 2" [correlator.cpp:123->correlator.cpp:89]
ST_3 : Operation 49 [1/1] (0.00ns)   --->   "%cor_phaseClass0q_V_1_2 = load i16* @cor_phaseClass0q_V_12, align 8" [correlator.cpp:124->correlator.cpp:89]
ST_3 : Operation 50 [1/1] (0.00ns)   --->   "store i16 %cor_phaseClass0q_V_1_2, i16* @cor_phaseClass0q_V_13, align 2" [correlator.cpp:124->correlator.cpp:89]
ST_3 : Operation 51 [1/1] (0.00ns)   --->   "%cor_phaseClass0i_V_1_3 = load i16* @cor_phaseClass0i_V_11, align 2" [correlator.cpp:123->correlator.cpp:89]
ST_3 : Operation 52 [1/1] (0.00ns)   --->   "store i16 %cor_phaseClass0i_V_1_3, i16* @cor_phaseClass0i_V_12, align 8" [correlator.cpp:123->correlator.cpp:89]
ST_3 : Operation 53 [1/1] (0.00ns)   --->   "%cor_phaseClass0q_V_1_3 = load i16* @cor_phaseClass0q_V_11, align 2" [correlator.cpp:124->correlator.cpp:89]
ST_3 : Operation 54 [1/1] (0.00ns)   --->   "store i16 %cor_phaseClass0q_V_1_3, i16* @cor_phaseClass0q_V_12, align 8" [correlator.cpp:124->correlator.cpp:89]
ST_3 : Operation 55 [1/1] (0.00ns)   --->   "%cor_phaseClass0i_V_1_4 = load i16* @cor_phaseClass0i_V_10, align 4" [correlator.cpp:123->correlator.cpp:89]
ST_3 : Operation 56 [1/1] (0.00ns)   --->   "store i16 %cor_phaseClass0i_V_1_4, i16* @cor_phaseClass0i_V_11, align 2" [correlator.cpp:123->correlator.cpp:89]
ST_3 : Operation 57 [1/1] (0.00ns)   --->   "%cor_phaseClass0q_V_1_4 = load i16* @cor_phaseClass0q_V_10, align 4" [correlator.cpp:124->correlator.cpp:89]
ST_3 : Operation 58 [1/1] (0.00ns)   --->   "store i16 %cor_phaseClass0q_V_1_4, i16* @cor_phaseClass0q_V_11, align 2" [correlator.cpp:124->correlator.cpp:89]
ST_3 : Operation 59 [1/1] (0.00ns)   --->   "%cor_phaseClass0i_V_9 = load i16* @cor_phaseClass0i_V_9, align 2" [correlator.cpp:123->correlator.cpp:89]
ST_3 : Operation 60 [1/1] (0.00ns)   --->   "store i16 %cor_phaseClass0i_V_9, i16* @cor_phaseClass0i_V_10, align 4" [correlator.cpp:123->correlator.cpp:89]
ST_3 : Operation 61 [1/1] (0.00ns)   --->   "%cor_phaseClass0q_V_9 = load i16* @cor_phaseClass0q_V_9, align 2" [correlator.cpp:124->correlator.cpp:89]
ST_3 : Operation 62 [1/1] (0.00ns)   --->   "store i16 %cor_phaseClass0q_V_9, i16* @cor_phaseClass0q_V_10, align 4" [correlator.cpp:124->correlator.cpp:89]
ST_3 : Operation 63 [1/1] (0.00ns)   --->   "%cor_phaseClass0i_V_8 = load i16* @cor_phaseClass0i_V_8, align 16" [correlator.cpp:123->correlator.cpp:89]
ST_3 : Operation 64 [1/1] (0.00ns)   --->   "store i16 %cor_phaseClass0i_V_8, i16* @cor_phaseClass0i_V_9, align 2" [correlator.cpp:123->correlator.cpp:89]
ST_3 : Operation 65 [1/1] (0.00ns)   --->   "%cor_phaseClass0q_V_8 = load i16* @cor_phaseClass0q_V_8, align 16" [correlator.cpp:124->correlator.cpp:89]
ST_3 : Operation 66 [1/1] (0.00ns)   --->   "store i16 %cor_phaseClass0q_V_8, i16* @cor_phaseClass0q_V_9, align 2" [correlator.cpp:124->correlator.cpp:89]
ST_3 : Operation 67 [1/1] (0.00ns)   --->   "%cor_phaseClass0i_V_7 = load i16* @cor_phaseClass0i_V_7, align 2" [correlator.cpp:123->correlator.cpp:89]
ST_3 : Operation 68 [1/1] (0.00ns)   --->   "store i16 %cor_phaseClass0i_V_7, i16* @cor_phaseClass0i_V_8, align 16" [correlator.cpp:123->correlator.cpp:89]
ST_3 : Operation 69 [1/1] (0.00ns)   --->   "%cor_phaseClass0q_V_7 = load i16* @cor_phaseClass0q_V_7, align 2" [correlator.cpp:124->correlator.cpp:89]
ST_3 : Operation 70 [1/1] (0.00ns)   --->   "store i16 %cor_phaseClass0q_V_7, i16* @cor_phaseClass0q_V_8, align 16" [correlator.cpp:124->correlator.cpp:89]
ST_3 : Operation 71 [1/1] (0.00ns)   --->   "%cor_phaseClass0i_V_6 = load i16* @cor_phaseClass0i_V_6, align 4" [correlator.cpp:123->correlator.cpp:89]
ST_3 : Operation 72 [1/1] (0.00ns)   --->   "store i16 %cor_phaseClass0i_V_6, i16* @cor_phaseClass0i_V_7, align 2" [correlator.cpp:123->correlator.cpp:89]
ST_3 : Operation 73 [1/1] (0.00ns)   --->   "%cor_phaseClass0q_V_6 = load i16* @cor_phaseClass0q_V_6, align 4" [correlator.cpp:124->correlator.cpp:89]
ST_3 : Operation 74 [1/1] (0.00ns)   --->   "store i16 %cor_phaseClass0q_V_6, i16* @cor_phaseClass0q_V_7, align 2" [correlator.cpp:124->correlator.cpp:89]
ST_3 : Operation 75 [1/1] (0.00ns)   --->   "%cor_phaseClass0i_V_5 = load i16* @cor_phaseClass0i_V_5, align 2" [correlator.cpp:123->correlator.cpp:89]
ST_3 : Operation 76 [1/1] (0.00ns)   --->   "store i16 %cor_phaseClass0i_V_5, i16* @cor_phaseClass0i_V_6, align 4" [correlator.cpp:123->correlator.cpp:89]
ST_3 : Operation 77 [1/1] (0.00ns)   --->   "%cor_phaseClass0q_V_5 = load i16* @cor_phaseClass0q_V_5, align 2" [correlator.cpp:124->correlator.cpp:89]
ST_3 : Operation 78 [1/1] (0.00ns)   --->   "store i16 %cor_phaseClass0q_V_5, i16* @cor_phaseClass0q_V_6, align 4" [correlator.cpp:124->correlator.cpp:89]
ST_3 : Operation 79 [1/1] (0.00ns)   --->   "%cor_phaseClass0i_V_4 = load i16* @cor_phaseClass0i_V_4, align 8" [correlator.cpp:123->correlator.cpp:89]
ST_3 : Operation 80 [1/1] (0.00ns)   --->   "store i16 %cor_phaseClass0i_V_4, i16* @cor_phaseClass0i_V_5, align 2" [correlator.cpp:123->correlator.cpp:89]
ST_3 : Operation 81 [1/1] (0.00ns)   --->   "%cor_phaseClass0q_V_4 = load i16* @cor_phaseClass0q_V_4, align 8" [correlator.cpp:124->correlator.cpp:89]
ST_3 : Operation 82 [1/1] (0.00ns)   --->   "store i16 %cor_phaseClass0q_V_4, i16* @cor_phaseClass0q_V_5, align 2" [correlator.cpp:124->correlator.cpp:89]
ST_3 : Operation 83 [1/1] (0.00ns)   --->   "%cor_phaseClass0i_V_3 = load i16* @cor_phaseClass0i_V_3, align 2" [correlator.cpp:123->correlator.cpp:89]
ST_3 : Operation 84 [1/1] (0.00ns)   --->   "store i16 %cor_phaseClass0i_V_3, i16* @cor_phaseClass0i_V_4, align 8" [correlator.cpp:123->correlator.cpp:89]
ST_3 : Operation 85 [1/1] (0.00ns)   --->   "%cor_phaseClass0q_V_3 = load i16* @cor_phaseClass0q_V_3, align 2" [correlator.cpp:124->correlator.cpp:89]
ST_3 : Operation 86 [1/1] (0.00ns)   --->   "store i16 %cor_phaseClass0q_V_3, i16* @cor_phaseClass0q_V_4, align 8" [correlator.cpp:124->correlator.cpp:89]
ST_3 : Operation 87 [1/1] (0.00ns)   --->   "%cor_phaseClass0i_V_2 = load i16* @cor_phaseClass0i_V_2, align 4" [correlator.cpp:123->correlator.cpp:89]
ST_3 : Operation 88 [1/1] (0.00ns)   --->   "store i16 %cor_phaseClass0i_V_2, i16* @cor_phaseClass0i_V_3, align 2" [correlator.cpp:123->correlator.cpp:89]
ST_3 : Operation 89 [1/1] (0.00ns)   --->   "%cor_phaseClass0q_V_2 = load i16* @cor_phaseClass0q_V_2, align 4" [correlator.cpp:124->correlator.cpp:89]
ST_3 : Operation 90 [1/1] (0.00ns)   --->   "store i16 %cor_phaseClass0q_V_2, i16* @cor_phaseClass0q_V_3, align 2" [correlator.cpp:124->correlator.cpp:89]
ST_3 : Operation 91 [1/1] (0.00ns)   --->   "store i16 %cor_phaseClass0i_V_1_5, i16* @cor_phaseClass0i_V_2, align 4" [correlator.cpp:123->correlator.cpp:89]
ST_3 : Operation 92 [1/1] (0.00ns)   --->   "store i16 %cor_phaseClass0q_V_1_5, i16* @cor_phaseClass0q_V_2, align 4" [correlator.cpp:124->correlator.cpp:89]
ST_3 : Operation 93 [1/1] (1.48ns)   --->   "%tmp1 = add i16 %cor_phaseClass0i_V_1_1, %cor_phaseClass0i_V_8" [correlator.cpp:264->correlator.cpp:90]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 94 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp3 = add i16 %cor_phaseClass0i_V_7, %cor_phaseClass0i_V_6" [correlator.cpp:264->correlator.cpp:90]   --->   Core 80 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.27> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 95 [1/1] (1.48ns)   --->   "%tmp4 = add i16 %cor_phaseClass0i_V_5, %cor_phaseClass0i_V_2" [correlator.cpp:264->correlator.cpp:90]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 96 [1/1] (2.54ns) (root node of TernaryAdder)   --->   "%tmp2 = add i16 %tmp4, %tmp3" [correlator.cpp:264->correlator.cpp:90]   --->   Core 80 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.27> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 97 [1/1] (1.48ns)   --->   "%tmp6 = add i16 %cor_phaseClass0q_V_1_1, %cor_phaseClass0q_V_8" [correlator.cpp:265->correlator.cpp:90]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 98 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp8 = add i16 %cor_phaseClass0q_V_7, %cor_phaseClass0q_V_6" [correlator.cpp:265->correlator.cpp:90]   --->   Core 80 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.27> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 99 [1/1] (1.48ns)   --->   "%tmp9 = add i16 %cor_phaseClass0q_V_5, %cor_phaseClass0q_V_2" [correlator.cpp:265->correlator.cpp:90]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 100 [1/1] (2.54ns) (root node of TernaryAdder)   --->   "%tmp7 = add i16 %tmp9, %tmp8" [correlator.cpp:265->correlator.cpp:90]   --->   Core 80 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.27> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 101 [1/1] (1.48ns)   --->   "%tmp11 = add i16 %cor_phaseClass0i_V_1_3, %cor_phaseClass0i_V_1" [correlator.cpp:267->correlator.cpp:90]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 102 [1/1] (1.48ns)   --->   "%tmp12 = add i16 %cor_phaseClass0i_V_1_4, %cor_phaseClass0i_V_9" [correlator.cpp:267->correlator.cpp:90]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 103 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp14 = add i16 %cor_phaseClass0i_V_4, %cor_phaseClass0i_V_3" [correlator.cpp:267->correlator.cpp:90]   --->   Core 80 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.27> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 104 [1/1] (2.54ns) (root node of TernaryAdder)   --->   "%tmp13 = add i16 %tmp15, %tmp14" [correlator.cpp:267->correlator.cpp:90]   --->   Core 80 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.27> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 105 [1/1] (1.48ns)   --->   "%tmp18 = add i16 %cor_phaseClass0q_V_1_3, %cor_phaseClass0q_V_1" [correlator.cpp:268->correlator.cpp:90]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 106 [1/1] (1.48ns)   --->   "%tmp19 = add i16 %cor_phaseClass0q_V_1_4, %cor_phaseClass0q_V_9" [correlator.cpp:268->correlator.cpp:90]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 107 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp21 = add i16 %cor_phaseClass0q_V_4, %cor_phaseClass0q_V_3" [correlator.cpp:268->correlator.cpp:90]   --->   Core 80 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.27> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 108 [1/1] (2.54ns) (root node of TernaryAdder)   --->   "%tmp20 = add i16 %tmp22, %tmp21" [correlator.cpp:268->correlator.cpp:90]   --->   Core 80 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.27> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

 <State 4> : 3.60ns
ST_4 : Operation 109 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp = add i16 %tmp1, %cor_phaseClass0i_V_1_2" [correlator.cpp:264->correlator.cpp:90]   --->   Core 80 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.27> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 110 [1/1] (2.54ns) (root node of TernaryAdder)   --->   "%corHelperIPos_V_i = add i16 %tmp2, %tmp" [correlator.cpp:264->correlator.cpp:90]   --->   Core 80 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.27> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 111 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp5 = add i16 %tmp6, %cor_phaseClass0q_V_1_2" [correlator.cpp:265->correlator.cpp:90]   --->   Core 80 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.27> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 112 [1/1] (2.54ns) (root node of TernaryAdder)   --->   "%corHelperQPos_V_i = add i16 %tmp7, %tmp5" [correlator.cpp:265->correlator.cpp:90]   --->   Core 80 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.27> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 113 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp10 = add i16 %tmp12, %tmp11" [correlator.cpp:267->correlator.cpp:90]   --->   Core 80 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.27> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 114 [1/1] (2.54ns) (root node of TernaryAdder)   --->   "%corHelperINeg_V_7_i = add i16 %tmp13, %tmp10" [correlator.cpp:267->correlator.cpp:90]   --->   Core 80 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.27> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 115 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp17 = add i16 %tmp19, %tmp18" [correlator.cpp:268->correlator.cpp:90]   --->   Core 80 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.27> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 116 [1/1] (2.54ns) (root node of TernaryAdder)   --->   "%corHelperQNeg_V_7_i = add i16 %tmp20, %tmp17" [correlator.cpp:268->correlator.cpp:90]   --->   Core 80 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.27> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 117 [1/1] (1.06ns)   --->   "br label %correlator.exit"

 <State 5> : 2.34ns
ST_5 : Operation 118 [1/1] (0.00ns)   --->   "%p_0336_2_i = phi i16 [ %corHelperINeg_V_7_i, %.preheader.0.i ], [ 0, %._crit_edge191 ]" [correlator.cpp:267->correlator.cpp:90]
ST_5 : Operation 119 [1/1] (0.00ns)   --->   "%p_0332_2_i = phi i16 [ %corHelperIPos_V_i, %.preheader.0.i ], [ 0, %._crit_edge191 ]" [correlator.cpp:264->correlator.cpp:90]
ST_5 : Operation 120 [1/1] (0.00ns)   --->   "%p_0324_2_i = phi i16 [ %corHelperQNeg_V_7_i, %.preheader.0.i ], [ 0, %._crit_edge191 ]" [correlator.cpp:268->correlator.cpp:90]
ST_5 : Operation 121 [1/1] (0.00ns)   --->   "%p_0320_2_i = phi i16 [ %corHelperQPos_V_i, %.preheader.0.i ], [ 0, %._crit_edge191 ]" [correlator.cpp:265->correlator.cpp:90]
ST_5 : Operation 122 [1/1] (1.49ns)   --->   "%tmp_4_i = icmp sgt i16 %p_0332_2_i, %p_0336_2_i" [correlator.cpp:425->correlator.cpp:90]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 123 [1/1] (1.48ns)   --->   "%resi_V = sub i16 %p_0332_2_i, %p_0336_2_i" [correlator.cpp:426->correlator.cpp:90]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 124 [1/1] (1.48ns)   --->   "%resi_V_1 = sub i16 %p_0336_2_i, %p_0332_2_i" [correlator.cpp:428->correlator.cpp:90]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 125 [1/1] (0.84ns)   --->   "%resi_V_2 = select i1 %tmp_4_i, i16 %resi_V, i16 %resi_V_1" [correlator.cpp:425->correlator.cpp:90]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.84> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 126 [1/1] (1.48ns)   --->   "%resq_V = sub i16 %p_0320_2_i, %p_0324_2_i" [correlator.cpp:433->correlator.cpp:90]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 127 [1/1] (1.48ns)   --->   "%resq_V_1 = sub i16 %p_0324_2_i, %p_0320_2_i" [correlator.cpp:435->correlator.cpp:90]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 128 [1/1] (0.84ns)   --->   "%resq_V_2 = select i1 %tmp_4_i, i16 %resq_V, i16 %resq_V_1" [correlator.cpp:432->correlator.cpp:90]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.84> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

 <State 6> : 3.49ns
ST_6 : Operation 129 [3/3] (3.49ns)   --->   "%resi_V_3 = mul i16 %resi_V_2, %resi_V_2" [correlator.cpp:438->correlator.cpp:90]   --->   Core 61 'DSP48' <Latency = 2> <II = 1> <Delay = 3.49> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 130 [3/3] (3.49ns)   --->   "%resq_V_3 = mul i16 %resq_V_2, %resq_V_2" [correlator.cpp:439->correlator.cpp:90]   --->   Core 61 'DSP48' <Latency = 2> <II = 1> <Delay = 3.49> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

 <State 7> : 3.49ns
ST_7 : Operation 131 [2/3] (3.49ns)   --->   "%resi_V_3 = mul i16 %resi_V_2, %resi_V_2" [correlator.cpp:438->correlator.cpp:90]   --->   Core 61 'DSP48' <Latency = 2> <II = 1> <Delay = 3.49> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_7 : Operation 132 [2/3] (3.49ns)   --->   "%resq_V_3 = mul i16 %resq_V_2, %resq_V_2" [correlator.cpp:439->correlator.cpp:90]   --->   Core 61 'DSP48' <Latency = 2> <II = 1> <Delay = 3.49> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

 <State 8> : 0.00ns
ST_8 : Operation 133 [1/3] (0.00ns)   --->   "%resi_V_3 = mul i16 %resi_V_2, %resi_V_2" [correlator.cpp:438->correlator.cpp:90]   --->   Core 61 'DSP48' <Latency = 2> <II = 1> <Delay = 3.49> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_8 : Operation 134 [1/3] (0.00ns)   --->   "%resq_V_3 = mul i16 %resq_V_2, %resq_V_2" [correlator.cpp:439->correlator.cpp:90]   --->   Core 61 'DSP48' <Latency = 2> <II = 1> <Delay = 3.49> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

 <State 9> : 1.55ns
ST_9 : Operation 135 [1/1] (0.00ns)   --->   "%p_Result_s = call i32 @_ssdm_op_BitConcatenate.i32.i16.i16(i16 %resq_V_3, i16 %resi_V_3)" [correlator.cpp:441->correlator.cpp:90]
ST_9 : Operation 136 [1/1] (1.54ns)   --->   "%tmp_5 = icmp eq i32 %p_Result_s, 0" [correlator.cpp:100]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 137 [1/1] (0.00ns)   --->   "br i1 %tmp_5, label %2, label %1" [correlator.cpp:100]

 <State 10> : 0.00ns
ST_10 : Operation 138 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i32P.i1P(i32* %o_data_V_data_V, i1* %o_data_V_last_V, i32 %p_Result_s, i1 %tmp_last_V)" [correlator.cpp:102]   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_10 : Operation 139 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i32P.i1P(i32* %o_data_V_data_V, i1* %o_data_V_last_V, i32 0, i1 %tmp_last_V)" [correlator.cpp:106]   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >

 <State 11> : 2.85ns
ST_11 : Operation 140 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %i_data_V_data_V), !map !93"
ST_11 : Operation 141 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %i_data_V_last_V), !map !97"
ST_11 : Operation 142 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %o_data_V_data_V), !map !101"
ST_11 : Operation 143 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %o_data_V_last_V), !map !105"
ST_11 : Operation 144 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([13 x i8]* @correlateTop_str) nounwind"
ST_11 : Operation 145 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [13 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [correlator.cpp:13]
ST_11 : Operation 146 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %o_data_V_data_V, i1* %o_data_V_last_V, [5 x i8]* @p_str3, i32 1, i32 1, [5 x i8]* @p_str4, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [correlator.cpp:14]
ST_11 : Operation 147 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %i_data_V_data_V, i1* %i_data_V_last_V, [5 x i8]* @p_str3, i32 1, i32 1, [5 x i8]* @p_str4, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [correlator.cpp:15]
ST_11 : Operation 148 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str2) nounwind" [correlator.cpp:17]
ST_11 : Operation 149 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecReset(i16* @newVali_V, i32 1, [1 x i8]* @p_str2) nounwind" [correlator.cpp:43]
ST_11 : Operation 150 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecReset(i16* @newValq_V, i32 1, [1 x i8]* @p_str2) nounwind" [correlator.cpp:46]
ST_11 : Operation 151 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecReset(i32* @loadCount_V, i32 1, [1 x i8]* @p_str2) nounwind" [correlator.cpp:53]
ST_11 : Operation 152 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecReset(i4* @phaseClass_V, i32 1, [1 x i8]* @p_str2) nounwind" [correlator.cpp:58]
ST_11 : Operation 153 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecReset(i1* @currentState, i32 1, [1 x i8]* @p_str2) nounwind" [correlator.cpp:64]
ST_11 : Operation 154 [1/1] (1.06ns)   --->   "store i32 0, i32* @loadCount_V, align 4" [correlator.cpp:73]
ST_11 : Operation 155 [1/1] (0.00ns)   --->   "br label %._crit_edge190" [correlator.cpp:77]
ST_11 : Operation 156 [1/1] (0.00ns)   --->   "%loadCount_V_load = load i32* @loadCount_V, align 4" [correlator.cpp:93]
ST_11 : Operation 157 [1/1] (1.78ns)   --->   "%tmp_2 = add i32 %loadCount_V_load, 1" [correlator.cpp:93]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 158 [1/1] (1.06ns)   --->   "store i32 %tmp_2, i32* @loadCount_V, align 4" [correlator.cpp:93]
ST_11 : Operation 159 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i32P.i1P(i32* %o_data_V_data_V, i1* %o_data_V_last_V, i32 %p_Result_s, i1 %tmp_last_V)" [correlator.cpp:102]   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_11 : Operation 160 [1/1] (0.00ns)   --->   "br label %3" [correlator.cpp:104]
ST_11 : Operation 161 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i32P.i1P(i32* %o_data_V_data_V, i1* %o_data_V_last_V, i32 0, i1 %tmp_last_V)" [correlator.cpp:106]   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_11 : Operation 162 [1/1] (0.00ns)   --->   "br label %3"
ST_11 : Operation 163 [1/1] (0.00ns)   --->   "br label %._crit_edge190" [correlator.cpp:113]
ST_11 : Operation 164 [1/1] (0.00ns)   --->   "ret void" [correlator.cpp:116]


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 5ns, clock uncertainty: 0.625ns.

 <State 1>: 0.479ns
The critical path consists of the following:
	'load' operation ('currentState_load', correlator.cpp:64) on static variable 'currentState' [53]  (0 ns)
	blocking operation 0.479 ns on control path)

 <State 2>: 2.54ns
The critical path consists of the following:
	axis read on port 'i_data_V_data_V' (correlator.cpp:79) [62]  (0 ns)
	'add' operation ('tmp16', correlator.cpp:267->correlator.cpp:90) [148]  (0 ns)
	'add' operation ('tmp15', correlator.cpp:267->correlator.cpp:90) [149]  (2.54 ns)

 <State 3>: 4.03ns
The critical path consists of the following:
	'load' operation ('cor_phaseClass0i_V_5', correlator.cpp:123->correlator.cpp:89) on static variable 'cor_phaseClass0i_V_5' [106]  (0 ns)
	'add' operation ('tmp4', correlator.cpp:264->correlator.cpp:90) [135]  (1.49 ns)
	'add' operation ('tmp2', correlator.cpp:264->correlator.cpp:90) [136]  (2.54 ns)

 <State 4>: 3.6ns
The critical path consists of the following:
	'add' operation ('tmp', correlator.cpp:264->correlator.cpp:90) [133]  (0 ns)
	'add' operation ('corHelperIPos_V_i', correlator.cpp:264->correlator.cpp:90) [137]  (2.54 ns)
	multiplexor before 'phi' operation ('p_0336_2_i', correlator.cpp:267->correlator.cpp:90) with incoming values : ('corHelperINeg_V_7_i', correlator.cpp:267->correlator.cpp:90) [162]  (1.06 ns)

 <State 5>: 2.34ns
The critical path consists of the following:
	'phi' operation ('p_0336_2_i', correlator.cpp:267->correlator.cpp:90) with incoming values : ('corHelperINeg_V_7_i', correlator.cpp:267->correlator.cpp:90) [162]  (0 ns)
	'icmp' operation ('tmp_4_i', correlator.cpp:425->correlator.cpp:90) [166]  (1.5 ns)
	'select' operation ('resi.V', correlator.cpp:425->correlator.cpp:90) [169]  (0.84 ns)

 <State 6>: 3.49ns
The critical path consists of the following:
	'mul' operation ('resi.V', correlator.cpp:438->correlator.cpp:90) [173]  (3.49 ns)

 <State 7>: 3.49ns
The critical path consists of the following:
	'mul' operation ('resi.V', correlator.cpp:438->correlator.cpp:90) [173]  (3.49 ns)

 <State 8>: 0ns
The critical path consists of the following:

 <State 9>: 1.55ns
The critical path consists of the following:
	'icmp' operation ('tmp_5', correlator.cpp:100) [181]  (1.55 ns)

 <State 10>: 0ns
The critical path consists of the following:

 <State 11>: 2.85ns
The critical path consists of the following:
	'load' operation ('loadCount_V_load', correlator.cpp:93) on static variable 'loadCount_V' [176]  (0 ns)
	'add' operation ('tmp_2', correlator.cpp:93) [177]  (1.78 ns)
	'store' operation (correlator.cpp:93) of variable 'tmp_2', correlator.cpp:93 on static variable 'loadCount_V' [178]  (1.06 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
