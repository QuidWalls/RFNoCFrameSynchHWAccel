// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _ItoZero_HH_
#define _ItoZero_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "ItoZero_data_reg_bkb.h"

namespace ap_rtl {

struct ItoZero : public sc_module {
    // Port declarations 11
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_lv<32> > i_data_TDATA;
    sc_in< sc_logic > i_data_TVALID;
    sc_out< sc_logic > i_data_TREADY;
    sc_in< sc_lv<1> > i_data_TLAST;
    sc_out< sc_lv<32> > o_data_TDATA;
    sc_out< sc_logic > o_data_TVALID;
    sc_in< sc_logic > o_data_TREADY;
    sc_out< sc_lv<1> > o_data_TLAST;
    sc_in< sc_lv<1> > start_V;


    // Module declarations
    ItoZero(sc_module_name name);
    SC_HAS_PROCESS(ItoZero);

    ~ItoZero();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    ItoZero_data_reg_bkb* data_reg_q_V_U;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_lv<32> > o_data_V_data_V_1_data_out;
    sc_signal< sc_logic > o_data_V_data_V_1_vld_in;
    sc_signal< sc_logic > o_data_V_data_V_1_vld_out;
    sc_signal< sc_logic > o_data_V_data_V_1_ack_in;
    sc_signal< sc_logic > o_data_V_data_V_1_ack_out;
    sc_signal< sc_lv<32> > o_data_V_data_V_1_payload_A;
    sc_signal< sc_lv<32> > o_data_V_data_V_1_payload_B;
    sc_signal< sc_logic > o_data_V_data_V_1_sel_rd;
    sc_signal< sc_logic > o_data_V_data_V_1_sel_wr;
    sc_signal< sc_logic > o_data_V_data_V_1_sel;
    sc_signal< sc_logic > o_data_V_data_V_1_load_A;
    sc_signal< sc_logic > o_data_V_data_V_1_load_B;
    sc_signal< sc_lv<2> > o_data_V_data_V_1_state;
    sc_signal< sc_logic > o_data_V_data_V_1_state_cmp_full;
    sc_signal< sc_lv<1> > o_data_V_last_V_1_data_out;
    sc_signal< sc_logic > o_data_V_last_V_1_vld_in;
    sc_signal< sc_logic > o_data_V_last_V_1_vld_out;
    sc_signal< sc_logic > o_data_V_last_V_1_ack_in;
    sc_signal< sc_logic > o_data_V_last_V_1_ack_out;
    sc_signal< sc_logic > o_data_V_last_V_1_sel_rd;
    sc_signal< sc_logic > o_data_V_last_V_1_sel;
    sc_signal< sc_lv<2> > o_data_V_last_V_1_state;
    sc_signal< sc_lv<1> > currentwrState;
    sc_signal< sc_lv<24> > data_valid_reg_V;
    sc_signal< sc_lv<1> > data_reg_i_V_12;
    sc_signal< sc_lv<1> > currentState;
    sc_signal< sc_lv<1> > firstLoad_V;
    sc_signal< sc_lv<4> > data_reg_q_V_address0;
    sc_signal< sc_logic > data_reg_q_V_ce0;
    sc_signal< sc_logic > data_reg_q_V_we0;
    sc_signal< sc_lv<16> > data_reg_q_V_d0;
    sc_signal< sc_lv<16> > data_reg_q_V_q0;
    sc_signal< sc_lv<4> > data_reg_q_V_address1;
    sc_signal< sc_logic > data_reg_q_V_ce1;
    sc_signal< sc_logic > data_reg_q_V_we1;
    sc_signal< sc_lv<16> > data_reg_q_V_d1;
    sc_signal< sc_lv<16> > data_reg_q_V_q1;
    sc_signal< sc_logic > i_data_TDATA_blk_n;
    sc_signal< sc_lv<16> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_lv<1> > currentState_load_reg_473;
    sc_signal< sc_lv<1> > tmp_reg_481;
    sc_signal< sc_logic > o_data_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > currentwrState_load_reg_451;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<16> > reg_212;
    sc_signal< bool > ap_block_state2_io;
    sc_signal< sc_lv<1> > firstLoad_V_load_reg_477;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<16> > reg_219;
    sc_signal< bool > ap_block_state3_io;
    sc_signal< sc_lv<1> > start_V_read_reg_447;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<1> > currentwrState_load_load_fu_226_p1;
    sc_signal< sc_lv<24> > p_Val2_s_reg_455;
    sc_signal< sc_lv<23> > tmp_3_fu_254_p1;
    sc_signal< sc_lv<23> > tmp_3_reg_463;
    sc_signal< sc_lv<24> > p_Result_4_fu_258_p5;
    sc_signal< sc_lv<24> > p_Result_4_reg_468;
    sc_signal< sc_lv<1> > currentState_load_load_fu_270_p1;
    sc_signal< sc_lv<1> > tmp_nbreadreq_fu_148_p4;
    sc_signal< sc_lv<32> > p_Result_2_fu_374_p1;
    sc_signal< sc_lv<16> > data_reg_q_V_load_3_reg_490;
    sc_signal< sc_lv<16> > data_reg_q_V_load_4_reg_495;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<16> > data_reg_q_V_load_5_reg_500;
    sc_signal< sc_lv<16> > data_reg_q_V_load_6_reg_505;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<16> > data_reg_q_V_load_7_reg_510;
    sc_signal< sc_lv<16> > data_reg_q_V_load_8_reg_515;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<16> > data_reg_q_V_load_9_reg_520;
    sc_signal< sc_lv<16> > data_reg_q_V_load_10_reg_525;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<16> > data_reg_q_V_load_11_reg_530;
    sc_signal< sc_lv<16> > data_reg_q_V_load_12_reg_535;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<16> > data_reg_q_V_load_13_reg_540;
    sc_signal< sc_lv<24> > p_Result_s_fu_397_p2;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_lv<24> > ap_phi_mux_data_valid_reg_V_new_1_phi_fu_204_p6;
    sc_signal< sc_lv<24> > data_valid_reg_V_new_1_reg_201;
    sc_signal< sc_lv<24> > p_Result_1_fu_427_p3;
    sc_signal< bool > ap_predicate_op128_read_state16;
    sc_signal< bool > ap_block_state16;
    sc_signal< sc_lv<1> > tmp_2_fu_234_p3;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_lv<16> > tmp_5_fu_406_p1;
    sc_signal< sc_lv<17> > tmp_1_fu_366_p3;
    sc_signal< sc_lv<16> > ap_NS_fsm;
    sc_signal< bool > ap_condition_213;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<16> ap_ST_fsm_state1;
    static const sc_lv<16> ap_ST_fsm_state2;
    static const sc_lv<16> ap_ST_fsm_state3;
    static const sc_lv<16> ap_ST_fsm_state4;
    static const sc_lv<16> ap_ST_fsm_state5;
    static const sc_lv<16> ap_ST_fsm_state6;
    static const sc_lv<16> ap_ST_fsm_state7;
    static const sc_lv<16> ap_ST_fsm_state8;
    static const sc_lv<16> ap_ST_fsm_state9;
    static const sc_lv<16> ap_ST_fsm_state10;
    static const sc_lv<16> ap_ST_fsm_state11;
    static const sc_lv<16> ap_ST_fsm_state12;
    static const sc_lv<16> ap_ST_fsm_state13;
    static const sc_lv<16> ap_ST_fsm_state14;
    static const sc_lv<16> ap_ST_fsm_state15;
    static const sc_lv<16> ap_ST_fsm_state16;
    static const bool ap_const_boolean_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<24> ap_const_lv24_0;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<4> ap_const_lv4_C;
    static const sc_lv<4> ap_const_lv4_E;
    static const sc_lv<4> ap_const_lv4_D;
    static const sc_lv<4> ap_const_lv4_B;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<4> ap_const_lv4_9;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_7;
    static const sc_lv<4> ap_const_lv4_6;
    static const sc_lv<4> ap_const_lv4_5;
    static const sc_lv<4> ap_const_lv4_4;
    static const sc_lv<4> ap_const_lv4_3;
    static const sc_lv<4> ap_const_lv4_2;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<24> ap_const_lv24_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_state16();
    void thread_ap_block_state2_io();
    void thread_ap_block_state3_io();
    void thread_ap_condition_213();
    void thread_ap_phi_mux_data_valid_reg_V_new_1_phi_fu_204_p6();
    void thread_ap_predicate_op128_read_state16();
    void thread_ap_rst_n_inv();
    void thread_currentState_load_load_fu_270_p1();
    void thread_currentwrState_load_load_fu_226_p1();
    void thread_data_reg_q_V_address0();
    void thread_data_reg_q_V_address1();
    void thread_data_reg_q_V_ce0();
    void thread_data_reg_q_V_ce1();
    void thread_data_reg_q_V_d0();
    void thread_data_reg_q_V_d1();
    void thread_data_reg_q_V_we0();
    void thread_data_reg_q_V_we1();
    void thread_i_data_TDATA_blk_n();
    void thread_i_data_TREADY();
    void thread_o_data_TDATA();
    void thread_o_data_TDATA_blk_n();
    void thread_o_data_TLAST();
    void thread_o_data_TVALID();
    void thread_o_data_V_data_V_1_ack_in();
    void thread_o_data_V_data_V_1_ack_out();
    void thread_o_data_V_data_V_1_data_out();
    void thread_o_data_V_data_V_1_load_A();
    void thread_o_data_V_data_V_1_load_B();
    void thread_o_data_V_data_V_1_sel();
    void thread_o_data_V_data_V_1_state_cmp_full();
    void thread_o_data_V_data_V_1_vld_in();
    void thread_o_data_V_data_V_1_vld_out();
    void thread_o_data_V_last_V_1_ack_in();
    void thread_o_data_V_last_V_1_ack_out();
    void thread_o_data_V_last_V_1_data_out();
    void thread_o_data_V_last_V_1_sel();
    void thread_o_data_V_last_V_1_vld_in();
    void thread_o_data_V_last_V_1_vld_out();
    void thread_p_Result_1_fu_427_p3();
    void thread_p_Result_2_fu_374_p1();
    void thread_p_Result_4_fu_258_p5();
    void thread_p_Result_s_fu_397_p2();
    void thread_tmp_1_fu_366_p3();
    void thread_tmp_2_fu_234_p3();
    void thread_tmp_3_fu_254_p1();
    void thread_tmp_5_fu_406_p1();
    void thread_tmp_nbreadreq_fu_148_p4();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
