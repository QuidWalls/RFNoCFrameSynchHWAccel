-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity ItoZero is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    i_data_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    i_data_TVALID : IN STD_LOGIC;
    i_data_TREADY : OUT STD_LOGIC;
    i_data_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    o_data_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    o_data_TVALID : OUT STD_LOGIC;
    o_data_TREADY : IN STD_LOGIC;
    o_data_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    start_V : IN STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of ItoZero is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "ItoZero,hls_ip_2017_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7k160tfbg484-1,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=1.425000,HLS_SYN_LAT=15,HLS_SYN_TPT=16,HLS_SYN_MEM=1,HLS_SYN_DSP=0,HLS_SYN_FF=455,HLS_SYN_LUT=590}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (15 downto 0) := "0000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (15 downto 0) := "0000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (15 downto 0) := "0000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (15 downto 0) := "0000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (15 downto 0) := "0000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (15 downto 0) := "0000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (15 downto 0) := "0001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (15 downto 0) := "0010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (15 downto 0) := "0100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (15 downto 0) := "1000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv24_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv24_1 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000001";

    signal ap_rst_n_inv : STD_LOGIC;
    signal o_data_V_data_V_1_data_in : STD_LOGIC_VECTOR (31 downto 0);
    signal o_data_V_data_V_1_data_out : STD_LOGIC_VECTOR (31 downto 0);
    signal o_data_V_data_V_1_vld_in : STD_LOGIC;
    signal o_data_V_data_V_1_vld_out : STD_LOGIC;
    signal o_data_V_data_V_1_ack_in : STD_LOGIC;
    signal o_data_V_data_V_1_ack_out : STD_LOGIC;
    signal o_data_V_data_V_1_payload_A : STD_LOGIC_VECTOR (31 downto 0);
    signal o_data_V_data_V_1_payload_B : STD_LOGIC_VECTOR (31 downto 0);
    signal o_data_V_data_V_1_sel_rd : STD_LOGIC := '0';
    signal o_data_V_data_V_1_sel_wr : STD_LOGIC := '0';
    signal o_data_V_data_V_1_sel : STD_LOGIC;
    signal o_data_V_data_V_1_load_A : STD_LOGIC;
    signal o_data_V_data_V_1_load_B : STD_LOGIC;
    signal o_data_V_data_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal o_data_V_data_V_1_state_cmp_full : STD_LOGIC;
    signal o_data_V_last_V_1_data_in : STD_LOGIC_VECTOR (0 downto 0);
    signal o_data_V_last_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal o_data_V_last_V_1_vld_in : STD_LOGIC;
    signal o_data_V_last_V_1_vld_out : STD_LOGIC;
    signal o_data_V_last_V_1_ack_in : STD_LOGIC;
    signal o_data_V_last_V_1_ack_out : STD_LOGIC;
    signal o_data_V_last_V_1_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal o_data_V_last_V_1_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal o_data_V_last_V_1_sel_rd : STD_LOGIC := '0';
    signal o_data_V_last_V_1_sel_wr : STD_LOGIC := '0';
    signal o_data_V_last_V_1_sel : STD_LOGIC;
    signal o_data_V_last_V_1_load_A : STD_LOGIC;
    signal o_data_V_last_V_1_load_B : STD_LOGIC;
    signal o_data_V_last_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal o_data_V_last_V_1_state_cmp_full : STD_LOGIC;
    signal currentwrState : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal data_valid_reg_V : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    signal data_reg_i_V_12 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal currentState : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal data_reg_q_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal data_reg_q_V_ce0 : STD_LOGIC;
    signal data_reg_q_V_we0 : STD_LOGIC;
    signal data_reg_q_V_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_reg_q_V_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_reg_q_V_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal data_reg_q_V_ce1 : STD_LOGIC;
    signal data_reg_q_V_we1 : STD_LOGIC;
    signal data_reg_q_V_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_reg_q_V_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_data_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal currentState_load_reg_466 : STD_LOGIC_VECTOR (0 downto 0);
    signal start_V_read_reg_439 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal tmp_reg_470 : STD_LOGIC_VECTOR (0 downto 0);
    signal o_data_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal currentwrState_load_reg_443 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal reg_227 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state2_io : BOOLEAN;
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_predicate_op77_read_state3 : BOOLEAN;
    signal ap_block_state3 : BOOLEAN;
    signal ap_block_state3_io : BOOLEAN;
    signal ap_predicate_op128_read_state15 : BOOLEAN;
    signal ap_block_state15 : BOOLEAN;
    signal ap_block_state15_io : BOOLEAN;
    signal reg_239 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal currentwrState_load_load_fu_246_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_s_reg_447 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_4_fu_261_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_4_reg_456 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Result_3_fu_265_p5 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Result_3_reg_461 : STD_LOGIC_VECTOR (23 downto 0);
    signal currentState_load_load_fu_277_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_nbreadreq_fu_146_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_2_fu_377_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_reg_q_V_load_3_reg_484 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_reg_q_V_load_4_reg_489 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_predicate_op85_write_state4 : BOOLEAN;
    signal ap_block_state4_io : BOOLEAN;
    signal data_reg_q_V_load_5_reg_494 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_reg_q_V_load_6_reg_499 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal data_reg_q_V_load_7_reg_504 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_reg_q_V_load_8_reg_509 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal data_reg_q_V_load_9_reg_514 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_reg_q_V_load_10_reg_519 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal data_reg_q_V_load_11_reg_524 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_reg_q_V_load_12_reg_529 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal data_reg_q_V_load_13_reg_534 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_1_fu_400_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_5_fu_405_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_5_reg_549 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_data_valid_reg_V_new_1_phi_fu_202_p6 : STD_LOGIC_VECTOR (23 downto 0);
    signal data_valid_reg_V_new_1_reg_199 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Result_s_fu_425_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_block_state16 : BOOLEAN;
    signal ap_predicate_op139_write_state16 : BOOLEAN;
    signal ap_block_state16_io : BOOLEAN;
    signal grp_fu_210_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal grp_fu_210_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_1_fu_369_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_condition_252 : BOOLEAN;

    component ItoZero_data_reg_bkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        address1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (15 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    data_reg_q_V_U : component ItoZero_data_reg_bkb
    generic map (
        DataWidth => 16,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => data_reg_q_V_address0,
        ce0 => data_reg_q_V_ce0,
        we0 => data_reg_q_V_we0,
        d0 => data_reg_q_V_d0,
        q0 => data_reg_q_V_q0,
        address1 => data_reg_q_V_address1,
        ce1 => data_reg_q_V_ce1,
        we1 => data_reg_q_V_we1,
        d1 => data_reg_q_V_d1,
        q1 => data_reg_q_V_q1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    currentState_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                currentState <= ap_const_lv1_0;
            else
                if ((not(((ap_const_boolean_1 = ap_block_state3_io) or ((ap_predicate_op77_read_state3 = ap_const_boolean_1) and (i_data_TVALID = ap_const_logic_0)))) and (ap_predicate_op77_read_state3 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                    currentState <= ap_const_lv1_1;
                end if; 
            end if;
        end if;
    end process;


    currentwrState_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                currentwrState <= ap_const_lv1_0;
            else
                if ((not(((ap_const_boolean_1 = ap_block_state15_io) or ((ap_predicate_op128_read_state15 = ap_const_boolean_1) and (i_data_TVALID = ap_const_logic_0)))) and (currentwrState_load_reg_443 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                    currentwrState <= grp_fu_210_p1(11 downto 11);
                elsif (((grp_fu_210_p3 = ap_const_lv1_1) and (currentwrState_load_load_fu_246_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    currentwrState <= ap_const_lv1_1;
                end if; 
            end if;
        end if;
    end process;

    data_reg_i_V_12 <= ap_const_lv1_0;

    data_valid_reg_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                data_valid_reg_V <= ap_const_lv24_0;
            else
                if ((not(((ap_const_boolean_1 = ap_block_state16_io) or (o_data_V_data_V_1_ack_in = ap_const_logic_0) or (o_data_V_last_V_1_ack_in = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                    data_valid_reg_V <= ap_phi_mux_data_valid_reg_V_new_1_phi_fu_202_p6;
                end if; 
            end if;
        end if;
    end process;


    o_data_V_data_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                o_data_V_data_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((o_data_V_data_V_1_ack_out = ap_const_logic_1) and (o_data_V_data_V_1_vld_out = ap_const_logic_1))) then 
                                        o_data_V_data_V_1_sel_rd <= not(o_data_V_data_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    o_data_V_data_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                o_data_V_data_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((o_data_V_data_V_1_ack_in = ap_const_logic_1) and (o_data_V_data_V_1_vld_in = ap_const_logic_1))) then 
                                        o_data_V_data_V_1_sel_wr <= not(o_data_V_data_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    o_data_V_data_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                o_data_V_data_V_1_state <= ap_const_lv2_0;
            else
                if ((((o_data_V_data_V_1_state = ap_const_lv2_2) and (o_data_V_data_V_1_vld_in = ap_const_logic_0)) or ((o_data_V_data_V_1_state = ap_const_lv2_3) and (o_data_V_data_V_1_vld_in = ap_const_logic_0) and (o_data_V_data_V_1_ack_out = ap_const_logic_1)))) then 
                    o_data_V_data_V_1_state <= ap_const_lv2_2;
                elsif ((((o_data_V_data_V_1_state = ap_const_lv2_1) and (o_data_V_data_V_1_ack_out = ap_const_logic_0)) or ((o_data_V_data_V_1_state = ap_const_lv2_3) and (o_data_V_data_V_1_ack_out = ap_const_logic_0) and (o_data_V_data_V_1_vld_in = ap_const_logic_1)))) then 
                    o_data_V_data_V_1_state <= ap_const_lv2_1;
                elsif (((not(((o_data_V_data_V_1_vld_in = ap_const_logic_0) and (o_data_V_data_V_1_ack_out = ap_const_logic_1))) and not(((o_data_V_data_V_1_ack_out = ap_const_logic_0) and (o_data_V_data_V_1_vld_in = ap_const_logic_1))) and (o_data_V_data_V_1_state = ap_const_lv2_3)) or ((o_data_V_data_V_1_state = ap_const_lv2_1) and (o_data_V_data_V_1_ack_out = ap_const_logic_1)) or ((o_data_V_data_V_1_state = ap_const_lv2_2) and (o_data_V_data_V_1_vld_in = ap_const_logic_1)))) then 
                    o_data_V_data_V_1_state <= ap_const_lv2_3;
                else 
                    o_data_V_data_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    o_data_V_last_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                o_data_V_last_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((o_data_V_last_V_1_ack_out = ap_const_logic_1) and (o_data_V_last_V_1_vld_out = ap_const_logic_1))) then 
                                        o_data_V_last_V_1_sel_rd <= not(o_data_V_last_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    o_data_V_last_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                o_data_V_last_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((o_data_V_last_V_1_ack_in = ap_const_logic_1) and (o_data_V_last_V_1_vld_in = ap_const_logic_1))) then 
                                        o_data_V_last_V_1_sel_wr <= not(o_data_V_last_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    o_data_V_last_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                o_data_V_last_V_1_state <= ap_const_lv2_0;
            else
                if ((((o_data_V_last_V_1_state = ap_const_lv2_2) and (o_data_V_last_V_1_vld_in = ap_const_logic_0)) or ((o_data_V_last_V_1_state = ap_const_lv2_3) and (o_data_V_last_V_1_vld_in = ap_const_logic_0) and (o_data_V_last_V_1_ack_out = ap_const_logic_1)))) then 
                    o_data_V_last_V_1_state <= ap_const_lv2_2;
                elsif ((((o_data_V_last_V_1_state = ap_const_lv2_1) and (o_data_V_last_V_1_ack_out = ap_const_logic_0)) or ((o_data_V_last_V_1_state = ap_const_lv2_3) and (o_data_V_last_V_1_ack_out = ap_const_logic_0) and (o_data_V_last_V_1_vld_in = ap_const_logic_1)))) then 
                    o_data_V_last_V_1_state <= ap_const_lv2_1;
                elsif (((not(((o_data_V_last_V_1_vld_in = ap_const_logic_0) and (o_data_V_last_V_1_ack_out = ap_const_logic_1))) and not(((o_data_V_last_V_1_ack_out = ap_const_logic_0) and (o_data_V_last_V_1_vld_in = ap_const_logic_1))) and (o_data_V_last_V_1_state = ap_const_lv2_3)) or ((o_data_V_last_V_1_state = ap_const_lv2_1) and (o_data_V_last_V_1_ack_out = ap_const_logic_1)) or ((o_data_V_last_V_1_state = ap_const_lv2_2) and (o_data_V_last_V_1_vld_in = ap_const_logic_1)))) then 
                    o_data_V_last_V_1_state <= ap_const_lv2_3;
                else 
                    o_data_V_last_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    data_valid_reg_V_new_1_reg_199_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_boolean_1 = ap_block_state15_io) or ((ap_predicate_op128_read_state15 = ap_const_boolean_1) and (i_data_TVALID = ap_const_logic_0)))) and (currentState_load_reg_466 = ap_const_lv1_1) and (tmp_reg_470 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                data_valid_reg_V_new_1_reg_199 <= p_Result_1_fu_400_p2;
            elsif ((not(((ap_const_boolean_1 = ap_block_state16_io) or (o_data_V_data_V_1_ack_in = ap_const_logic_0) or (o_data_V_last_V_1_ack_in = ap_const_logic_0))) and (tmp_reg_470 = ap_const_lv1_1) and (currentState_load_reg_466 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                data_valid_reg_V_new_1_reg_199 <= p_Result_s_fu_425_p3;
            elsif ((not(((ap_const_boolean_1 = ap_block_state15_io) or ((ap_predicate_op128_read_state15 = ap_const_boolean_1) and (i_data_TVALID = ap_const_logic_0)))) and (currentState_load_reg_466 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                data_valid_reg_V_new_1_reg_199 <= p_Result_3_reg_461;
            end if; 
        end if;
    end process;

    reg_227_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_470 = ap_const_lv1_1) and (currentState_load_reg_466 = ap_const_lv1_1))) then
                if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                    reg_227 <= data_reg_q_V_q0;
                elsif (((ap_const_boolean_0 = ap_block_state2_io) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    reg_227 <= data_reg_q_V_q1;
                end if;
            end if; 
        end if;
    end process;

    reg_239_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_470 = ap_const_lv1_1) and (currentState_load_reg_466 = ap_const_lv1_1))) then
                if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                    reg_239 <= data_reg_q_V_q1;
                elsif ((ap_const_boolean_1 = ap_condition_252)) then 
                    reg_239 <= data_reg_q_V_q0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                currentState_load_reg_466 <= currentState;
                currentwrState_load_reg_443 <= currentwrState;
                p_Result_3_reg_461 <= p_Result_3_fu_265_p5;
                p_Val2_s_reg_447 <= data_valid_reg_V;
                start_V_read_reg_439 <= start_V;
                tmp_4_reg_456 <= tmp_4_fu_261_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_470 = ap_const_lv1_1) and (currentState_load_reg_466 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                data_reg_q_V_load_10_reg_519 <= data_reg_q_V_q0;
                data_reg_q_V_load_11_reg_524 <= data_reg_q_V_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_470 = ap_const_lv1_1) and (currentState_load_reg_466 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                data_reg_q_V_load_12_reg_529 <= data_reg_q_V_q0;
                data_reg_q_V_load_13_reg_534 <= data_reg_q_V_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_boolean_1 = ap_block_state3_io) or ((ap_predicate_op77_read_state3 = ap_const_boolean_1) and (i_data_TVALID = ap_const_logic_0)))) and (tmp_reg_470 = ap_const_lv1_1) and (currentState_load_reg_466 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                data_reg_q_V_load_3_reg_484 <= data_reg_q_V_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_470 = ap_const_lv1_1) and (currentState_load_reg_466 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_state4_io) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                data_reg_q_V_load_4_reg_489 <= data_reg_q_V_q0;
                data_reg_q_V_load_5_reg_494 <= data_reg_q_V_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_470 = ap_const_lv1_1) and (currentState_load_reg_466 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                data_reg_q_V_load_6_reg_499 <= data_reg_q_V_q0;
                data_reg_q_V_load_7_reg_504 <= data_reg_q_V_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_470 = ap_const_lv1_1) and (currentState_load_reg_466 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                data_reg_q_V_load_8_reg_509 <= data_reg_q_V_q0;
                data_reg_q_V_load_9_reg_514 <= data_reg_q_V_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((o_data_V_data_V_1_load_A = ap_const_logic_1)) then
                o_data_V_data_V_1_payload_A <= o_data_V_data_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((o_data_V_data_V_1_load_B = ap_const_logic_1)) then
                o_data_V_data_V_1_payload_B <= o_data_V_data_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((o_data_V_last_V_1_load_A = ap_const_logic_1)) then
                o_data_V_last_V_1_payload_A <= o_data_V_last_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((o_data_V_last_V_1_load_B = ap_const_logic_1)) then
                o_data_V_last_V_1_payload_B <= o_data_V_last_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_boolean_1 = ap_block_state15_io) or ((ap_predicate_op128_read_state15 = ap_const_boolean_1) and (i_data_TVALID = ap_const_logic_0)))) and (ap_predicate_op128_read_state15 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                tmp_5_reg_549 <= tmp_5_fu_405_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((currentState_load_load_fu_277_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                tmp_reg_470 <= tmp_nbreadreq_fu_146_p4;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (i_data_TVALID, o_data_V_data_V_1_ack_in, o_data_V_last_V_1_ack_in, ap_CS_fsm, ap_CS_fsm_state3, ap_CS_fsm_state15, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state16, ap_block_state2_io, ap_predicate_op77_read_state3, ap_block_state3_io, ap_predicate_op128_read_state15, ap_block_state15_io, ap_block_state4_io, ap_block_state16_io)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_state2 => 
                if (((ap_const_boolean_0 = ap_block_state2_io) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if ((not(((ap_const_boolean_1 = ap_block_state3_io) or ((ap_predicate_op77_read_state3 = ap_const_boolean_1) and (i_data_TVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (((ap_const_boolean_0 = ap_block_state4_io) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                if ((not(((ap_const_boolean_1 = ap_block_state15_io) or ((ap_predicate_op128_read_state15 = ap_const_boolean_1) and (i_data_TVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state16 => 
                if ((not(((ap_const_boolean_1 = ap_block_state16_io) or (o_data_V_data_V_1_ack_in = ap_const_logic_0) or (o_data_V_last_V_1_ack_in = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_block_state15_assign_proc : process(i_data_TVALID, ap_predicate_op128_read_state15)
    begin
                ap_block_state15 <= ((ap_predicate_op128_read_state15 = ap_const_boolean_1) and (i_data_TVALID = ap_const_logic_0));
    end process;


    ap_block_state15_io_assign_proc : process(o_data_V_data_V_1_ack_in, ap_predicate_op128_read_state15)
    begin
                ap_block_state15_io <= ((ap_predicate_op128_read_state15 = ap_const_boolean_1) and (o_data_V_data_V_1_ack_in = ap_const_logic_0));
    end process;


    ap_block_state16_assign_proc : process(o_data_V_data_V_1_ack_in, o_data_V_last_V_1_ack_in)
    begin
                ap_block_state16 <= ((o_data_V_data_V_1_ack_in = ap_const_logic_0) or (o_data_V_last_V_1_ack_in = ap_const_logic_0));
    end process;


    ap_block_state16_io_assign_proc : process(o_data_V_data_V_1_ack_in, ap_predicate_op139_write_state16)
    begin
                ap_block_state16_io <= ((ap_predicate_op139_write_state16 = ap_const_boolean_1) and (o_data_V_data_V_1_ack_in = ap_const_logic_0));
    end process;


    ap_block_state2_io_assign_proc : process(o_data_V_data_V_1_ack_in, currentwrState_load_reg_443)
    begin
                ap_block_state2_io <= ((currentwrState_load_reg_443 = ap_const_lv1_1) and (o_data_V_data_V_1_ack_in = ap_const_logic_0));
    end process;


    ap_block_state3_assign_proc : process(i_data_TVALID, ap_predicate_op77_read_state3)
    begin
                ap_block_state3 <= ((ap_predicate_op77_read_state3 = ap_const_boolean_1) and (i_data_TVALID = ap_const_logic_0));
    end process;


    ap_block_state3_io_assign_proc : process(o_data_V_data_V_1_ack_in, currentwrState_load_reg_443, ap_predicate_op77_read_state3)
    begin
                ap_block_state3_io <= (((ap_predicate_op77_read_state3 = ap_const_boolean_1) and (o_data_V_data_V_1_ack_in = ap_const_logic_0)) or ((currentwrState_load_reg_443 = ap_const_lv1_1) and (o_data_V_data_V_1_ack_in = ap_const_logic_0)));
    end process;


    ap_block_state4_io_assign_proc : process(o_data_V_data_V_1_ack_in, ap_predicate_op85_write_state4)
    begin
                ap_block_state4_io <= ((ap_predicate_op85_write_state4 = ap_const_boolean_1) and (o_data_V_data_V_1_ack_in = ap_const_logic_0));
    end process;


    ap_condition_252_assign_proc : process(i_data_TVALID, ap_CS_fsm_state3, ap_predicate_op77_read_state3, ap_block_state3_io)
    begin
                ap_condition_252 <= (not(((ap_const_boolean_1 = ap_block_state3_io) or ((ap_predicate_op77_read_state3 = ap_const_boolean_1) and (i_data_TVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state3));
    end process;


    ap_phi_mux_data_valid_reg_V_new_1_phi_fu_202_p6_assign_proc : process(currentState_load_reg_466, tmp_reg_470, ap_CS_fsm_state16, data_valid_reg_V_new_1_reg_199, p_Result_s_fu_425_p3)
    begin
        if (((tmp_reg_470 = ap_const_lv1_1) and (currentState_load_reg_466 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            ap_phi_mux_data_valid_reg_V_new_1_phi_fu_202_p6 <= p_Result_s_fu_425_p3;
        else 
            ap_phi_mux_data_valid_reg_V_new_1_phi_fu_202_p6 <= data_valid_reg_V_new_1_reg_199;
        end if; 
    end process;


    ap_predicate_op128_read_state15_assign_proc : process(currentState_load_reg_466, tmp_reg_470)
    begin
                ap_predicate_op128_read_state15 <= ((tmp_reg_470 = ap_const_lv1_1) and (currentState_load_reg_466 = ap_const_lv1_1));
    end process;


    ap_predicate_op139_write_state16_assign_proc : process(currentState_load_reg_466, tmp_reg_470)
    begin
                ap_predicate_op139_write_state16 <= ((tmp_reg_470 = ap_const_lv1_1) and (currentState_load_reg_466 = ap_const_lv1_1));
    end process;


    ap_predicate_op77_read_state3_assign_proc : process(currentState_load_reg_466, start_V_read_reg_439)
    begin
                ap_predicate_op77_read_state3 <= ((start_V_read_reg_439 = ap_const_lv1_1) and (currentState_load_reg_466 = ap_const_lv1_0));
    end process;


    ap_predicate_op85_write_state4_assign_proc : process(currentState_load_reg_466, start_V_read_reg_439)
    begin
                ap_predicate_op85_write_state4 <= ((start_V_read_reg_439 = ap_const_lv1_1) and (currentState_load_reg_466 = ap_const_lv1_0));
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    currentState_load_load_fu_277_p1 <= currentState;
    currentwrState_load_load_fu_246_p1 <= currentwrState;

    data_reg_q_V_address0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state15, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state16, ap_CS_fsm_state9, ap_CS_fsm_state1, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            data_reg_q_V_address0 <= ap_const_lv4_F;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            data_reg_q_V_address0 <= ap_const_lv4_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            data_reg_q_V_address0 <= ap_const_lv4_3;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            data_reg_q_V_address0 <= ap_const_lv4_5;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            data_reg_q_V_address0 <= ap_const_lv4_7;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            data_reg_q_V_address0 <= ap_const_lv4_9;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            data_reg_q_V_address0 <= ap_const_lv4_B;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            data_reg_q_V_address0 <= ap_const_lv4_D;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            data_reg_q_V_address0 <= ap_const_lv4_C;
        else 
            data_reg_q_V_address0 <= "XXXX";
        end if; 
    end process;


    data_reg_q_V_address1_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state15, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state16, ap_CS_fsm_state9, ap_CS_fsm_state1, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            data_reg_q_V_address1 <= ap_const_lv4_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            data_reg_q_V_address1 <= ap_const_lv4_2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            data_reg_q_V_address1 <= ap_const_lv4_4;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            data_reg_q_V_address1 <= ap_const_lv4_6;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            data_reg_q_V_address1 <= ap_const_lv4_8;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            data_reg_q_V_address1 <= ap_const_lv4_A;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            data_reg_q_V_address1 <= ap_const_lv4_C;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state1) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            data_reg_q_V_address1 <= ap_const_lv4_E;
        else 
            data_reg_q_V_address1 <= "XXXX";
        end if; 
    end process;


    data_reg_q_V_ce0_assign_proc : process(i_data_TVALID, o_data_V_data_V_1_ack_in, o_data_V_last_V_1_ack_in, ap_CS_fsm_state3, ap_CS_fsm_state15, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state16, ap_block_state2_io, ap_CS_fsm_state9, ap_predicate_op77_read_state3, ap_block_state3_io, ap_predicate_op128_read_state15, ap_block_state15_io, ap_CS_fsm_state1, ap_block_state4_io, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_block_state16_io, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state1) or (ap_const_logic_1 = ap_CS_fsm_state9) or (not(((ap_const_boolean_1 = ap_block_state16_io) or (o_data_V_data_V_1_ack_in = ap_const_logic_0) or (o_data_V_last_V_1_ack_in = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state16)) or ((ap_const_boolean_0 = ap_block_state4_io) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((ap_const_boolean_0 = ap_block_state2_io) and (ap_const_logic_1 = ap_CS_fsm_state2)) or (not(((ap_const_boolean_1 = ap_block_state15_io) or ((ap_predicate_op128_read_state15 = ap_const_boolean_1) and (i_data_TVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state15)) or (not(((ap_const_boolean_1 = ap_block_state3_io) or ((ap_predicate_op77_read_state3 = ap_const_boolean_1) and (i_data_TVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            data_reg_q_V_ce0 <= ap_const_logic_1;
        else 
            data_reg_q_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    data_reg_q_V_ce1_assign_proc : process(i_data_TVALID, o_data_V_data_V_1_ack_in, o_data_V_last_V_1_ack_in, ap_CS_fsm_state3, ap_CS_fsm_state15, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state16, ap_block_state2_io, ap_CS_fsm_state9, ap_predicate_op77_read_state3, ap_block_state3_io, ap_predicate_op128_read_state15, ap_block_state15_io, ap_CS_fsm_state1, ap_block_state4_io, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_block_state16_io, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state1) or (ap_const_logic_1 = ap_CS_fsm_state9) or (not(((ap_const_boolean_1 = ap_block_state16_io) or (o_data_V_data_V_1_ack_in = ap_const_logic_0) or (o_data_V_last_V_1_ack_in = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state16)) or ((ap_const_boolean_0 = ap_block_state4_io) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((ap_const_boolean_0 = ap_block_state2_io) and (ap_const_logic_1 = ap_CS_fsm_state2)) or (not(((ap_const_boolean_1 = ap_block_state15_io) or ((ap_predicate_op128_read_state15 = ap_const_boolean_1) and (i_data_TVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state15)) or (not(((ap_const_boolean_1 = ap_block_state3_io) or ((ap_predicate_op77_read_state3 = ap_const_boolean_1) and (i_data_TVALID = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            data_reg_q_V_ce1 <= ap_const_logic_1;
        else 
            data_reg_q_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    data_reg_q_V_d0_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state16, reg_227, ap_CS_fsm_state9, reg_239, data_reg_q_V_load_3_reg_484, data_reg_q_V_load_5_reg_494, data_reg_q_V_load_7_reg_504, data_reg_q_V_load_9_reg_514, data_reg_q_V_load_11_reg_524, data_reg_q_V_load_13_reg_534, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            data_reg_q_V_d0 <= reg_239;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            data_reg_q_V_d0 <= data_reg_q_V_load_13_reg_534;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            data_reg_q_V_d0 <= data_reg_q_V_load_11_reg_524;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            data_reg_q_V_d0 <= data_reg_q_V_load_9_reg_514;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            data_reg_q_V_d0 <= data_reg_q_V_load_7_reg_504;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            data_reg_q_V_d0 <= data_reg_q_V_load_5_reg_494;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            data_reg_q_V_d0 <= data_reg_q_V_load_3_reg_484;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            data_reg_q_V_d0 <= reg_227;
        else 
            data_reg_q_V_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    data_reg_q_V_d1_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state16, reg_227, ap_CS_fsm_state9, reg_239, data_reg_q_V_load_4_reg_489, data_reg_q_V_load_6_reg_499, data_reg_q_V_load_8_reg_509, data_reg_q_V_load_10_reg_519, data_reg_q_V_load_12_reg_529, tmp_5_reg_549, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            data_reg_q_V_d1 <= tmp_5_reg_549;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            data_reg_q_V_d1 <= reg_227;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            data_reg_q_V_d1 <= data_reg_q_V_load_12_reg_529;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            data_reg_q_V_d1 <= data_reg_q_V_load_10_reg_519;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            data_reg_q_V_d1 <= data_reg_q_V_load_8_reg_509;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            data_reg_q_V_d1 <= data_reg_q_V_load_6_reg_499;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            data_reg_q_V_d1 <= data_reg_q_V_load_4_reg_489;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            data_reg_q_V_d1 <= reg_239;
        else 
            data_reg_q_V_d1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    data_reg_q_V_we0_assign_proc : process(i_data_TVALID, o_data_V_data_V_1_ack_in, o_data_V_last_V_1_ack_in, currentState_load_reg_466, ap_CS_fsm_state15, tmp_reg_470, ap_CS_fsm_state16, ap_CS_fsm_state9, ap_predicate_op128_read_state15, ap_block_state15_io, ap_predicate_op139_write_state16, ap_block_state16_io, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14)
    begin
        if (((not(((ap_const_boolean_1 = ap_block_state16_io) or (o_data_V_data_V_1_ack_in = ap_const_logic_0) or (o_data_V_last_V_1_ack_in = ap_const_logic_0))) and (ap_predicate_op139_write_state16 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state16)) or ((tmp_reg_470 = ap_const_lv1_1) and (currentState_load_reg_466 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state14)) or ((tmp_reg_470 = ap_const_lv1_1) and (currentState_load_reg_466 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13)) or ((tmp_reg_470 = ap_const_lv1_1) and (currentState_load_reg_466 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12)) or ((tmp_reg_470 = ap_const_lv1_1) and (currentState_load_reg_466 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((tmp_reg_470 = ap_const_lv1_1) and (currentState_load_reg_466 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((tmp_reg_470 = ap_const_lv1_1) and (currentState_load_reg_466 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9)) or (not(((ap_const_boolean_1 = ap_block_state15_io) or ((ap_predicate_op128_read_state15 = ap_const_boolean_1) and (i_data_TVALID = ap_const_logic_0)))) and (ap_predicate_op128_read_state15 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
            data_reg_q_V_we0 <= ap_const_logic_1;
        else 
            data_reg_q_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    data_reg_q_V_we1_assign_proc : process(i_data_TVALID, o_data_V_data_V_1_ack_in, o_data_V_last_V_1_ack_in, currentState_load_reg_466, ap_CS_fsm_state15, tmp_reg_470, ap_CS_fsm_state16, ap_CS_fsm_state9, ap_predicate_op128_read_state15, ap_block_state15_io, ap_predicate_op139_write_state16, ap_block_state16_io, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14)
    begin
        if (((not(((ap_const_boolean_1 = ap_block_state16_io) or (o_data_V_data_V_1_ack_in = ap_const_logic_0) or (o_data_V_last_V_1_ack_in = ap_const_logic_0))) and (ap_predicate_op139_write_state16 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state16)) or ((tmp_reg_470 = ap_const_lv1_1) and (currentState_load_reg_466 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state14)) or ((tmp_reg_470 = ap_const_lv1_1) and (currentState_load_reg_466 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13)) or ((tmp_reg_470 = ap_const_lv1_1) and (currentState_load_reg_466 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12)) or ((tmp_reg_470 = ap_const_lv1_1) and (currentState_load_reg_466 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((tmp_reg_470 = ap_const_lv1_1) and (currentState_load_reg_466 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((tmp_reg_470 = ap_const_lv1_1) and (currentState_load_reg_466 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9)) or (not(((ap_const_boolean_1 = ap_block_state15_io) or ((ap_predicate_op128_read_state15 = ap_const_boolean_1) and (i_data_TVALID = ap_const_logic_0)))) and (ap_predicate_op128_read_state15 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
            data_reg_q_V_we1 <= ap_const_logic_1;
        else 
            data_reg_q_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_210_p1_assign_proc : process(data_valid_reg_V, ap_CS_fsm_state15, ap_CS_fsm_state1, p_Val2_s_reg_447)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_fu_210_p1 <= p_Val2_s_reg_447;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            grp_fu_210_p1 <= data_valid_reg_V;
        else 
            grp_fu_210_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_210_p3 <= grp_fu_210_p1(11 downto 11);

    i_data_TDATA_blk_n_assign_proc : process(i_data_TVALID, ap_CS_fsm_state3, currentState_load_reg_466, start_V_read_reg_439, ap_CS_fsm_state15, tmp_reg_470)
    begin
        if ((((tmp_reg_470 = ap_const_lv1_1) and (currentState_load_reg_466 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((start_V_read_reg_439 = ap_const_lv1_1) and (currentState_load_reg_466 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            i_data_TDATA_blk_n <= i_data_TVALID;
        else 
            i_data_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    i_data_TREADY_assign_proc : process(i_data_TVALID, ap_CS_fsm_state3, ap_CS_fsm_state15, ap_predicate_op77_read_state3, ap_block_state3_io, ap_predicate_op128_read_state15, ap_block_state15_io)
    begin
        if (((not(((ap_const_boolean_1 = ap_block_state15_io) or ((ap_predicate_op128_read_state15 = ap_const_boolean_1) and (i_data_TVALID = ap_const_logic_0)))) and (ap_predicate_op128_read_state15 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state15)) or (not(((ap_const_boolean_1 = ap_block_state3_io) or ((ap_predicate_op77_read_state3 = ap_const_boolean_1) and (i_data_TVALID = ap_const_logic_0)))) and (ap_predicate_op77_read_state3 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            i_data_TREADY <= ap_const_logic_1;
        else 
            i_data_TREADY <= ap_const_logic_0;
        end if; 
    end process;

    o_data_TDATA <= o_data_V_data_V_1_data_out;

    o_data_TDATA_blk_n_assign_proc : process(o_data_V_data_V_1_state, ap_CS_fsm_state3, currentState_load_reg_466, start_V_read_reg_439, ap_CS_fsm_state15, tmp_reg_470, ap_CS_fsm_state2, currentwrState_load_reg_443, ap_CS_fsm_state4, ap_CS_fsm_state16)
    begin
        if ((((currentwrState_load_reg_443 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((tmp_reg_470 = ap_const_lv1_1) and (currentState_load_reg_466 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16)) or ((tmp_reg_470 = ap_const_lv1_1) and (currentState_load_reg_466 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((start_V_read_reg_439 = ap_const_lv1_1) and (currentState_load_reg_466 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((currentwrState_load_reg_443 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((start_V_read_reg_439 = ap_const_lv1_1) and (currentState_load_reg_466 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            o_data_TDATA_blk_n <= o_data_V_data_V_1_state(1);
        else 
            o_data_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    o_data_TLAST <= o_data_V_last_V_1_data_out;
    o_data_TVALID <= o_data_V_last_V_1_state(0);
    o_data_V_data_V_1_ack_in <= o_data_V_data_V_1_state(1);
    o_data_V_data_V_1_ack_out <= o_data_TREADY;

    o_data_V_data_V_1_data_in_assign_proc : process(i_data_TDATA, i_data_TVALID, ap_CS_fsm_state3, ap_CS_fsm_state15, ap_CS_fsm_state2, currentwrState_load_reg_443, ap_predicate_op77_read_state3, ap_predicate_op128_read_state15, p_Result_2_fu_377_p1)
    begin
        if (((not(((ap_predicate_op128_read_state15 = ap_const_boolean_1) and (i_data_TVALID = ap_const_logic_0))) and (ap_predicate_op128_read_state15 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state15)) or (not(((ap_predicate_op77_read_state3 = ap_const_boolean_1) and (i_data_TVALID = ap_const_logic_0))) and (ap_predicate_op77_read_state3 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            o_data_V_data_V_1_data_in <= i_data_TDATA;
        elsif (((currentwrState_load_reg_443 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            o_data_V_data_V_1_data_in <= p_Result_2_fu_377_p1;
        else 
            o_data_V_data_V_1_data_in <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    o_data_V_data_V_1_data_out_assign_proc : process(o_data_V_data_V_1_payload_A, o_data_V_data_V_1_payload_B, o_data_V_data_V_1_sel)
    begin
        if ((o_data_V_data_V_1_sel = ap_const_logic_1)) then 
            o_data_V_data_V_1_data_out <= o_data_V_data_V_1_payload_B;
        else 
            o_data_V_data_V_1_data_out <= o_data_V_data_V_1_payload_A;
        end if; 
    end process;

    o_data_V_data_V_1_load_A <= (o_data_V_data_V_1_state_cmp_full and not(o_data_V_data_V_1_sel_wr));
    o_data_V_data_V_1_load_B <= (o_data_V_data_V_1_state_cmp_full and o_data_V_data_V_1_sel_wr);
    o_data_V_data_V_1_sel <= o_data_V_data_V_1_sel_rd;
    o_data_V_data_V_1_state_cmp_full <= '0' when (o_data_V_data_V_1_state = ap_const_lv2_1) else '1';

    o_data_V_data_V_1_vld_in_assign_proc : process(i_data_TVALID, ap_CS_fsm_state3, ap_CS_fsm_state15, ap_CS_fsm_state2, currentwrState_load_reg_443, ap_block_state2_io, ap_predicate_op77_read_state3, ap_block_state3_io, ap_predicate_op128_read_state15, ap_block_state15_io)
    begin
        if ((((currentwrState_load_reg_443 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_state2_io) and (ap_const_logic_1 = ap_CS_fsm_state2)) or (not(((ap_const_boolean_1 = ap_block_state15_io) or ((ap_predicate_op128_read_state15 = ap_const_boolean_1) and (i_data_TVALID = ap_const_logic_0)))) and (ap_predicate_op128_read_state15 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state15)) or (not(((ap_const_boolean_1 = ap_block_state3_io) or ((ap_predicate_op77_read_state3 = ap_const_boolean_1) and (i_data_TVALID = ap_const_logic_0)))) and (ap_predicate_op77_read_state3 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            o_data_V_data_V_1_vld_in <= ap_const_logic_1;
        else 
            o_data_V_data_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    o_data_V_data_V_1_vld_out <= o_data_V_data_V_1_state(0);
    o_data_V_last_V_1_ack_in <= o_data_V_last_V_1_state(1);
    o_data_V_last_V_1_ack_out <= o_data_TREADY;

    o_data_V_last_V_1_data_in_assign_proc : process(i_data_TVALID, i_data_TLAST, ap_CS_fsm_state3, ap_CS_fsm_state15, ap_CS_fsm_state2, currentwrState_load_reg_443, ap_predicate_op77_read_state3, ap_predicate_op128_read_state15)
    begin
        if (((not(((ap_predicate_op128_read_state15 = ap_const_boolean_1) and (i_data_TVALID = ap_const_logic_0))) and (ap_predicate_op128_read_state15 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state15)) or (not(((ap_predicate_op77_read_state3 = ap_const_boolean_1) and (i_data_TVALID = ap_const_logic_0))) and (ap_predicate_op77_read_state3 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            o_data_V_last_V_1_data_in <= i_data_TLAST;
        elsif (((currentwrState_load_reg_443 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            o_data_V_last_V_1_data_in <= ap_const_lv1_0;
        else 
            o_data_V_last_V_1_data_in <= "X";
        end if; 
    end process;


    o_data_V_last_V_1_data_out_assign_proc : process(o_data_V_last_V_1_payload_A, o_data_V_last_V_1_payload_B, o_data_V_last_V_1_sel)
    begin
        if ((o_data_V_last_V_1_sel = ap_const_logic_1)) then 
            o_data_V_last_V_1_data_out <= o_data_V_last_V_1_payload_B;
        else 
            o_data_V_last_V_1_data_out <= o_data_V_last_V_1_payload_A;
        end if; 
    end process;

    o_data_V_last_V_1_load_A <= (o_data_V_last_V_1_state_cmp_full and not(o_data_V_last_V_1_sel_wr));
    o_data_V_last_V_1_load_B <= (o_data_V_last_V_1_state_cmp_full and o_data_V_last_V_1_sel_wr);
    o_data_V_last_V_1_sel <= o_data_V_last_V_1_sel_rd;
    o_data_V_last_V_1_state_cmp_full <= '0' when (o_data_V_last_V_1_state = ap_const_lv2_1) else '1';

    o_data_V_last_V_1_vld_in_assign_proc : process(i_data_TVALID, ap_CS_fsm_state3, ap_CS_fsm_state15, ap_CS_fsm_state2, currentwrState_load_reg_443, ap_block_state2_io, ap_predicate_op77_read_state3, ap_block_state3_io, ap_predicate_op128_read_state15, ap_block_state15_io)
    begin
        if ((((currentwrState_load_reg_443 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_state2_io) and (ap_const_logic_1 = ap_CS_fsm_state2)) or (not(((ap_const_boolean_1 = ap_block_state15_io) or ((ap_predicate_op128_read_state15 = ap_const_boolean_1) and (i_data_TVALID = ap_const_logic_0)))) and (ap_predicate_op128_read_state15 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state15)) or (not(((ap_const_boolean_1 = ap_block_state3_io) or ((ap_predicate_op77_read_state3 = ap_const_boolean_1) and (i_data_TVALID = ap_const_logic_0)))) and (ap_predicate_op77_read_state3 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            o_data_V_last_V_1_vld_in <= ap_const_logic_1;
        else 
            o_data_V_last_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    o_data_V_last_V_1_vld_out <= o_data_V_last_V_1_state(0);
    p_Result_1_fu_400_p2 <= std_logic_vector(shift_left(unsigned(p_Val2_s_reg_447),to_integer(unsigned('0' & ap_const_lv24_1(24-1 downto 0)))));
    p_Result_2_fu_377_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_fu_369_p3),32));
    p_Result_3_fu_265_p5 <= (tmp_4_fu_261_p1 & data_valid_reg_V(0 downto 0));
    p_Result_s_fu_425_p3 <= (tmp_4_reg_456 & ap_const_lv1_1);
    tmp_1_fu_369_p3 <= (data_reg_i_V_12 & data_reg_q_V_q0);
    tmp_4_fu_261_p1 <= data_valid_reg_V(23 - 1 downto 0);
    tmp_5_fu_405_p1 <= i_data_TDATA(16 - 1 downto 0);
    tmp_nbreadreq_fu_146_p4 <= (0=>(i_data_TVALID), others=>'-');
end behav;
