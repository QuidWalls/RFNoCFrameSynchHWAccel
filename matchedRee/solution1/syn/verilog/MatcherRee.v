// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="MatcherRee,hls_ip_2017_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7k160tfbg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=8.740000,HLS_SYN_LAT=9,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=14,HLS_SYN_FF=1260,HLS_SYN_LUT=681}" *)

module MatcherRee (
        ap_clk,
        ap_rst_n,
        i_data_TDATA,
        i_data_TVALID,
        i_data_TREADY,
        i_data_TLAST,
        o_data_TDATA,
        o_data_TVALID,
        o_data_TREADY,
        o_data_TLAST,
        start_V
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst_n;
input  [31:0] i_data_TDATA;
input   i_data_TVALID;
output   i_data_TREADY;
input  [0:0] i_data_TLAST;
output  [31:0] o_data_TDATA;
output   o_data_TVALID;
input   o_data_TREADY;
output  [0:0] o_data_TLAST;
input  [0:0] start_V;

reg    ap_rst_n_inv;
reg   [31:0] i_data_V_data_V_0_data_out;
wire    i_data_V_data_V_0_vld_in;
wire    i_data_V_data_V_0_vld_out;
wire    i_data_V_data_V_0_ack_in;
reg    i_data_V_data_V_0_ack_out;
reg   [31:0] i_data_V_data_V_0_payload_A;
reg   [31:0] i_data_V_data_V_0_payload_B;
reg    i_data_V_data_V_0_sel_rd;
reg    i_data_V_data_V_0_sel_wr;
wire    i_data_V_data_V_0_sel;
wire    i_data_V_data_V_0_load_A;
wire    i_data_V_data_V_0_load_B;
reg   [1:0] i_data_V_data_V_0_state;
wire    i_data_V_data_V_0_state_cmp_full;
wire    i_data_V_last_V_0_vld_in;
reg    i_data_V_last_V_0_ack_out;
reg   [1:0] i_data_V_last_V_0_state;
reg   [31:0] o_data_V_data_V_1_data_out;
reg    o_data_V_data_V_1_vld_in;
wire    o_data_V_data_V_1_vld_out;
wire    o_data_V_data_V_1_ack_in;
wire    o_data_V_data_V_1_ack_out;
reg   [31:0] o_data_V_data_V_1_payload_A;
reg   [31:0] o_data_V_data_V_1_payload_B;
reg    o_data_V_data_V_1_sel_rd;
reg    o_data_V_data_V_1_sel_wr;
wire    o_data_V_data_V_1_sel;
wire    o_data_V_data_V_1_load_A;
wire    o_data_V_data_V_1_load_B;
reg   [1:0] o_data_V_data_V_1_state;
wire    o_data_V_data_V_1_state_cmp_full;
wire   [0:0] o_data_V_last_V_1_data_out;
reg    o_data_V_last_V_1_vld_in;
wire    o_data_V_last_V_1_vld_out;
wire    o_data_V_last_V_1_ack_in;
wire    o_data_V_last_V_1_ack_out;
reg    o_data_V_last_V_1_sel_rd;
wire    o_data_V_last_V_1_sel;
reg   [1:0] o_data_V_last_V_1_state;
reg   [0:0] currentState;
reg   [15:0] buffQ_V_14;
reg   [15:0] buffQ_V_13;
reg  signed [15:0] buffQ_V_12;
reg   [15:0] buffQ_V_11;
reg   [15:0] buffQ_V_10;
reg   [15:0] buffQ_V_9;
reg   [15:0] buffQ_V_8;
reg   [15:0] buffQ_V_7;
reg   [15:0] buffQ_V_6;
reg   [15:0] buffQ_V_5;
reg   [15:0] buffQ_V_4;
reg   [15:0] buffQ_V_3;
reg   [15:0] buffQ_V_2;
reg   [15:0] buffQ_V_1;
reg   [15:0] buffQ_V_0;
reg    i_data_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] currentState_load_reg_1031;
reg    o_data_TDATA_blk_n;
reg    ap_enable_reg_pp0_iter8;
reg   [0:0] ap_reg_pp0_iter7_currentState_load_reg_1031;
reg    ap_enable_reg_pp0_iter9;
reg   [0:0] ap_reg_pp0_iter8_currentState_load_reg_1031;
wire   [0:0] start_V_read_read_fu_164_p2;
wire    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
reg    ap_block_state9_io;
reg    ap_block_state10_pp0_stage0_iter9;
reg    ap_block_state10_io;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] currentState_load_load_fu_189_p1;
reg   [0:0] ap_reg_pp0_iter1_currentState_load_reg_1031;
reg   [0:0] ap_reg_pp0_iter2_currentState_load_reg_1031;
reg   [0:0] ap_reg_pp0_iter3_currentState_load_reg_1031;
reg   [0:0] ap_reg_pp0_iter4_currentState_load_reg_1031;
reg   [0:0] ap_reg_pp0_iter5_currentState_load_reg_1031;
reg   [0:0] ap_reg_pp0_iter6_currentState_load_reg_1031;
reg  signed [15:0] buffQ_V_11_load_reg_1035;
reg  signed [15:0] buffQ_V_10_load_reg_1040;
reg   [15:0] buffQ_V_9_load_reg_1045;
reg  signed [15:0] ap_reg_pp0_iter2_buffQ_V_9_load_reg_1045;
reg   [15:0] buffQ_V_8_load_reg_1050;
reg  signed [15:0] ap_reg_pp0_iter2_buffQ_V_8_load_reg_1050;
reg   [15:0] buffQ_V_7_load_reg_1055;
reg   [15:0] ap_reg_pp0_iter2_buffQ_V_7_load_reg_1055;
reg  signed [15:0] ap_reg_pp0_iter3_buffQ_V_7_load_reg_1055;
reg   [15:0] buffQ_V_6_load_reg_1060;
reg   [15:0] ap_reg_pp0_iter2_buffQ_V_6_load_reg_1060;
reg  signed [15:0] ap_reg_pp0_iter3_buffQ_V_6_load_reg_1060;
reg   [15:0] buffQ_V_5_load_reg_1065;
reg   [15:0] ap_reg_pp0_iter2_buffQ_V_5_load_reg_1065;
reg   [15:0] ap_reg_pp0_iter3_buffQ_V_5_load_reg_1065;
reg  signed [15:0] ap_reg_pp0_iter4_buffQ_V_5_load_reg_1065;
reg   [15:0] buffQ_V_4_load_reg_1070;
reg   [15:0] ap_reg_pp0_iter2_buffQ_V_4_load_reg_1070;
reg   [15:0] ap_reg_pp0_iter3_buffQ_V_4_load_reg_1070;
reg  signed [15:0] ap_reg_pp0_iter4_buffQ_V_4_load_reg_1070;
reg   [15:0] buffQ_V_3_load_reg_1075;
reg   [15:0] ap_reg_pp0_iter2_buffQ_V_3_load_reg_1075;
reg   [15:0] ap_reg_pp0_iter3_buffQ_V_3_load_reg_1075;
reg   [15:0] ap_reg_pp0_iter4_buffQ_V_3_load_reg_1075;
reg  signed [15:0] ap_reg_pp0_iter5_buffQ_V_3_load_reg_1075;
reg   [15:0] buffQ_V_2_load_reg_1080;
reg   [15:0] ap_reg_pp0_iter2_buffQ_V_2_load_reg_1080;
reg   [15:0] ap_reg_pp0_iter3_buffQ_V_2_load_reg_1080;
reg   [15:0] ap_reg_pp0_iter4_buffQ_V_2_load_reg_1080;
reg  signed [15:0] ap_reg_pp0_iter5_buffQ_V_2_load_reg_1080;
reg   [15:0] buffQ_V_1_load_reg_1085;
reg   [15:0] ap_reg_pp0_iter2_buffQ_V_1_load_reg_1085;
reg   [15:0] ap_reg_pp0_iter3_buffQ_V_1_load_reg_1085;
reg   [15:0] ap_reg_pp0_iter4_buffQ_V_1_load_reg_1085;
reg   [15:0] ap_reg_pp0_iter5_buffQ_V_1_load_reg_1085;
reg  signed [15:0] ap_reg_pp0_iter6_buffQ_V_1_load_reg_1085;
reg   [15:0] buffQ_V_0_load_reg_1090;
reg   [15:0] ap_reg_pp0_iter2_buffQ_V_0_load_reg_1090;
reg   [15:0] ap_reg_pp0_iter3_buffQ_V_0_load_reg_1090;
reg   [15:0] ap_reg_pp0_iter4_buffQ_V_0_load_reg_1090;
reg   [15:0] ap_reg_pp0_iter5_buffQ_V_0_load_reg_1090;
reg  signed [15:0] ap_reg_pp0_iter6_buffQ_V_0_load_reg_1090;
wire   [15:0] tmp_7_fu_421_p3;
reg   [15:0] tmp_7_reg_1095;
reg   [15:0] ap_reg_pp0_iter2_tmp_7_reg_1095;
reg   [15:0] ap_reg_pp0_iter3_tmp_7_reg_1095;
reg   [15:0] ap_reg_pp0_iter4_tmp_7_reg_1095;
reg   [15:0] ap_reg_pp0_iter5_tmp_7_reg_1095;
reg  signed [15:0] ap_reg_pp0_iter6_tmp_7_reg_1095;
reg   [15:0] tmp_6_reg_1100;
reg   [15:0] tmp_10_reg_1105;
reg   [15:0] tmp_12_reg_1110;
reg   [15:0] tmp_14_reg_1115;
reg   [15:0] tmp_16_reg_1120;
reg   [15:0] tmp_18_reg_1125;
wire  signed [24:0] p_Val2_6_14_fu_1021_p2;
reg  signed [24:0] p_Val2_6_14_reg_1130;
reg   [15:0] tmp_20_reg_1135;
wire   [31:0] p_Result_s_fu_895_p3;
reg    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_block_pp0_stage0_01001;
wire   [10:0] tmp_fu_417_p1;
wire   [14:0] tmp_2_fu_459_p1;
wire   [19:0] p_shl2_fu_471_p3;
wire   [20:0] p_shl1_fu_463_p3;
wire  signed [20:0] p_shl2_cast_fu_479_p1;
wire   [14:0] tmp_3_fu_489_p1;
wire   [19:0] p_shl3_fu_501_p3;
wire  signed [20:0] p_shl3_cast_fu_509_p1;
wire   [20:0] p_shl_fu_493_p3;
wire   [20:0] p_Val2_6_fu_483_p2;
wire   [15:0] tmp_4_fu_519_p4;
wire   [20:0] p_Val2_6_1_fu_513_p2;
wire   [20:0] tmp_13_1_fu_529_p3;
wire   [20:0] p_Val2_7_1_fu_537_p2;
wire   [15:0] tmp_5_fu_547_p4;
wire  signed [20:0] grp_fu_904_p3;
wire  signed [20:0] grp_fu_913_p3;
wire   [15:0] tmp_8_fu_587_p4;
wire  signed [20:0] grp_fu_922_p3;
wire  signed [20:0] grp_fu_931_p3;
wire   [15:0] tmp_11_fu_626_p4;
wire  signed [20:0] grp_fu_940_p3;
wire  signed [20:0] grp_fu_949_p3;
wire   [15:0] tmp_13_fu_665_p4;
wire  signed [20:0] grp_fu_958_p3;
wire  signed [20:0] grp_fu_967_p3;
wire   [15:0] tmp_15_fu_704_p4;
wire  signed [20:0] grp_fu_976_p3;
wire  signed [20:0] grp_fu_985_p3;
wire   [15:0] tmp_17_fu_743_p4;
wire  signed [20:0] grp_fu_994_p3;
wire  signed [20:0] grp_fu_1003_p3;
wire   [15:0] tmp_19_fu_782_p4;
wire  signed [20:0] grp_fu_1012_p3;
wire   [20:0] tmp_13_14_fu_814_p3;
wire  signed [31:0] p_Val2_6_14_cast_fu_811_p1;
wire   [32:0] tmp_141_s_fu_825_p1;
wire  signed [32:0] tmp_13_14_cast_fu_821_p1;
wire   [32:0] p_Val2_7_14_fu_829_p2;
wire   [4:0] p_Result_2_fu_853_p4;
wire   [10:0] ret_V_fu_835_p4;
wire   [0:0] tmp_s_fu_863_p2;
wire   [10:0] ret_V_1_fu_869_p2;
wire   [0:0] tmp_21_fu_845_p3;
wire   [10:0] p_s_fu_875_p3;
wire   [10:0] p_1_fu_883_p3;
wire  signed [15:0] loc_V_1_trunc_fu_891_p1;
wire   [7:0] grp_fu_904_p0;
wire   [20:0] grp_fu_904_p2;
wire   [8:0] grp_fu_913_p0;
wire   [20:0] grp_fu_913_p2;
wire   [8:0] grp_fu_922_p0;
wire   [20:0] grp_fu_922_p2;
wire   [8:0] grp_fu_931_p0;
wire   [20:0] grp_fu_931_p2;
wire   [8:0] grp_fu_940_p0;
wire   [20:0] grp_fu_940_p2;
wire   [8:0] grp_fu_949_p0;
wire   [20:0] grp_fu_949_p2;
wire   [7:0] grp_fu_958_p0;
wire   [20:0] grp_fu_958_p2;
wire   [7:0] grp_fu_967_p0;
wire   [20:0] grp_fu_967_p2;
wire   [7:0] grp_fu_976_p0;
wire   [20:0] grp_fu_976_p2;
wire   [7:0] grp_fu_985_p0;
wire   [20:0] grp_fu_985_p2;
wire   [8:0] grp_fu_994_p0;
wire   [20:0] grp_fu_994_p2;
wire   [8:0] grp_fu_1003_p0;
wire   [20:0] grp_fu_1003_p2;
wire   [8:0] grp_fu_1012_p0;
wire   [20:0] grp_fu_1012_p2;
wire   [8:0] p_Val2_6_14_fu_1021_p0;
reg   [0:0] ap_NS_fsm;
wire    ap_reset_idle_pp0;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 i_data_V_data_V_0_sel_rd = 1'b0;
#0 i_data_V_data_V_0_sel_wr = 1'b0;
#0 i_data_V_data_V_0_state = 2'd0;
#0 i_data_V_last_V_0_state = 2'd0;
#0 o_data_V_data_V_1_sel_rd = 1'b0;
#0 o_data_V_data_V_1_sel_wr = 1'b0;
#0 o_data_V_data_V_1_state = 2'd0;
#0 o_data_V_last_V_1_sel_rd = 1'b0;
#0 o_data_V_last_V_1_state = 2'd0;
#0 currentState = 1'd0;
#0 buffQ_V_14 = 16'd0;
#0 buffQ_V_13 = 16'd0;
#0 buffQ_V_12 = 16'd0;
#0 buffQ_V_11 = 16'd0;
#0 buffQ_V_10 = 16'd0;
#0 buffQ_V_9 = 16'd0;
#0 buffQ_V_8 = 16'd0;
#0 buffQ_V_7 = 16'd0;
#0 buffQ_V_6 = 16'd0;
#0 buffQ_V_5 = 16'd0;
#0 buffQ_V_4 = 16'd0;
#0 buffQ_V_3 = 16'd0;
#0 buffQ_V_2 = 16'd0;
#0 buffQ_V_1 = 16'd0;
#0 buffQ_V_0 = 16'd0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
end

MatcherRee_mac_mubkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 21 ))
MatcherRee_mac_mubkb_U1(
    .din0(grp_fu_904_p0),
    .din1(buffQ_V_12),
    .din2(grp_fu_904_p2),
    .dout(grp_fu_904_p3)
);

MatcherRee_mac_mucud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 21 ))
MatcherRee_mac_mucud_U2(
    .din0(grp_fu_913_p0),
    .din1(buffQ_V_11_load_reg_1035),
    .din2(grp_fu_913_p2),
    .dout(grp_fu_913_p3)
);

MatcherRee_mac_mucud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 21 ))
MatcherRee_mac_mucud_U3(
    .din0(grp_fu_922_p0),
    .din1(buffQ_V_10_load_reg_1040),
    .din2(grp_fu_922_p2),
    .dout(grp_fu_922_p3)
);

MatcherRee_mac_mucud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 21 ))
MatcherRee_mac_mucud_U4(
    .din0(grp_fu_931_p0),
    .din1(ap_reg_pp0_iter2_buffQ_V_9_load_reg_1045),
    .din2(grp_fu_931_p2),
    .dout(grp_fu_931_p3)
);

MatcherRee_mac_mucud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 21 ))
MatcherRee_mac_mucud_U5(
    .din0(grp_fu_940_p0),
    .din1(ap_reg_pp0_iter2_buffQ_V_8_load_reg_1050),
    .din2(grp_fu_940_p2),
    .dout(grp_fu_940_p3)
);

MatcherRee_mac_mucud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 21 ))
MatcherRee_mac_mucud_U6(
    .din0(grp_fu_949_p0),
    .din1(ap_reg_pp0_iter3_buffQ_V_7_load_reg_1055),
    .din2(grp_fu_949_p2),
    .dout(grp_fu_949_p3)
);

MatcherRee_mac_mubkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 21 ))
MatcherRee_mac_mubkb_U7(
    .din0(grp_fu_958_p0),
    .din1(ap_reg_pp0_iter3_buffQ_V_6_load_reg_1060),
    .din2(grp_fu_958_p2),
    .dout(grp_fu_958_p3)
);

MatcherRee_mac_mubkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 21 ))
MatcherRee_mac_mubkb_U8(
    .din0(grp_fu_967_p0),
    .din1(ap_reg_pp0_iter4_buffQ_V_5_load_reg_1065),
    .din2(grp_fu_967_p2),
    .dout(grp_fu_967_p3)
);

MatcherRee_mac_mubkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 21 ))
MatcherRee_mac_mubkb_U9(
    .din0(grp_fu_976_p0),
    .din1(ap_reg_pp0_iter4_buffQ_V_4_load_reg_1070),
    .din2(grp_fu_976_p2),
    .dout(grp_fu_976_p3)
);

MatcherRee_mac_mubkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 21 ))
MatcherRee_mac_mubkb_U10(
    .din0(grp_fu_985_p0),
    .din1(ap_reg_pp0_iter5_buffQ_V_3_load_reg_1075),
    .din2(grp_fu_985_p2),
    .dout(grp_fu_985_p3)
);

MatcherRee_mac_mucud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 21 ))
MatcherRee_mac_mucud_U11(
    .din0(grp_fu_994_p0),
    .din1(ap_reg_pp0_iter5_buffQ_V_2_load_reg_1080),
    .din2(grp_fu_994_p2),
    .dout(grp_fu_994_p3)
);

MatcherRee_mac_mucud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 21 ))
MatcherRee_mac_mucud_U12(
    .din0(grp_fu_1003_p0),
    .din1(ap_reg_pp0_iter6_buffQ_V_1_load_reg_1085),
    .din2(grp_fu_1003_p2),
    .dout(grp_fu_1003_p3)
);

MatcherRee_mac_mucud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 21 ))
MatcherRee_mac_mucud_U13(
    .din0(grp_fu_1012_p0),
    .din1(ap_reg_pp0_iter6_buffQ_V_0_load_reg_1090),
    .din2(grp_fu_1012_p2),
    .dout(grp_fu_1012_p3)
);

MatcherRee_mul_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 25 ))
MatcherRee_mul_mudEe_U14(
    .din0(p_Val2_6_14_fu_1021_p0),
    .din1(ap_reg_pp0_iter6_tmp_7_reg_1095),
    .dout(p_Val2_6_14_fu_1021_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        currentState <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (start_V_read_read_fu_164_p2 == 1'd1) & (currentState_load_load_fu_189_p1 == 1'd0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            currentState <= 1'd1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        i_data_V_data_V_0_sel_rd <= 1'b0;
    end else begin
        if (((i_data_V_data_V_0_ack_out == 1'b1) & (i_data_V_data_V_0_vld_out == 1'b1))) begin
            i_data_V_data_V_0_sel_rd <= ~i_data_V_data_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        i_data_V_data_V_0_sel_wr <= 1'b0;
    end else begin
        if (((i_data_V_data_V_0_ack_in == 1'b1) & (i_data_V_data_V_0_vld_in == 1'b1))) begin
            i_data_V_data_V_0_sel_wr <= ~i_data_V_data_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        i_data_V_data_V_0_state <= 2'd0;
    end else begin
        if ((((i_data_V_data_V_0_vld_in == 1'b0) & (i_data_V_data_V_0_state == 2'd2)) | ((i_data_V_data_V_0_vld_in == 1'b0) & (i_data_V_data_V_0_state == 2'd3) & (i_data_V_data_V_0_ack_out == 1'b1)))) begin
            i_data_V_data_V_0_state <= 2'd2;
        end else if ((((i_data_V_data_V_0_ack_out == 1'b0) & (i_data_V_data_V_0_state == 2'd1)) | ((i_data_V_data_V_0_ack_out == 1'b0) & (i_data_V_data_V_0_state == 2'd3) & (i_data_V_data_V_0_vld_in == 1'b1)))) begin
            i_data_V_data_V_0_state <= 2'd1;
        end else if (((~((i_data_V_data_V_0_vld_in == 1'b0) & (i_data_V_data_V_0_ack_out == 1'b1)) & ~((i_data_V_data_V_0_ack_out == 1'b0) & (i_data_V_data_V_0_vld_in == 1'b1)) & (i_data_V_data_V_0_state == 2'd3)) | ((i_data_V_data_V_0_state == 2'd1) & (i_data_V_data_V_0_ack_out == 1'b1)) | ((i_data_V_data_V_0_state == 2'd2) & (i_data_V_data_V_0_vld_in == 1'b1)))) begin
            i_data_V_data_V_0_state <= 2'd3;
        end else begin
            i_data_V_data_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        i_data_V_last_V_0_state <= 2'd0;
    end else begin
        if ((((i_data_V_last_V_0_state == 2'd3) & (i_data_V_last_V_0_vld_in == 1'b0) & (i_data_V_last_V_0_ack_out == 1'b1)) | ((i_data_V_last_V_0_state == 2'd2) & (i_data_V_last_V_0_vld_in == 1'b0)))) begin
            i_data_V_last_V_0_state <= 2'd2;
        end else if ((((i_data_V_last_V_0_state == 2'd1) & (i_data_V_last_V_0_ack_out == 1'b0)) | ((i_data_V_last_V_0_state == 2'd3) & (i_data_V_last_V_0_ack_out == 1'b0) & (i_data_V_last_V_0_vld_in == 1'b1)))) begin
            i_data_V_last_V_0_state <= 2'd1;
        end else if ((((i_data_V_last_V_0_state == 2'd1) & (i_data_V_last_V_0_ack_out == 1'b1)) | ((i_data_V_last_V_0_state == 2'd2) & (i_data_V_last_V_0_vld_in == 1'b1)) | (~((i_data_V_last_V_0_vld_in == 1'b0) & (i_data_V_last_V_0_ack_out == 1'b1)) & ~((i_data_V_last_V_0_ack_out == 1'b0) & (i_data_V_last_V_0_vld_in == 1'b1)) & (i_data_V_last_V_0_state == 2'd3)))) begin
            i_data_V_last_V_0_state <= 2'd3;
        end else begin
            i_data_V_last_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        o_data_V_data_V_1_sel_rd <= 1'b0;
    end else begin
        if (((o_data_V_data_V_1_ack_out == 1'b1) & (o_data_V_data_V_1_vld_out == 1'b1))) begin
            o_data_V_data_V_1_sel_rd <= ~o_data_V_data_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        o_data_V_data_V_1_sel_wr <= 1'b0;
    end else begin
        if (((o_data_V_data_V_1_ack_in == 1'b1) & (o_data_V_data_V_1_vld_in == 1'b1))) begin
            o_data_V_data_V_1_sel_wr <= ~o_data_V_data_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        o_data_V_data_V_1_state <= 2'd0;
    end else begin
        if ((((o_data_V_data_V_1_state == 2'd2) & (o_data_V_data_V_1_vld_in == 1'b0)) | ((o_data_V_data_V_1_state == 2'd3) & (o_data_V_data_V_1_vld_in == 1'b0) & (o_data_V_data_V_1_ack_out == 1'b1)))) begin
            o_data_V_data_V_1_state <= 2'd2;
        end else if ((((o_data_V_data_V_1_state == 2'd1) & (o_data_V_data_V_1_ack_out == 1'b0)) | ((o_data_V_data_V_1_state == 2'd3) & (o_data_V_data_V_1_ack_out == 1'b0) & (o_data_V_data_V_1_vld_in == 1'b1)))) begin
            o_data_V_data_V_1_state <= 2'd1;
        end else if (((~((o_data_V_data_V_1_vld_in == 1'b0) & (o_data_V_data_V_1_ack_out == 1'b1)) & ~((o_data_V_data_V_1_ack_out == 1'b0) & (o_data_V_data_V_1_vld_in == 1'b1)) & (o_data_V_data_V_1_state == 2'd3)) | ((o_data_V_data_V_1_state == 2'd1) & (o_data_V_data_V_1_ack_out == 1'b1)) | ((o_data_V_data_V_1_state == 2'd2) & (o_data_V_data_V_1_vld_in == 1'b1)))) begin
            o_data_V_data_V_1_state <= 2'd3;
        end else begin
            o_data_V_data_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        o_data_V_last_V_1_sel_rd <= 1'b0;
    end else begin
        if (((o_data_V_last_V_1_ack_out == 1'b1) & (o_data_V_last_V_1_vld_out == 1'b1))) begin
            o_data_V_last_V_1_sel_rd <= ~o_data_V_last_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        o_data_V_last_V_1_state <= 2'd0;
    end else begin
        if ((((o_data_V_last_V_1_state == 2'd2) & (o_data_V_last_V_1_vld_in == 1'b0)) | ((o_data_V_last_V_1_state == 2'd3) & (o_data_V_last_V_1_vld_in == 1'b0) & (o_data_V_last_V_1_ack_out == 1'b1)))) begin
            o_data_V_last_V_1_state <= 2'd2;
        end else if ((((o_data_V_last_V_1_state == 2'd1) & (o_data_V_last_V_1_ack_out == 1'b0)) | ((o_data_V_last_V_1_state == 2'd3) & (o_data_V_last_V_1_ack_out == 1'b0) & (o_data_V_last_V_1_vld_in == 1'b1)))) begin
            o_data_V_last_V_1_state <= 2'd1;
        end else if (((~((o_data_V_last_V_1_vld_in == 1'b0) & (o_data_V_last_V_1_ack_out == 1'b1)) & ~((o_data_V_last_V_1_ack_out == 1'b0) & (o_data_V_last_V_1_vld_in == 1'b1)) & (o_data_V_last_V_1_state == 2'd3)) | ((o_data_V_last_V_1_state == 2'd1) & (o_data_V_last_V_1_ack_out == 1'b1)) | ((o_data_V_last_V_1_state == 2'd2) & (o_data_V_last_V_1_vld_in == 1'b1)))) begin
            o_data_V_last_V_1_state <= 2'd3;
        end else begin
            o_data_V_last_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_reg_pp0_iter1_currentState_load_reg_1031 <= currentState_load_reg_1031;
        currentState_load_reg_1031 <= currentState;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_reg_pp0_iter2_buffQ_V_0_load_reg_1090[15 : 5] <= buffQ_V_0_load_reg_1090[15 : 5];
        ap_reg_pp0_iter2_buffQ_V_1_load_reg_1085[15 : 5] <= buffQ_V_1_load_reg_1085[15 : 5];
        ap_reg_pp0_iter2_buffQ_V_2_load_reg_1080[15 : 5] <= buffQ_V_2_load_reg_1080[15 : 5];
        ap_reg_pp0_iter2_buffQ_V_3_load_reg_1075[15 : 5] <= buffQ_V_3_load_reg_1075[15 : 5];
        ap_reg_pp0_iter2_buffQ_V_4_load_reg_1070[15 : 5] <= buffQ_V_4_load_reg_1070[15 : 5];
        ap_reg_pp0_iter2_buffQ_V_5_load_reg_1065[15 : 5] <= buffQ_V_5_load_reg_1065[15 : 5];
        ap_reg_pp0_iter2_buffQ_V_6_load_reg_1060[15 : 5] <= buffQ_V_6_load_reg_1060[15 : 5];
        ap_reg_pp0_iter2_buffQ_V_7_load_reg_1055[15 : 5] <= buffQ_V_7_load_reg_1055[15 : 5];
        ap_reg_pp0_iter2_buffQ_V_8_load_reg_1050[15 : 5] <= buffQ_V_8_load_reg_1050[15 : 5];
        ap_reg_pp0_iter2_buffQ_V_9_load_reg_1045[15 : 5] <= buffQ_V_9_load_reg_1045[15 : 5];
        ap_reg_pp0_iter2_currentState_load_reg_1031 <= ap_reg_pp0_iter1_currentState_load_reg_1031;
        ap_reg_pp0_iter2_tmp_7_reg_1095[15 : 5] <= tmp_7_reg_1095[15 : 5];
        ap_reg_pp0_iter3_buffQ_V_0_load_reg_1090[15 : 5] <= ap_reg_pp0_iter2_buffQ_V_0_load_reg_1090[15 : 5];
        ap_reg_pp0_iter3_buffQ_V_1_load_reg_1085[15 : 5] <= ap_reg_pp0_iter2_buffQ_V_1_load_reg_1085[15 : 5];
        ap_reg_pp0_iter3_buffQ_V_2_load_reg_1080[15 : 5] <= ap_reg_pp0_iter2_buffQ_V_2_load_reg_1080[15 : 5];
        ap_reg_pp0_iter3_buffQ_V_3_load_reg_1075[15 : 5] <= ap_reg_pp0_iter2_buffQ_V_3_load_reg_1075[15 : 5];
        ap_reg_pp0_iter3_buffQ_V_4_load_reg_1070[15 : 5] <= ap_reg_pp0_iter2_buffQ_V_4_load_reg_1070[15 : 5];
        ap_reg_pp0_iter3_buffQ_V_5_load_reg_1065[15 : 5] <= ap_reg_pp0_iter2_buffQ_V_5_load_reg_1065[15 : 5];
        ap_reg_pp0_iter3_buffQ_V_6_load_reg_1060[15 : 5] <= ap_reg_pp0_iter2_buffQ_V_6_load_reg_1060[15 : 5];
        ap_reg_pp0_iter3_buffQ_V_7_load_reg_1055[15 : 5] <= ap_reg_pp0_iter2_buffQ_V_7_load_reg_1055[15 : 5];
        ap_reg_pp0_iter3_currentState_load_reg_1031 <= ap_reg_pp0_iter2_currentState_load_reg_1031;
        ap_reg_pp0_iter3_tmp_7_reg_1095[15 : 5] <= ap_reg_pp0_iter2_tmp_7_reg_1095[15 : 5];
        ap_reg_pp0_iter4_buffQ_V_0_load_reg_1090[15 : 5] <= ap_reg_pp0_iter3_buffQ_V_0_load_reg_1090[15 : 5];
        ap_reg_pp0_iter4_buffQ_V_1_load_reg_1085[15 : 5] <= ap_reg_pp0_iter3_buffQ_V_1_load_reg_1085[15 : 5];
        ap_reg_pp0_iter4_buffQ_V_2_load_reg_1080[15 : 5] <= ap_reg_pp0_iter3_buffQ_V_2_load_reg_1080[15 : 5];
        ap_reg_pp0_iter4_buffQ_V_3_load_reg_1075[15 : 5] <= ap_reg_pp0_iter3_buffQ_V_3_load_reg_1075[15 : 5];
        ap_reg_pp0_iter4_buffQ_V_4_load_reg_1070[15 : 5] <= ap_reg_pp0_iter3_buffQ_V_4_load_reg_1070[15 : 5];
        ap_reg_pp0_iter4_buffQ_V_5_load_reg_1065[15 : 5] <= ap_reg_pp0_iter3_buffQ_V_5_load_reg_1065[15 : 5];
        ap_reg_pp0_iter4_currentState_load_reg_1031 <= ap_reg_pp0_iter3_currentState_load_reg_1031;
        ap_reg_pp0_iter4_tmp_7_reg_1095[15 : 5] <= ap_reg_pp0_iter3_tmp_7_reg_1095[15 : 5];
        ap_reg_pp0_iter5_buffQ_V_0_load_reg_1090[15 : 5] <= ap_reg_pp0_iter4_buffQ_V_0_load_reg_1090[15 : 5];
        ap_reg_pp0_iter5_buffQ_V_1_load_reg_1085[15 : 5] <= ap_reg_pp0_iter4_buffQ_V_1_load_reg_1085[15 : 5];
        ap_reg_pp0_iter5_buffQ_V_2_load_reg_1080[15 : 5] <= ap_reg_pp0_iter4_buffQ_V_2_load_reg_1080[15 : 5];
        ap_reg_pp0_iter5_buffQ_V_3_load_reg_1075[15 : 5] <= ap_reg_pp0_iter4_buffQ_V_3_load_reg_1075[15 : 5];
        ap_reg_pp0_iter5_currentState_load_reg_1031 <= ap_reg_pp0_iter4_currentState_load_reg_1031;
        ap_reg_pp0_iter5_tmp_7_reg_1095[15 : 5] <= ap_reg_pp0_iter4_tmp_7_reg_1095[15 : 5];
        ap_reg_pp0_iter6_buffQ_V_0_load_reg_1090[15 : 5] <= ap_reg_pp0_iter5_buffQ_V_0_load_reg_1090[15 : 5];
        ap_reg_pp0_iter6_buffQ_V_1_load_reg_1085[15 : 5] <= ap_reg_pp0_iter5_buffQ_V_1_load_reg_1085[15 : 5];
        ap_reg_pp0_iter6_currentState_load_reg_1031 <= ap_reg_pp0_iter5_currentState_load_reg_1031;
        ap_reg_pp0_iter6_tmp_7_reg_1095[15 : 5] <= ap_reg_pp0_iter5_tmp_7_reg_1095[15 : 5];
        ap_reg_pp0_iter7_currentState_load_reg_1031 <= ap_reg_pp0_iter6_currentState_load_reg_1031;
        ap_reg_pp0_iter8_currentState_load_reg_1031 <= ap_reg_pp0_iter7_currentState_load_reg_1031;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (currentState_load_reg_1031 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buffQ_V_0[15 : 5] <= tmp_7_fu_421_p3[15 : 5];
        buffQ_V_1[15 : 5] <= buffQ_V_0[15 : 5];
        buffQ_V_10[15 : 5] <= buffQ_V_9[15 : 5];
        buffQ_V_11[15 : 5] <= buffQ_V_10[15 : 5];
        buffQ_V_12[15 : 5] <= buffQ_V_11[15 : 5];
        buffQ_V_13[15 : 5] <= buffQ_V_12[15 : 5];
        buffQ_V_14[15 : 5] <= buffQ_V_13[15 : 5];
        buffQ_V_2[15 : 5] <= buffQ_V_1[15 : 5];
        buffQ_V_3[15 : 5] <= buffQ_V_2[15 : 5];
        buffQ_V_4[15 : 5] <= buffQ_V_3[15 : 5];
        buffQ_V_5[15 : 5] <= buffQ_V_4[15 : 5];
        buffQ_V_6[15 : 5] <= buffQ_V_5[15 : 5];
        buffQ_V_7[15 : 5] <= buffQ_V_6[15 : 5];
        buffQ_V_8[15 : 5] <= buffQ_V_7[15 : 5];
        buffQ_V_9[15 : 5] <= buffQ_V_8[15 : 5];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (currentState_load_reg_1031 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buffQ_V_0_load_reg_1090[15 : 5] <= buffQ_V_0[15 : 5];
        buffQ_V_10_load_reg_1040[15 : 5] <= buffQ_V_10[15 : 5];
        buffQ_V_11_load_reg_1035[15 : 5] <= buffQ_V_11[15 : 5];
        buffQ_V_1_load_reg_1085[15 : 5] <= buffQ_V_1[15 : 5];
        buffQ_V_2_load_reg_1080[15 : 5] <= buffQ_V_2[15 : 5];
        buffQ_V_3_load_reg_1075[15 : 5] <= buffQ_V_3[15 : 5];
        buffQ_V_4_load_reg_1070[15 : 5] <= buffQ_V_4[15 : 5];
        buffQ_V_5_load_reg_1065[15 : 5] <= buffQ_V_5[15 : 5];
        buffQ_V_6_load_reg_1060[15 : 5] <= buffQ_V_6[15 : 5];
        buffQ_V_7_load_reg_1055[15 : 5] <= buffQ_V_7[15 : 5];
        buffQ_V_8_load_reg_1050[15 : 5] <= buffQ_V_8[15 : 5];
        buffQ_V_9_load_reg_1045[15 : 5] <= buffQ_V_9[15 : 5];
        tmp_6_reg_1100 <= {{grp_fu_904_p3[20:5]}};
        tmp_7_reg_1095[15 : 5] <= tmp_7_fu_421_p3[15 : 5];
    end
end

always @ (posedge ap_clk) begin
    if ((i_data_V_data_V_0_load_A == 1'b1)) begin
        i_data_V_data_V_0_payload_A <= i_data_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((i_data_V_data_V_0_load_B == 1'b1)) begin
        i_data_V_data_V_0_payload_B <= i_data_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((o_data_V_data_V_1_load_A == 1'b1)) begin
        o_data_V_data_V_1_payload_A <= p_Result_s_fu_895_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((o_data_V_data_V_1_load_B == 1'b1)) begin
        o_data_V_data_V_1_payload_B <= p_Result_s_fu_895_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter6_currentState_load_reg_1031 == 1'd1))) begin
        p_Val2_6_14_reg_1130 <= p_Val2_6_14_fu_1021_p2;
        tmp_20_reg_1135 <= {{grp_fu_1012_p3[20:5]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter1_currentState_load_reg_1031 == 1'd1))) begin
        tmp_10_reg_1105 <= {{grp_fu_922_p3[20:5]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter2_currentState_load_reg_1031 == 1'd1))) begin
        tmp_12_reg_1110 <= {{grp_fu_940_p3[20:5]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter3_currentState_load_reg_1031 == 1'd1))) begin
        tmp_14_reg_1115 <= {{grp_fu_958_p3[20:5]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter4_currentState_load_reg_1031 == 1'd1))) begin
        tmp_16_reg_1120 <= {{grp_fu_976_p3[20:5]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter5_currentState_load_reg_1031 == 1'd1))) begin
        tmp_18_reg_1125 <= {{grp_fu_994_p3[20:5]}};
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (1'b1 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

assign ap_reset_idle_pp0 = 1'b0;

always @ (*) begin
    if (((currentState_load_reg_1031 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_data_TDATA_blk_n = i_data_V_data_V_0_state[1'd0];
    end else begin
        i_data_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (currentState_load_reg_1031 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_data_V_data_V_0_ack_out = 1'b1;
    end else begin
        i_data_V_data_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((i_data_V_data_V_0_sel == 1'b1)) begin
        i_data_V_data_V_0_data_out = i_data_V_data_V_0_payload_B;
    end else begin
        i_data_V_data_V_0_data_out = i_data_V_data_V_0_payload_A;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (currentState_load_reg_1031 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_data_V_last_V_0_ack_out = 1'b1;
    end else begin
        i_data_V_last_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_reg_pp0_iter8_currentState_load_reg_1031 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter9 == 1'b1)) | ((ap_reg_pp0_iter7_currentState_load_reg_1031 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter8 == 1'b1)))) begin
        o_data_TDATA_blk_n = o_data_V_data_V_1_state[1'd1];
    end else begin
        o_data_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((o_data_V_data_V_1_sel == 1'b1)) begin
        o_data_V_data_V_1_data_out = o_data_V_data_V_1_payload_B;
    end else begin
        o_data_V_data_V_1_data_out = o_data_V_data_V_1_payload_A;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter7_currentState_load_reg_1031 == 1'd1) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        o_data_V_data_V_1_vld_in = 1'b1;
    end else begin
        o_data_V_data_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter7_currentState_load_reg_1031 == 1'd1) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        o_data_V_last_V_1_vld_in = 1'b1;
    end else begin
        o_data_V_last_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter9 == 1'b1) & ((o_data_V_last_V_1_ack_in == 1'b0) | (o_data_V_data_V_1_ack_in == 1'b0))) | ((currentState_load_reg_1031 == 1'd1) & (i_data_V_data_V_0_vld_out == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter9 == 1'b1) & ((o_data_V_last_V_1_ack_in == 1'b0) | (o_data_V_data_V_1_ack_in == 1'b0) | (1'b1 == ap_block_state10_io))) | ((1'b1 == ap_block_state9_io) & (ap_enable_reg_pp0_iter8 == 1'b1)) | ((currentState_load_reg_1031 == 1'd1) & (i_data_V_data_V_0_vld_out == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter9 == 1'b1) & ((o_data_V_last_V_1_ack_in == 1'b0) | (o_data_V_data_V_1_ack_in == 1'b0) | (1'b1 == ap_block_state10_io))) | ((1'b1 == ap_block_state9_io) & (ap_enable_reg_pp0_iter8 == 1'b1)) | ((currentState_load_reg_1031 == 1'd1) & (i_data_V_data_V_0_vld_out == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_state10_io = ((ap_reg_pp0_iter8_currentState_load_reg_1031 == 1'd1) & (o_data_V_data_V_1_ack_in == 1'b0));
end

always @ (*) begin
    ap_block_state10_pp0_stage0_iter9 = ((o_data_V_last_V_1_ack_in == 1'b0) | (o_data_V_data_V_1_ack_in == 1'b0));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((currentState_load_reg_1031 == 1'd1) & (i_data_V_data_V_0_vld_out == 1'b0));
end

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state9_io = ((ap_reg_pp0_iter7_currentState_load_reg_1031 == 1'd1) & (o_data_V_data_V_1_ack_in == 1'b0));
end

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign currentState_load_load_fu_189_p1 = currentState;

assign grp_fu_1003_p0 = 21'd179;

assign grp_fu_1003_p2 = {{tmp_18_reg_1125}, {5'd0}};

assign grp_fu_1012_p0 = 21'd211;

assign grp_fu_1012_p2 = {{tmp_19_fu_782_p4}, {5'd0}};

assign grp_fu_904_p0 = 21'd118;

assign grp_fu_904_p2 = {{tmp_5_fu_547_p4}, {5'd0}};

assign grp_fu_913_p0 = 21'd156;

assign grp_fu_913_p2 = {{tmp_6_reg_1100}, {5'd0}};

assign grp_fu_922_p0 = 21'd169;

assign grp_fu_922_p2 = {{tmp_8_fu_587_p4}, {5'd0}};

assign grp_fu_931_p0 = 21'd204;

assign grp_fu_931_p2 = {{tmp_10_reg_1105}, {5'd0}};

assign grp_fu_940_p0 = 21'd182;

assign grp_fu_940_p2 = {{tmp_11_fu_626_p4}, {5'd0}};

assign grp_fu_949_p0 = 21'd140;

assign grp_fu_949_p2 = {{tmp_12_reg_1110}, {5'd0}};

assign grp_fu_958_p0 = 21'd121;

assign grp_fu_958_p2 = {{tmp_13_fu_665_p4}, {5'd0}};

assign grp_fu_967_p0 = 21'd92;

assign grp_fu_967_p2 = {{tmp_14_reg_1115}, {5'd0}};

assign grp_fu_976_p0 = 21'd73;

assign grp_fu_976_p2 = {{tmp_15_fu_704_p4}, {5'd0}};

assign grp_fu_985_p0 = 21'd105;

assign grp_fu_985_p2 = {{tmp_16_reg_1120}, {5'd0}};

assign grp_fu_994_p0 = 21'd147;

assign grp_fu_994_p2 = {{tmp_17_fu_743_p4}, {5'd0}};

assign i_data_TREADY = i_data_V_last_V_0_state[1'd1];

assign i_data_V_data_V_0_ack_in = i_data_V_data_V_0_state[1'd1];

assign i_data_V_data_V_0_load_A = (i_data_V_data_V_0_state_cmp_full & ~i_data_V_data_V_0_sel_wr);

assign i_data_V_data_V_0_load_B = (i_data_V_data_V_0_state_cmp_full & i_data_V_data_V_0_sel_wr);

assign i_data_V_data_V_0_sel = i_data_V_data_V_0_sel_rd;

assign i_data_V_data_V_0_state_cmp_full = ((i_data_V_data_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign i_data_V_data_V_0_vld_in = i_data_TVALID;

assign i_data_V_data_V_0_vld_out = i_data_V_data_V_0_state[1'd0];

assign i_data_V_last_V_0_vld_in = i_data_TVALID;

assign loc_V_1_trunc_fu_891_p1 = $signed(p_1_fu_883_p3);

assign o_data_TDATA = o_data_V_data_V_1_data_out;

assign o_data_TLAST = o_data_V_last_V_1_data_out;

assign o_data_TVALID = o_data_V_last_V_1_state[1'd0];

assign o_data_V_data_V_1_ack_in = o_data_V_data_V_1_state[1'd1];

assign o_data_V_data_V_1_ack_out = o_data_TREADY;

assign o_data_V_data_V_1_load_A = (o_data_V_data_V_1_state_cmp_full & ~o_data_V_data_V_1_sel_wr);

assign o_data_V_data_V_1_load_B = (o_data_V_data_V_1_state_cmp_full & o_data_V_data_V_1_sel_wr);

assign o_data_V_data_V_1_sel = o_data_V_data_V_1_sel_rd;

assign o_data_V_data_V_1_state_cmp_full = ((o_data_V_data_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign o_data_V_data_V_1_vld_out = o_data_V_data_V_1_state[1'd0];

assign o_data_V_last_V_1_ack_in = o_data_V_last_V_1_state[1'd1];

assign o_data_V_last_V_1_ack_out = o_data_TREADY;

assign o_data_V_last_V_1_data_out = 1'd0;

assign o_data_V_last_V_1_sel = o_data_V_last_V_1_sel_rd;

assign o_data_V_last_V_1_vld_out = o_data_V_last_V_1_state[1'd0];

assign p_1_fu_883_p3 = ((tmp_21_fu_845_p3[0:0] === 1'b1) ? p_s_fu_875_p3 : ret_V_fu_835_p4);

assign p_Result_2_fu_853_p4 = {{p_Val2_7_14_fu_829_p2[9:5]}};

assign p_Result_s_fu_895_p3 = {{16'd0}, {loc_V_1_trunc_fu_891_p1}};

assign p_Val2_6_14_cast_fu_811_p1 = p_Val2_6_14_reg_1130;

assign p_Val2_6_14_fu_1021_p0 = 25'd208;

assign p_Val2_6_1_fu_513_p2 = ($signed(p_shl3_cast_fu_509_p1) + $signed(p_shl_fu_493_p3));

assign p_Val2_6_fu_483_p2 = ($signed(p_shl1_fu_463_p3) - $signed(p_shl2_cast_fu_479_p1));

assign p_Val2_7_14_fu_829_p2 = ($signed(tmp_141_s_fu_825_p1) + $signed(tmp_13_14_cast_fu_821_p1));

assign p_Val2_7_1_fu_537_p2 = (p_Val2_6_1_fu_513_p2 + tmp_13_1_fu_529_p3);

assign p_s_fu_875_p3 = ((tmp_s_fu_863_p2[0:0] === 1'b1) ? ret_V_fu_835_p4 : ret_V_1_fu_869_p2);

assign p_shl1_fu_463_p3 = {{tmp_2_fu_459_p1}, {6'd0}};

assign p_shl2_cast_fu_479_p1 = $signed(p_shl2_fu_471_p3);

assign p_shl2_fu_471_p3 = {{buffQ_V_14}, {4'd0}};

assign p_shl3_cast_fu_509_p1 = $signed(p_shl3_fu_501_p3);

assign p_shl3_fu_501_p3 = {{buffQ_V_13}, {4'd0}};

assign p_shl_fu_493_p3 = {{tmp_3_fu_489_p1}, {6'd0}};

assign ret_V_1_fu_869_p2 = (11'd1 + ret_V_fu_835_p4);

assign ret_V_fu_835_p4 = {{p_Val2_7_14_fu_829_p2[20:10]}};

assign start_V_read_read_fu_164_p2 = start_V;

assign tmp_11_fu_626_p4 = {{grp_fu_931_p3[20:5]}};

assign tmp_13_14_cast_fu_821_p1 = $signed(tmp_13_14_fu_814_p3);

assign tmp_13_14_fu_814_p3 = {{tmp_20_reg_1135}, {5'd0}};

assign tmp_13_1_fu_529_p3 = {{tmp_4_fu_519_p4}, {5'd0}};

assign tmp_13_fu_665_p4 = {{grp_fu_949_p3[20:5]}};

assign tmp_141_s_fu_825_p1 = $unsigned(p_Val2_6_14_cast_fu_811_p1);

assign tmp_15_fu_704_p4 = {{grp_fu_967_p3[20:5]}};

assign tmp_17_fu_743_p4 = {{grp_fu_985_p3[20:5]}};

assign tmp_19_fu_782_p4 = {{grp_fu_1003_p3[20:5]}};

assign tmp_21_fu_845_p3 = p_Val2_7_14_fu_829_p2[32'd20];

assign tmp_2_fu_459_p1 = buffQ_V_14[14:0];

assign tmp_3_fu_489_p1 = buffQ_V_13[14:0];

assign tmp_4_fu_519_p4 = {{p_Val2_6_fu_483_p2[20:5]}};

assign tmp_5_fu_547_p4 = {{p_Val2_7_1_fu_537_p2[20:5]}};

assign tmp_7_fu_421_p3 = {{tmp_fu_417_p1}, {5'd0}};

assign tmp_8_fu_587_p4 = {{grp_fu_913_p3[20:5]}};

assign tmp_fu_417_p1 = i_data_V_data_V_0_data_out[10:0];

assign tmp_s_fu_863_p2 = ((p_Result_2_fu_853_p4 == 5'd0) ? 1'b1 : 1'b0);

always @ (posedge ap_clk) begin
    buffQ_V_14[4:0] <= 5'b00000;
    buffQ_V_13[4:0] <= 5'b00000;
    buffQ_V_12[4:0] <= 5'b00000;
    buffQ_V_11[4:0] <= 5'b00000;
    buffQ_V_10[4:0] <= 5'b00000;
    buffQ_V_9[4:0] <= 5'b00000;
    buffQ_V_8[4:0] <= 5'b00000;
    buffQ_V_7[4:0] <= 5'b00000;
    buffQ_V_6[4:0] <= 5'b00000;
    buffQ_V_5[4:0] <= 5'b00000;
    buffQ_V_4[4:0] <= 5'b00000;
    buffQ_V_3[4:0] <= 5'b00000;
    buffQ_V_2[4:0] <= 5'b00000;
    buffQ_V_1[4:0] <= 5'b00000;
    buffQ_V_0[4:0] <= 5'b00000;
    buffQ_V_11_load_reg_1035[4:0] <= 5'b00000;
    buffQ_V_10_load_reg_1040[4:0] <= 5'b00000;
    buffQ_V_9_load_reg_1045[4:0] <= 5'b00000;
    ap_reg_pp0_iter2_buffQ_V_9_load_reg_1045[4:0] <= 5'b00000;
    buffQ_V_8_load_reg_1050[4:0] <= 5'b00000;
    ap_reg_pp0_iter2_buffQ_V_8_load_reg_1050[4:0] <= 5'b00000;
    buffQ_V_7_load_reg_1055[4:0] <= 5'b00000;
    ap_reg_pp0_iter2_buffQ_V_7_load_reg_1055[4:0] <= 5'b00000;
    ap_reg_pp0_iter3_buffQ_V_7_load_reg_1055[4:0] <= 5'b00000;
    buffQ_V_6_load_reg_1060[4:0] <= 5'b00000;
    ap_reg_pp0_iter2_buffQ_V_6_load_reg_1060[4:0] <= 5'b00000;
    ap_reg_pp0_iter3_buffQ_V_6_load_reg_1060[4:0] <= 5'b00000;
    buffQ_V_5_load_reg_1065[4:0] <= 5'b00000;
    ap_reg_pp0_iter2_buffQ_V_5_load_reg_1065[4:0] <= 5'b00000;
    ap_reg_pp0_iter3_buffQ_V_5_load_reg_1065[4:0] <= 5'b00000;
    ap_reg_pp0_iter4_buffQ_V_5_load_reg_1065[4:0] <= 5'b00000;
    buffQ_V_4_load_reg_1070[4:0] <= 5'b00000;
    ap_reg_pp0_iter2_buffQ_V_4_load_reg_1070[4:0] <= 5'b00000;
    ap_reg_pp0_iter3_buffQ_V_4_load_reg_1070[4:0] <= 5'b00000;
    ap_reg_pp0_iter4_buffQ_V_4_load_reg_1070[4:0] <= 5'b00000;
    buffQ_V_3_load_reg_1075[4:0] <= 5'b00000;
    ap_reg_pp0_iter2_buffQ_V_3_load_reg_1075[4:0] <= 5'b00000;
    ap_reg_pp0_iter3_buffQ_V_3_load_reg_1075[4:0] <= 5'b00000;
    ap_reg_pp0_iter4_buffQ_V_3_load_reg_1075[4:0] <= 5'b00000;
    ap_reg_pp0_iter5_buffQ_V_3_load_reg_1075[4:0] <= 5'b00000;
    buffQ_V_2_load_reg_1080[4:0] <= 5'b00000;
    ap_reg_pp0_iter2_buffQ_V_2_load_reg_1080[4:0] <= 5'b00000;
    ap_reg_pp0_iter3_buffQ_V_2_load_reg_1080[4:0] <= 5'b00000;
    ap_reg_pp0_iter4_buffQ_V_2_load_reg_1080[4:0] <= 5'b00000;
    ap_reg_pp0_iter5_buffQ_V_2_load_reg_1080[4:0] <= 5'b00000;
    buffQ_V_1_load_reg_1085[4:0] <= 5'b00000;
    ap_reg_pp0_iter2_buffQ_V_1_load_reg_1085[4:0] <= 5'b00000;
    ap_reg_pp0_iter3_buffQ_V_1_load_reg_1085[4:0] <= 5'b00000;
    ap_reg_pp0_iter4_buffQ_V_1_load_reg_1085[4:0] <= 5'b00000;
    ap_reg_pp0_iter5_buffQ_V_1_load_reg_1085[4:0] <= 5'b00000;
    ap_reg_pp0_iter6_buffQ_V_1_load_reg_1085[4:0] <= 5'b00000;
    buffQ_V_0_load_reg_1090[4:0] <= 5'b00000;
    ap_reg_pp0_iter2_buffQ_V_0_load_reg_1090[4:0] <= 5'b00000;
    ap_reg_pp0_iter3_buffQ_V_0_load_reg_1090[4:0] <= 5'b00000;
    ap_reg_pp0_iter4_buffQ_V_0_load_reg_1090[4:0] <= 5'b00000;
    ap_reg_pp0_iter5_buffQ_V_0_load_reg_1090[4:0] <= 5'b00000;
    ap_reg_pp0_iter6_buffQ_V_0_load_reg_1090[4:0] <= 5'b00000;
    tmp_7_reg_1095[4:0] <= 5'b00000;
    ap_reg_pp0_iter2_tmp_7_reg_1095[4:0] <= 5'b00000;
    ap_reg_pp0_iter3_tmp_7_reg_1095[4:0] <= 5'b00000;
    ap_reg_pp0_iter4_tmp_7_reg_1095[4:0] <= 5'b00000;
    ap_reg_pp0_iter5_tmp_7_reg_1095[4:0] <= 5'b00000;
    ap_reg_pp0_iter6_tmp_7_reg_1095[4:0] <= 5'b00000;
end

endmodule //MatcherRee
