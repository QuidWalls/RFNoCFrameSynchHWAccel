// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="MatcherRee,hls_ip_2017_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7k160tfbg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=8.740000,HLS_SYN_LAT=9,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=28,HLS_SYN_FF=1053,HLS_SYN_LUT=288}" *)

module MatcherRee (
        ap_clk,
        ap_rst_n,
        i_data_TDATA,
        i_data_TVALID,
        i_data_TREADY,
        i_data_TLAST,
        o_data_TDATA,
        o_data_TVALID,
        o_data_TREADY,
        o_data_TLAST,
        start_V
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst_n;
input  [31:0] i_data_TDATA;
input   i_data_TVALID;
output   i_data_TREADY;
input  [0:0] i_data_TLAST;
output  [31:0] o_data_TDATA;
output   o_data_TVALID;
input   o_data_TREADY;
output  [0:0] o_data_TLAST;
input  [0:0] start_V;

reg    ap_rst_n_inv;
reg   [31:0] i_data_V_data_V_0_data_out;
wire    i_data_V_data_V_0_vld_in;
wire    i_data_V_data_V_0_vld_out;
wire    i_data_V_data_V_0_ack_in;
reg    i_data_V_data_V_0_ack_out;
reg   [31:0] i_data_V_data_V_0_payload_A;
reg   [31:0] i_data_V_data_V_0_payload_B;
reg    i_data_V_data_V_0_sel_rd;
reg    i_data_V_data_V_0_sel_wr;
wire    i_data_V_data_V_0_sel;
wire    i_data_V_data_V_0_load_A;
wire    i_data_V_data_V_0_load_B;
reg   [1:0] i_data_V_data_V_0_state;
wire    i_data_V_data_V_0_state_cmp_full;
wire    i_data_V_last_V_0_vld_in;
reg    i_data_V_last_V_0_ack_out;
reg   [1:0] i_data_V_last_V_0_state;
reg   [31:0] o_data_V_data_V_1_data_out;
reg    o_data_V_data_V_1_vld_in;
wire    o_data_V_data_V_1_vld_out;
wire    o_data_V_data_V_1_ack_in;
wire    o_data_V_data_V_1_ack_out;
reg   [31:0] o_data_V_data_V_1_payload_A;
reg   [31:0] o_data_V_data_V_1_payload_B;
reg    o_data_V_data_V_1_sel_rd;
reg    o_data_V_data_V_1_sel_wr;
wire    o_data_V_data_V_1_sel;
wire    o_data_V_data_V_1_load_A;
wire    o_data_V_data_V_1_load_B;
reg   [1:0] o_data_V_data_V_1_state;
wire    o_data_V_data_V_1_state_cmp_full;
wire   [0:0] o_data_V_last_V_1_data_out;
reg    o_data_V_last_V_1_vld_in;
wire    o_data_V_last_V_1_vld_out;
wire    o_data_V_last_V_1_ack_in;
wire    o_data_V_last_V_1_ack_out;
reg    o_data_V_last_V_1_sel_rd;
wire    o_data_V_last_V_1_sel;
reg   [1:0] o_data_V_last_V_1_state;
reg   [0:0] currentState;
reg  signed [15:0] buffQ_V_14;
reg  signed [15:0] buffI_V_14;
reg  signed [15:0] buffQ_V_13;
reg  signed [15:0] buffI_V_13;
reg  signed [15:0] buffQ_V_12;
reg  signed [15:0] buffI_V_12;
reg  signed [15:0] buffQ_V_11;
reg  signed [15:0] buffI_V_11;
reg  signed [15:0] buffQ_V_10;
reg  signed [15:0] buffI_V_10;
reg  signed [15:0] buffQ_V_9;
reg  signed [15:0] buffI_V_9;
reg  signed [15:0] buffQ_V_8;
reg  signed [15:0] buffI_V_8;
reg  signed [15:0] buffQ_V_7;
reg  signed [15:0] buffI_V_7;
reg  signed [15:0] buffQ_V_6;
reg  signed [15:0] buffI_V_6;
reg  signed [15:0] buffQ_V_5;
reg  signed [15:0] buffI_V_5;
reg  signed [15:0] buffQ_V_4;
reg  signed [15:0] buffI_V_4;
reg  signed [15:0] buffQ_V_3;
reg  signed [15:0] buffI_V_3;
reg  signed [15:0] buffQ_V_2;
reg  signed [15:0] buffI_V_2;
reg  signed [15:0] buffQ_V_1;
reg  signed [15:0] buffI_V_1;
reg   [15:0] buffQ_V_0;
reg   [15:0] buffI_V_0;
reg    i_data_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0_flag00000000;
reg   [0:0] currentState_load_reg_1564;
reg    o_data_TDATA_blk_n;
reg    ap_enable_reg_pp0_iter8;
reg   [0:0] ap_reg_pp0_iter7_currentState_load_reg_1564;
reg    ap_enable_reg_pp0_iter9;
reg   [0:0] ap_reg_pp0_iter8_currentState_load_reg_1564;
wire   [0:0] start_V_read_read_fu_176_p2;
wire    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
reg    ap_block_state9_io;
reg    ap_block_state10_pp0_stage0_iter9;
reg    ap_block_state10_io;
reg    ap_block_pp0_stage0_flag00011001;
wire   [0:0] currentState_load_load_fu_201_p1;
reg   [0:0] ap_reg_pp0_iter1_currentState_load_reg_1564;
reg   [0:0] ap_reg_pp0_iter2_currentState_load_reg_1564;
reg   [0:0] ap_reg_pp0_iter3_currentState_load_reg_1564;
reg   [0:0] ap_reg_pp0_iter4_currentState_load_reg_1564;
reg   [0:0] ap_reg_pp0_iter5_currentState_load_reg_1564;
reg   [0:0] ap_reg_pp0_iter6_currentState_load_reg_1564;
wire   [10:0] tmp_fu_215_p1;
reg   [10:0] tmp_reg_1568;
wire   [10:0] tmp_1_fu_219_p4;
reg   [10:0] tmp_1_reg_1573;
reg   [15:0] tmp_6_reg_1578;
reg   [15:0] tmp_9_reg_1583;
reg   [15:0] buffQ_V_2_load_reg_1588;
reg   [15:0] buffI_V_2_load_reg_1593;
reg   [15:0] tmp_13_reg_1598;
reg   [15:0] tmp_14_reg_1603;
reg   [15:0] buffQ_V_4_load_reg_1608;
reg   [15:0] buffI_V_4_load_reg_1613;
reg   [15:0] tmp_17_reg_1618;
reg   [15:0] tmp_18_reg_1623;
reg   [15:0] buffQ_V_6_load_reg_1628;
reg   [15:0] buffI_V_6_load_reg_1633;
reg   [15:0] tmp_21_reg_1638;
reg   [15:0] tmp_22_reg_1643;
reg   [15:0] buffQ_V_8_load_reg_1648;
reg   [15:0] buffI_V_8_load_reg_1653;
reg   [15:0] tmp_25_reg_1658;
reg   [15:0] tmp_26_reg_1663;
reg   [15:0] buffQ_V_10_load_reg_1668;
reg   [15:0] buffI_V_10_load_reg_1673;
reg   [15:0] tmp_29_reg_1678;
reg   [15:0] tmp_30_reg_1683;
reg   [15:0] buffQ_V_12_load_reg_1688;
reg   [15:0] buffI_V_12_load_reg_1693;
reg   [15:0] tmp_33_reg_1698;
reg   [15:0] tmp_34_reg_1703;
wire   [31:0] p_Result_s_fu_1299_p3;
reg    ap_block_pp0_stage0_flag00011011;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
wire   [15:0] tmp_5_fu_363_p3;
wire   [15:0] tmp_7_fu_376_p3;
reg    ap_block_pp0_stage0_flag00001001;
wire   [9:0] tmp_2_fu_229_p1;
wire   [19:0] p_shl2_fu_241_p3;
wire   [20:0] p_shl1_fu_233_p3;
wire  signed [20:0] p_shl2_cast_fu_249_p1;
wire   [9:0] tmp_3_fu_259_p4;
wire   [19:0] p_shl4_fu_277_p3;
wire   [20:0] p_shl3_fu_269_p3;
wire  signed [20:0] p_shl4_cast_fu_285_p1;
wire   [20:0] p_Val2_7_fu_253_p2;
wire   [20:0] p_Val2_s_fu_289_p2;
wire   [14:0] tmp_4_fu_389_p1;
wire   [19:0] p_shl6_fu_401_p3;
wire  signed [20:0] p_shl6_cast_fu_409_p1;
wire   [20:0] p_shl5_fu_393_p3;
wire   [20:0] tmp_1_1_fu_419_p3;
wire   [20:0] p_Val2_7_1_fu_413_p2;
wire   [14:0] tmp_8_fu_432_p1;
wire   [19:0] p_shl7_fu_444_p3;
wire  signed [20:0] p_shl7_cast_fu_452_p1;
wire   [20:0] p_shl_fu_436_p3;
wire   [20:0] tmp_11_1_fu_462_p3;
wire   [20:0] p_Val2_10_1_fu_456_p2;
wire   [20:0] p_Val2_8_1_fu_426_p2;
wire   [15:0] tmp_s_fu_479_p4;
wire   [20:0] p_Val2_11_1_fu_469_p2;
wire   [15:0] tmp_10_fu_501_p4;
wire  signed [20:0] grp_fu_1308_p3;
wire   [15:0] tmp_11_fu_523_p4;
wire  signed [20:0] grp_fu_1317_p3;
wire   [15:0] tmp_12_fu_544_p4;
wire  signed [20:0] grp_fu_1326_p3;
wire  signed [20:0] grp_fu_1335_p3;
wire  signed [20:0] grp_fu_1344_p3;
wire   [15:0] tmp_15_fu_643_p4;
wire  signed [20:0] grp_fu_1353_p3;
wire   [15:0] tmp_16_fu_664_p4;
wire  signed [20:0] grp_fu_1362_p3;
wire  signed [20:0] grp_fu_1371_p3;
wire  signed [20:0] grp_fu_1380_p3;
wire   [15:0] tmp_19_fu_763_p4;
wire  signed [20:0] grp_fu_1389_p3;
wire   [15:0] tmp_20_fu_784_p4;
wire  signed [20:0] grp_fu_1398_p3;
wire  signed [20:0] grp_fu_1407_p3;
wire  signed [20:0] grp_fu_1416_p3;
wire   [15:0] tmp_23_fu_883_p4;
wire  signed [20:0] grp_fu_1425_p3;
wire   [15:0] tmp_24_fu_904_p4;
wire  signed [20:0] grp_fu_1434_p3;
wire  signed [20:0] grp_fu_1443_p3;
wire  signed [20:0] grp_fu_1452_p3;
wire   [15:0] tmp_27_fu_1003_p4;
wire  signed [20:0] grp_fu_1461_p3;
wire   [15:0] tmp_28_fu_1024_p4;
wire  signed [20:0] grp_fu_1470_p3;
wire  signed [20:0] grp_fu_1479_p3;
wire  signed [20:0] grp_fu_1488_p3;
wire   [15:0] tmp_31_fu_1123_p4;
wire  signed [20:0] grp_fu_1497_p3;
wire   [15:0] tmp_32_fu_1144_p4;
wire  signed [20:0] grp_fu_1506_p3;
wire  signed [20:0] grp_fu_1515_p3;
wire  signed [20:0] grp_fu_1524_p3;
wire   [15:0] tmp_35_fu_1243_p4;
wire  signed [20:0] grp_fu_1542_p3;
wire  signed [20:0] grp_fu_1533_p3;
wire   [15:0] tmp_36_fu_1273_p4;
wire  signed [20:0] grp_fu_1551_p3;
wire   [15:0] tmp_14_s_fu_1290_p4;
wire   [15:0] tmp_9_s_fu_1260_p4;
wire   [7:0] grp_fu_1308_p0;
wire   [20:0] grp_fu_1308_p2;
wire   [7:0] grp_fu_1317_p0;
wire   [20:0] grp_fu_1317_p2;
wire   [8:0] grp_fu_1326_p0;
wire   [20:0] grp_fu_1326_p2;
wire   [8:0] grp_fu_1335_p0;
wire   [20:0] grp_fu_1335_p2;
wire   [8:0] grp_fu_1344_p0;
wire   [20:0] grp_fu_1344_p2;
wire   [8:0] grp_fu_1353_p0;
wire   [20:0] grp_fu_1353_p2;
wire   [8:0] grp_fu_1362_p0;
wire   [20:0] grp_fu_1362_p2;
wire   [8:0] grp_fu_1371_p0;
wire   [20:0] grp_fu_1371_p2;
wire   [8:0] grp_fu_1380_p0;
wire   [20:0] grp_fu_1380_p2;
wire   [8:0] grp_fu_1389_p0;
wire   [20:0] grp_fu_1389_p2;
wire   [8:0] grp_fu_1398_p0;
wire   [20:0] grp_fu_1398_p2;
wire   [8:0] grp_fu_1407_p0;
wire   [20:0] grp_fu_1407_p2;
wire   [7:0] grp_fu_1416_p0;
wire   [20:0] grp_fu_1416_p2;
wire   [7:0] grp_fu_1425_p0;
wire   [20:0] grp_fu_1425_p2;
wire   [7:0] grp_fu_1434_p0;
wire   [20:0] grp_fu_1434_p2;
wire   [7:0] grp_fu_1443_p0;
wire   [20:0] grp_fu_1443_p2;
wire   [7:0] grp_fu_1452_p0;
wire   [20:0] grp_fu_1452_p2;
wire   [7:0] grp_fu_1461_p0;
wire   [20:0] grp_fu_1461_p2;
wire   [7:0] grp_fu_1470_p0;
wire   [20:0] grp_fu_1470_p2;
wire   [7:0] grp_fu_1479_p0;
wire   [20:0] grp_fu_1479_p2;
wire   [8:0] grp_fu_1488_p0;
wire   [20:0] grp_fu_1488_p2;
wire   [8:0] grp_fu_1497_p0;
wire   [20:0] grp_fu_1497_p2;
wire   [8:0] grp_fu_1506_p0;
wire   [20:0] grp_fu_1506_p2;
wire   [8:0] grp_fu_1515_p0;
wire   [20:0] grp_fu_1515_p2;
wire   [8:0] grp_fu_1524_p0;
wire   [20:0] grp_fu_1524_p2;
wire   [8:0] grp_fu_1533_p0;
wire   [20:0] grp_fu_1533_p2;
wire   [8:0] grp_fu_1542_p0;
wire   [20:0] grp_fu_1542_p2;
wire   [8:0] grp_fu_1551_p0;
wire   [20:0] grp_fu_1551_p2;
reg   [0:0] ap_NS_fsm;
wire    ap_reset_idle_pp0;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 i_data_V_data_V_0_sel_rd = 1'b0;
#0 i_data_V_data_V_0_sel_wr = 1'b0;
#0 i_data_V_data_V_0_state = 2'd0;
#0 i_data_V_last_V_0_state = 2'd0;
#0 o_data_V_data_V_1_sel_rd = 1'b0;
#0 o_data_V_data_V_1_sel_wr = 1'b0;
#0 o_data_V_data_V_1_state = 2'd0;
#0 o_data_V_last_V_1_sel_rd = 1'b0;
#0 o_data_V_last_V_1_state = 2'd0;
#0 currentState = 1'd0;
#0 buffQ_V_14 = 16'd0;
#0 buffI_V_14 = 16'd0;
#0 buffQ_V_13 = 16'd0;
#0 buffI_V_13 = 16'd0;
#0 buffQ_V_12 = 16'd0;
#0 buffI_V_12 = 16'd0;
#0 buffQ_V_11 = 16'd0;
#0 buffI_V_11 = 16'd0;
#0 buffQ_V_10 = 16'd0;
#0 buffI_V_10 = 16'd0;
#0 buffQ_V_9 = 16'd0;
#0 buffI_V_9 = 16'd0;
#0 buffQ_V_8 = 16'd0;
#0 buffI_V_8 = 16'd0;
#0 buffQ_V_7 = 16'd0;
#0 buffI_V_7 = 16'd0;
#0 buffQ_V_6 = 16'd0;
#0 buffI_V_6 = 16'd0;
#0 buffQ_V_5 = 16'd0;
#0 buffI_V_5 = 16'd0;
#0 buffQ_V_4 = 16'd0;
#0 buffI_V_4 = 16'd0;
#0 buffQ_V_3 = 16'd0;
#0 buffI_V_3 = 16'd0;
#0 buffQ_V_2 = 16'd0;
#0 buffI_V_2 = 16'd0;
#0 buffQ_V_1 = 16'd0;
#0 buffI_V_1 = 16'd0;
#0 buffQ_V_0 = 16'd0;
#0 buffI_V_0 = 16'd0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
end

MatcherRee_mac_mubkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 21 ))
MatcherRee_mac_mubkb_U0(
    .din0(grp_fu_1308_p0),
    .din1(buffQ_V_1),
    .din2(grp_fu_1308_p2),
    .dout(grp_fu_1308_p3)
);

MatcherRee_mac_mubkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 21 ))
MatcherRee_mac_mubkb_U1(
    .din0(grp_fu_1317_p0),
    .din1(buffI_V_1),
    .din2(grp_fu_1317_p2),
    .dout(grp_fu_1317_p3)
);

MatcherRee_mac_mucud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 21 ))
MatcherRee_mac_mucud_U2(
    .din0(grp_fu_1326_p0),
    .din1(buffQ_V_2),
    .din2(grp_fu_1326_p2),
    .dout(grp_fu_1326_p3)
);

MatcherRee_mac_mucud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 21 ))
MatcherRee_mac_mucud_U3(
    .din0(grp_fu_1335_p0),
    .din1(buffI_V_2),
    .din2(grp_fu_1335_p2),
    .dout(grp_fu_1335_p3)
);

MatcherRee_mac_mucud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 21 ))
MatcherRee_mac_mucud_U4(
    .din0(grp_fu_1344_p0),
    .din1(buffQ_V_3),
    .din2(grp_fu_1344_p2),
    .dout(grp_fu_1344_p3)
);

MatcherRee_mac_mucud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 21 ))
MatcherRee_mac_mucud_U5(
    .din0(grp_fu_1353_p0),
    .din1(buffI_V_3),
    .din2(grp_fu_1353_p2),
    .dout(grp_fu_1353_p3)
);

MatcherRee_mac_mucud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 21 ))
MatcherRee_mac_mucud_U6(
    .din0(grp_fu_1362_p0),
    .din1(buffQ_V_4),
    .din2(grp_fu_1362_p2),
    .dout(grp_fu_1362_p3)
);

MatcherRee_mac_mucud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 21 ))
MatcherRee_mac_mucud_U7(
    .din0(grp_fu_1371_p0),
    .din1(buffI_V_4),
    .din2(grp_fu_1371_p2),
    .dout(grp_fu_1371_p3)
);

MatcherRee_mac_mucud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 21 ))
MatcherRee_mac_mucud_U8(
    .din0(grp_fu_1380_p0),
    .din1(buffQ_V_5),
    .din2(grp_fu_1380_p2),
    .dout(grp_fu_1380_p3)
);

MatcherRee_mac_mucud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 21 ))
MatcherRee_mac_mucud_U9(
    .din0(grp_fu_1389_p0),
    .din1(buffI_V_5),
    .din2(grp_fu_1389_p2),
    .dout(grp_fu_1389_p3)
);

MatcherRee_mac_mucud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 21 ))
MatcherRee_mac_mucud_U10(
    .din0(grp_fu_1398_p0),
    .din1(buffQ_V_6),
    .din2(grp_fu_1398_p2),
    .dout(grp_fu_1398_p3)
);

MatcherRee_mac_mucud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 21 ))
MatcherRee_mac_mucud_U11(
    .din0(grp_fu_1407_p0),
    .din1(buffI_V_6),
    .din2(grp_fu_1407_p2),
    .dout(grp_fu_1407_p3)
);

MatcherRee_mac_mubkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 21 ))
MatcherRee_mac_mubkb_U12(
    .din0(grp_fu_1416_p0),
    .din1(buffQ_V_7),
    .din2(grp_fu_1416_p2),
    .dout(grp_fu_1416_p3)
);

MatcherRee_mac_mubkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 21 ))
MatcherRee_mac_mubkb_U13(
    .din0(grp_fu_1425_p0),
    .din1(buffI_V_7),
    .din2(grp_fu_1425_p2),
    .dout(grp_fu_1425_p3)
);

MatcherRee_mac_mubkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 21 ))
MatcherRee_mac_mubkb_U14(
    .din0(grp_fu_1434_p0),
    .din1(buffQ_V_8),
    .din2(grp_fu_1434_p2),
    .dout(grp_fu_1434_p3)
);

MatcherRee_mac_mubkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 21 ))
MatcherRee_mac_mubkb_U15(
    .din0(grp_fu_1443_p0),
    .din1(buffI_V_8),
    .din2(grp_fu_1443_p2),
    .dout(grp_fu_1443_p3)
);

MatcherRee_mac_mubkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 21 ))
MatcherRee_mac_mubkb_U16(
    .din0(grp_fu_1452_p0),
    .din1(buffQ_V_9),
    .din2(grp_fu_1452_p2),
    .dout(grp_fu_1452_p3)
);

MatcherRee_mac_mubkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 21 ))
MatcherRee_mac_mubkb_U17(
    .din0(grp_fu_1461_p0),
    .din1(buffI_V_9),
    .din2(grp_fu_1461_p2),
    .dout(grp_fu_1461_p3)
);

MatcherRee_mac_mubkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 21 ))
MatcherRee_mac_mubkb_U18(
    .din0(grp_fu_1470_p0),
    .din1(buffQ_V_10),
    .din2(grp_fu_1470_p2),
    .dout(grp_fu_1470_p3)
);

MatcherRee_mac_mubkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 21 ))
MatcherRee_mac_mubkb_U19(
    .din0(grp_fu_1479_p0),
    .din1(buffI_V_10),
    .din2(grp_fu_1479_p2),
    .dout(grp_fu_1479_p3)
);

MatcherRee_mac_mucud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 21 ))
MatcherRee_mac_mucud_U20(
    .din0(grp_fu_1488_p0),
    .din1(buffQ_V_11),
    .din2(grp_fu_1488_p2),
    .dout(grp_fu_1488_p3)
);

MatcherRee_mac_mucud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 21 ))
MatcherRee_mac_mucud_U21(
    .din0(grp_fu_1497_p0),
    .din1(buffI_V_11),
    .din2(grp_fu_1497_p2),
    .dout(grp_fu_1497_p3)
);

MatcherRee_mac_mucud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 21 ))
MatcherRee_mac_mucud_U22(
    .din0(grp_fu_1506_p0),
    .din1(buffQ_V_12),
    .din2(grp_fu_1506_p2),
    .dout(grp_fu_1506_p3)
);

MatcherRee_mac_mucud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 21 ))
MatcherRee_mac_mucud_U23(
    .din0(grp_fu_1515_p0),
    .din1(buffI_V_12),
    .din2(grp_fu_1515_p2),
    .dout(grp_fu_1515_p3)
);

MatcherRee_mac_mucud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 21 ))
MatcherRee_mac_mucud_U24(
    .din0(grp_fu_1524_p0),
    .din1(buffQ_V_13),
    .din2(grp_fu_1524_p2),
    .dout(grp_fu_1524_p3)
);

MatcherRee_mac_mucud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 21 ))
MatcherRee_mac_mucud_U25(
    .din0(grp_fu_1533_p0),
    .din1(buffI_V_13),
    .din2(grp_fu_1533_p2),
    .dout(grp_fu_1533_p3)
);

MatcherRee_mac_mucud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 21 ))
MatcherRee_mac_mucud_U26(
    .din0(grp_fu_1542_p0),
    .din1(buffQ_V_14),
    .din2(grp_fu_1542_p2),
    .dout(grp_fu_1542_p3)
);

MatcherRee_mac_mucud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 21 ))
MatcherRee_mac_mucud_U27(
    .din0(grp_fu_1551_p0),
    .din1(buffI_V_14),
    .din2(grp_fu_1551_p2),
    .dout(grp_fu_1551_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        currentState <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == 1'b1) & (1'd0 == currentState_load_load_fu_201_p1) & (1'd1 == start_V_read_read_fu_176_p2))) begin
            currentState <= 1'd1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        i_data_V_data_V_0_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == i_data_V_data_V_0_ack_out) & (1'b1 == i_data_V_data_V_0_vld_out))) begin
            i_data_V_data_V_0_sel_rd <= ~i_data_V_data_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        i_data_V_data_V_0_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == i_data_V_data_V_0_vld_in) & (1'b1 == i_data_V_data_V_0_ack_in))) begin
            i_data_V_data_V_0_sel_wr <= ~i_data_V_data_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        i_data_V_data_V_0_state <= 2'd0;
    end else begin
        if ((((1'b0 == i_data_V_data_V_0_vld_in) & (1'b1 == i_data_V_data_V_0_ack_out) & (i_data_V_data_V_0_state == 2'd3)) | ((1'b0 == i_data_V_data_V_0_vld_in) & (i_data_V_data_V_0_state == 2'd2)))) begin
            i_data_V_data_V_0_state <= 2'd2;
        end else if ((((1'b1 == i_data_V_data_V_0_vld_in) & (1'b0 == i_data_V_data_V_0_ack_out) & (i_data_V_data_V_0_state == 2'd3)) | ((1'b0 == i_data_V_data_V_0_ack_out) & (i_data_V_data_V_0_state == 2'd1)))) begin
            i_data_V_data_V_0_state <= 2'd1;
        end else if ((((1'b1 == i_data_V_data_V_0_vld_in) & (i_data_V_data_V_0_state == 2'd2)) | ((1'b1 == i_data_V_data_V_0_ack_out) & (i_data_V_data_V_0_state == 2'd1)) | ((i_data_V_data_V_0_state == 2'd3) & ~((1'b1 == i_data_V_data_V_0_vld_in) & (1'b0 == i_data_V_data_V_0_ack_out)) & ~((1'b0 == i_data_V_data_V_0_vld_in) & (1'b1 == i_data_V_data_V_0_ack_out))))) begin
            i_data_V_data_V_0_state <= 2'd3;
        end else begin
            i_data_V_data_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        i_data_V_last_V_0_state <= 2'd0;
    end else begin
        if ((((1'b0 == i_data_V_last_V_0_vld_in) & (1'b1 == i_data_V_last_V_0_ack_out) & (2'd3 == i_data_V_last_V_0_state)) | ((1'b0 == i_data_V_last_V_0_vld_in) & (2'd2 == i_data_V_last_V_0_state)))) begin
            i_data_V_last_V_0_state <= 2'd2;
        end else if ((((1'b1 == i_data_V_last_V_0_vld_in) & (1'b0 == i_data_V_last_V_0_ack_out) & (2'd3 == i_data_V_last_V_0_state)) | ((1'b0 == i_data_V_last_V_0_ack_out) & (2'd1 == i_data_V_last_V_0_state)))) begin
            i_data_V_last_V_0_state <= 2'd1;
        end else if ((((1'b1 == i_data_V_last_V_0_vld_in) & (2'd2 == i_data_V_last_V_0_state)) | ((1'b1 == i_data_V_last_V_0_ack_out) & (2'd1 == i_data_V_last_V_0_state)) | ((2'd3 == i_data_V_last_V_0_state) & ~((1'b1 == i_data_V_last_V_0_vld_in) & (1'b0 == i_data_V_last_V_0_ack_out)) & ~((1'b0 == i_data_V_last_V_0_vld_in) & (1'b1 == i_data_V_last_V_0_ack_out))))) begin
            i_data_V_last_V_0_state <= 2'd3;
        end else begin
            i_data_V_last_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        o_data_V_data_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == o_data_V_data_V_1_ack_out) & (1'b1 == o_data_V_data_V_1_vld_out))) begin
            o_data_V_data_V_1_sel_rd <= ~o_data_V_data_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        o_data_V_data_V_1_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == o_data_V_data_V_1_vld_in) & (1'b1 == o_data_V_data_V_1_ack_in))) begin
            o_data_V_data_V_1_sel_wr <= ~o_data_V_data_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        o_data_V_data_V_1_state <= 2'd0;
    end else begin
        if ((((1'b0 == o_data_V_data_V_1_vld_in) & (1'b1 == o_data_V_data_V_1_ack_out) & (2'd3 == o_data_V_data_V_1_state)) | ((1'b0 == o_data_V_data_V_1_vld_in) & (2'd2 == o_data_V_data_V_1_state)))) begin
            o_data_V_data_V_1_state <= 2'd2;
        end else if ((((1'b1 == o_data_V_data_V_1_vld_in) & (1'b0 == o_data_V_data_V_1_ack_out) & (2'd3 == o_data_V_data_V_1_state)) | ((1'b0 == o_data_V_data_V_1_ack_out) & (2'd1 == o_data_V_data_V_1_state)))) begin
            o_data_V_data_V_1_state <= 2'd1;
        end else if ((((1'b1 == o_data_V_data_V_1_vld_in) & (2'd2 == o_data_V_data_V_1_state)) | ((1'b1 == o_data_V_data_V_1_ack_out) & (2'd1 == o_data_V_data_V_1_state)) | ((2'd3 == o_data_V_data_V_1_state) & ~((1'b1 == o_data_V_data_V_1_vld_in) & (1'b0 == o_data_V_data_V_1_ack_out)) & ~((1'b0 == o_data_V_data_V_1_vld_in) & (1'b1 == o_data_V_data_V_1_ack_out))))) begin
            o_data_V_data_V_1_state <= 2'd3;
        end else begin
            o_data_V_data_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        o_data_V_last_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == o_data_V_last_V_1_ack_out) & (1'b1 == o_data_V_last_V_1_vld_out))) begin
            o_data_V_last_V_1_sel_rd <= ~o_data_V_last_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        o_data_V_last_V_1_state <= 2'd0;
    end else begin
        if ((((1'b0 == o_data_V_last_V_1_vld_in) & (1'b1 == o_data_V_last_V_1_ack_out) & (2'd3 == o_data_V_last_V_1_state)) | ((1'b0 == o_data_V_last_V_1_vld_in) & (2'd2 == o_data_V_last_V_1_state)))) begin
            o_data_V_last_V_1_state <= 2'd2;
        end else if ((((1'b1 == o_data_V_last_V_1_vld_in) & (1'b0 == o_data_V_last_V_1_ack_out) & (2'd3 == o_data_V_last_V_1_state)) | ((1'b0 == o_data_V_last_V_1_ack_out) & (2'd1 == o_data_V_last_V_1_state)))) begin
            o_data_V_last_V_1_state <= 2'd1;
        end else if ((((1'b1 == o_data_V_last_V_1_vld_in) & (2'd2 == o_data_V_last_V_1_state)) | ((1'b1 == o_data_V_last_V_1_ack_out) & (2'd1 == o_data_V_last_V_1_state)) | ((2'd3 == o_data_V_last_V_1_state) & ~((1'b1 == o_data_V_last_V_1_vld_in) & (1'b0 == o_data_V_last_V_1_ack_out)) & ~((1'b0 == o_data_V_last_V_1_vld_in) & (1'b1 == o_data_V_last_V_1_ack_out))))) begin
            o_data_V_last_V_1_state <= 2'd3;
        end else begin
            o_data_V_last_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        ap_reg_pp0_iter1_currentState_load_reg_1564 <= currentState_load_reg_1564;
        currentState_load_reg_1564 <= currentState;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_block_pp0_stage0_flag00011001 == 1'b0)) begin
        ap_reg_pp0_iter2_currentState_load_reg_1564 <= ap_reg_pp0_iter1_currentState_load_reg_1564;
        ap_reg_pp0_iter3_currentState_load_reg_1564 <= ap_reg_pp0_iter2_currentState_load_reg_1564;
        ap_reg_pp0_iter4_currentState_load_reg_1564 <= ap_reg_pp0_iter3_currentState_load_reg_1564;
        ap_reg_pp0_iter5_currentState_load_reg_1564 <= ap_reg_pp0_iter4_currentState_load_reg_1564;
        ap_reg_pp0_iter6_currentState_load_reg_1564 <= ap_reg_pp0_iter5_currentState_load_reg_1564;
        ap_reg_pp0_iter7_currentState_load_reg_1564 <= ap_reg_pp0_iter6_currentState_load_reg_1564;
        ap_reg_pp0_iter8_currentState_load_reg_1564 <= ap_reg_pp0_iter7_currentState_load_reg_1564;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd1 == ap_reg_pp0_iter1_currentState_load_reg_1564) & (1'b1 == ap_enable_reg_pp0_iter2))) begin
        buffI_V_0[15 : 5] <= tmp_7_fu_376_p3[15 : 5];
        buffI_V_1[15 : 5] <= buffI_V_0[15 : 5];
        buffI_V_2[15 : 5] <= buffI_V_1[15 : 5];
        buffQ_V_0[15 : 5] <= tmp_5_fu_363_p3[15 : 5];
        buffQ_V_1[15 : 5] <= buffQ_V_0[15 : 5];
        buffQ_V_2[15 : 5] <= buffQ_V_1[15 : 5];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd1 == ap_reg_pp0_iter5_currentState_load_reg_1564) & (1'b1 == ap_enable_reg_pp0_iter6))) begin
        buffI_V_10[15 : 5] <= buffI_V_9[15 : 5];
        buffI_V_9[15 : 5] <= buffI_V_8_load_reg_1653[15 : 5];
        buffQ_V_10[15 : 5] <= buffQ_V_9[15 : 5];
        buffQ_V_9[15 : 5] <= buffQ_V_8_load_reg_1648[15 : 5];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd1 == ap_reg_pp0_iter5_currentState_load_reg_1564))) begin
        buffI_V_10_load_reg_1673[15 : 5] <= buffI_V_10[15 : 5];
        buffQ_V_10_load_reg_1668[15 : 5] <= buffQ_V_10[15 : 5];
        tmp_29_reg_1678 <= {{grp_fu_1470_p3[20:5]}};
        tmp_30_reg_1683 <= {{grp_fu_1479_p3[20:5]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd1 == ap_reg_pp0_iter6_currentState_load_reg_1564) & (1'b1 == ap_enable_reg_pp0_iter7))) begin
        buffI_V_11[15 : 5] <= buffI_V_10_load_reg_1673[15 : 5];
        buffI_V_12[15 : 5] <= buffI_V_11[15 : 5];
        buffQ_V_11[15 : 5] <= buffQ_V_10_load_reg_1668[15 : 5];
        buffQ_V_12[15 : 5] <= buffQ_V_11[15 : 5];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd1 == ap_reg_pp0_iter6_currentState_load_reg_1564))) begin
        buffI_V_12_load_reg_1693[15 : 5] <= buffI_V_12[15 : 5];
        buffQ_V_12_load_reg_1688[15 : 5] <= buffQ_V_12[15 : 5];
        tmp_33_reg_1698 <= {{grp_fu_1506_p3[20:5]}};
        tmp_34_reg_1703 <= {{grp_fu_1515_p3[20:5]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter8) & (1'd1 == ap_reg_pp0_iter7_currentState_load_reg_1564) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        buffI_V_13[15 : 5] <= buffI_V_12_load_reg_1693[15 : 5];
        buffI_V_14[15 : 5] <= buffI_V_13[15 : 5];
        buffQ_V_13[15 : 5] <= buffQ_V_12_load_reg_1688[15 : 5];
        buffQ_V_14[15 : 5] <= buffQ_V_13[15 : 5];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd1 == ap_reg_pp0_iter1_currentState_load_reg_1564))) begin
        buffI_V_2_load_reg_1593[15 : 5] <= buffI_V_2[15 : 5];
        buffQ_V_2_load_reg_1588[15 : 5] <= buffQ_V_2[15 : 5];
        tmp_13_reg_1598 <= {{grp_fu_1326_p3[20:5]}};
        tmp_14_reg_1603 <= {{grp_fu_1335_p3[20:5]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd1 == ap_reg_pp0_iter2_currentState_load_reg_1564) & (1'b1 == ap_enable_reg_pp0_iter3))) begin
        buffI_V_3[15 : 5] <= buffI_V_2_load_reg_1593[15 : 5];
        buffI_V_4[15 : 5] <= buffI_V_3[15 : 5];
        buffQ_V_3[15 : 5] <= buffQ_V_2_load_reg_1588[15 : 5];
        buffQ_V_4[15 : 5] <= buffQ_V_3[15 : 5];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd1 == ap_reg_pp0_iter2_currentState_load_reg_1564))) begin
        buffI_V_4_load_reg_1613[15 : 5] <= buffI_V_4[15 : 5];
        buffQ_V_4_load_reg_1608[15 : 5] <= buffQ_V_4[15 : 5];
        tmp_17_reg_1618 <= {{grp_fu_1362_p3[20:5]}};
        tmp_18_reg_1623 <= {{grp_fu_1371_p3[20:5]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd1 == ap_reg_pp0_iter3_currentState_load_reg_1564) & (1'b1 == ap_enable_reg_pp0_iter4))) begin
        buffI_V_5[15 : 5] <= buffI_V_4_load_reg_1613[15 : 5];
        buffI_V_6[15 : 5] <= buffI_V_5[15 : 5];
        buffQ_V_5[15 : 5] <= buffQ_V_4_load_reg_1608[15 : 5];
        buffQ_V_6[15 : 5] <= buffQ_V_5[15 : 5];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd1 == ap_reg_pp0_iter3_currentState_load_reg_1564))) begin
        buffI_V_6_load_reg_1633[15 : 5] <= buffI_V_6[15 : 5];
        buffQ_V_6_load_reg_1628[15 : 5] <= buffQ_V_6[15 : 5];
        tmp_21_reg_1638 <= {{grp_fu_1398_p3[20:5]}};
        tmp_22_reg_1643 <= {{grp_fu_1407_p3[20:5]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd1 == ap_reg_pp0_iter4_currentState_load_reg_1564) & (1'b1 == ap_enable_reg_pp0_iter5))) begin
        buffI_V_7[15 : 5] <= buffI_V_6_load_reg_1633[15 : 5];
        buffI_V_8[15 : 5] <= buffI_V_7[15 : 5];
        buffQ_V_7[15 : 5] <= buffQ_V_6_load_reg_1628[15 : 5];
        buffQ_V_8[15 : 5] <= buffQ_V_7[15 : 5];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd1 == ap_reg_pp0_iter4_currentState_load_reg_1564))) begin
        buffI_V_8_load_reg_1653[15 : 5] <= buffI_V_8[15 : 5];
        buffQ_V_8_load_reg_1648[15 : 5] <= buffQ_V_8[15 : 5];
        tmp_25_reg_1658 <= {{grp_fu_1434_p3[20:5]}};
        tmp_26_reg_1663 <= {{grp_fu_1443_p3[20:5]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == i_data_V_data_V_0_load_A)) begin
        i_data_V_data_V_0_payload_A <= i_data_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == i_data_V_data_V_0_load_B)) begin
        i_data_V_data_V_0_payload_B <= i_data_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == o_data_V_data_V_1_load_A)) begin
        o_data_V_data_V_1_payload_A <= p_Result_s_fu_1299_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == o_data_V_data_V_1_load_B)) begin
        o_data_V_data_V_1_payload_B <= p_Result_s_fu_1299_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'd1 == currentState_load_reg_1564) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        tmp_1_reg_1573 <= {{i_data_V_data_V_0_data_out[26:16]}};
        tmp_6_reg_1578 <= {{p_Val2_7_fu_253_p2[20:5]}};
        tmp_9_reg_1583 <= {{p_Val2_s_fu_289_p2[20:5]}};
        tmp_reg_1568 <= tmp_fu_215_p1;
    end
end

always @ (*) begin
    if (((1'b0 == 1'b1) & (1'b0 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_enable_reg_pp0_iter2) & (1'b0 == ap_enable_reg_pp0_iter3) & (1'b0 == ap_enable_reg_pp0_iter4) & (1'b0 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_enable_reg_pp0_iter6) & (1'b0 == ap_enable_reg_pp0_iter7) & (1'b0 == ap_enable_reg_pp0_iter8) & (1'b0 == ap_enable_reg_pp0_iter9))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

assign ap_reset_idle_pp0 = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'd1 == currentState_load_reg_1564))) begin
        i_data_TDATA_blk_n = i_data_V_data_V_0_state[1'd0];
    end else begin
        i_data_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'd1 == currentState_load_reg_1564) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        i_data_V_data_V_0_ack_out = 1'b1;
    end else begin
        i_data_V_data_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == i_data_V_data_V_0_sel)) begin
        i_data_V_data_V_0_data_out = i_data_V_data_V_0_payload_B;
    end else begin
        i_data_V_data_V_0_data_out = i_data_V_data_V_0_payload_A;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'd1 == currentState_load_reg_1564) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        i_data_V_last_V_0_ack_out = 1'b1;
    end else begin
        i_data_V_last_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter8) & (1'd1 == ap_reg_pp0_iter7_currentState_load_reg_1564)) | ((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter9) & (1'd1 == ap_reg_pp0_iter8_currentState_load_reg_1564)))) begin
        o_data_TDATA_blk_n = o_data_V_data_V_1_state[1'd1];
    end else begin
        o_data_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == o_data_V_data_V_1_sel)) begin
        o_data_V_data_V_1_data_out = o_data_V_data_V_1_payload_B;
    end else begin
        o_data_V_data_V_1_data_out = o_data_V_data_V_1_payload_A;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter8) & (1'd1 == ap_reg_pp0_iter7_currentState_load_reg_1564) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        o_data_V_data_V_1_vld_in = 1'b1;
    end else begin
        o_data_V_data_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter8) & (1'd1 == ap_reg_pp0_iter7_currentState_load_reg_1564) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        o_data_V_last_V_1_vld_in = 1'b1;
    end else begin
        o_data_V_last_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0_flag00000000 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_flag00001001 = (((1'b1 == ap_enable_reg_pp0_iter1) & (1'd1 == currentState_load_reg_1564) & (1'b0 == i_data_V_data_V_0_vld_out)) | ((1'b1 == ap_enable_reg_pp0_iter9) & ((1'b0 == o_data_V_data_V_1_ack_in) | (1'b0 == o_data_V_last_V_1_ack_in))));
end

always @ (*) begin
    ap_block_pp0_stage0_flag00011001 = (((1'b1 == ap_enable_reg_pp0_iter1) & (1'd1 == currentState_load_reg_1564) & (1'b0 == i_data_V_data_V_0_vld_out)) | ((1'b1 == ap_enable_reg_pp0_iter8) & (1'b1 == ap_block_state9_io)) | ((1'b1 == ap_enable_reg_pp0_iter9) & ((1'b0 == o_data_V_data_V_1_ack_in) | (1'b0 == o_data_V_last_V_1_ack_in) | (1'b1 == ap_block_state10_io))));
end

always @ (*) begin
    ap_block_pp0_stage0_flag00011011 = (((1'b1 == ap_enable_reg_pp0_iter1) & (1'd1 == currentState_load_reg_1564) & (1'b0 == i_data_V_data_V_0_vld_out)) | ((1'b1 == ap_enable_reg_pp0_iter8) & (1'b1 == ap_block_state9_io)) | ((1'b1 == ap_enable_reg_pp0_iter9) & ((1'b0 == o_data_V_data_V_1_ack_in) | (1'b0 == o_data_V_last_V_1_ack_in) | (1'b1 == ap_block_state10_io))));
end

always @ (*) begin
    ap_block_state10_io = ((1'd1 == ap_reg_pp0_iter8_currentState_load_reg_1564) & (1'b0 == o_data_V_data_V_1_ack_in));
end

always @ (*) begin
    ap_block_state10_pp0_stage0_iter9 = ((1'b0 == o_data_V_data_V_1_ack_in) | (1'b0 == o_data_V_last_V_1_ack_in));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((1'd1 == currentState_load_reg_1564) & (1'b0 == i_data_V_data_V_0_vld_out));
end

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state9_io = ((1'd1 == ap_reg_pp0_iter7_currentState_load_reg_1564) & (1'b0 == o_data_V_data_V_1_ack_in));
end

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign currentState_load_load_fu_201_p1 = currentState;

assign grp_fu_1308_p0 = 21'd118;

assign grp_fu_1308_p2 = {{tmp_s_fu_479_p4}, {5'd0}};

assign grp_fu_1317_p0 = 21'd118;

assign grp_fu_1317_p2 = {{tmp_10_fu_501_p4}, {5'd0}};

assign grp_fu_1326_p0 = 21'd156;

assign grp_fu_1326_p2 = {{tmp_11_fu_523_p4}, {5'd0}};

assign grp_fu_1335_p0 = 21'd156;

assign grp_fu_1335_p2 = {{tmp_12_fu_544_p4}, {5'd0}};

assign grp_fu_1344_p0 = 21'd169;

assign grp_fu_1344_p2 = {{tmp_13_reg_1598}, {5'd0}};

assign grp_fu_1353_p0 = 21'd169;

assign grp_fu_1353_p2 = {{tmp_14_reg_1603}, {5'd0}};

assign grp_fu_1362_p0 = 21'd204;

assign grp_fu_1362_p2 = {{tmp_15_fu_643_p4}, {5'd0}};

assign grp_fu_1371_p0 = 21'd204;

assign grp_fu_1371_p2 = {{tmp_16_fu_664_p4}, {5'd0}};

assign grp_fu_1380_p0 = 21'd182;

assign grp_fu_1380_p2 = {{tmp_17_reg_1618}, {5'd0}};

assign grp_fu_1389_p0 = 21'd182;

assign grp_fu_1389_p2 = {{tmp_18_reg_1623}, {5'd0}};

assign grp_fu_1398_p0 = 21'd140;

assign grp_fu_1398_p2 = {{tmp_19_fu_763_p4}, {5'd0}};

assign grp_fu_1407_p0 = 21'd140;

assign grp_fu_1407_p2 = {{tmp_20_fu_784_p4}, {5'd0}};

assign grp_fu_1416_p0 = 21'd121;

assign grp_fu_1416_p2 = {{tmp_21_reg_1638}, {5'd0}};

assign grp_fu_1425_p0 = 21'd121;

assign grp_fu_1425_p2 = {{tmp_22_reg_1643}, {5'd0}};

assign grp_fu_1434_p0 = 21'd92;

assign grp_fu_1434_p2 = {{tmp_23_fu_883_p4}, {5'd0}};

assign grp_fu_1443_p0 = 21'd92;

assign grp_fu_1443_p2 = {{tmp_24_fu_904_p4}, {5'd0}};

assign grp_fu_1452_p0 = 21'd73;

assign grp_fu_1452_p2 = {{tmp_25_reg_1658}, {5'd0}};

assign grp_fu_1461_p0 = 21'd73;

assign grp_fu_1461_p2 = {{tmp_26_reg_1663}, {5'd0}};

assign grp_fu_1470_p0 = 21'd105;

assign grp_fu_1470_p2 = {{tmp_27_fu_1003_p4}, {5'd0}};

assign grp_fu_1479_p0 = 21'd105;

assign grp_fu_1479_p2 = {{tmp_28_fu_1024_p4}, {5'd0}};

assign grp_fu_1488_p0 = 21'd147;

assign grp_fu_1488_p2 = {{tmp_29_reg_1678}, {5'd0}};

assign grp_fu_1497_p0 = 21'd147;

assign grp_fu_1497_p2 = {{tmp_30_reg_1683}, {5'd0}};

assign grp_fu_1506_p0 = 21'd179;

assign grp_fu_1506_p2 = {{tmp_31_fu_1123_p4}, {5'd0}};

assign grp_fu_1515_p0 = 21'd179;

assign grp_fu_1515_p2 = {{tmp_32_fu_1144_p4}, {5'd0}};

assign grp_fu_1524_p0 = 21'd211;

assign grp_fu_1524_p2 = {{tmp_33_reg_1698}, {5'd0}};

assign grp_fu_1533_p0 = 21'd211;

assign grp_fu_1533_p2 = {{tmp_34_reg_1703}, {5'd0}};

assign grp_fu_1542_p0 = 21'd208;

assign grp_fu_1542_p2 = {{tmp_35_fu_1243_p4}, {5'd0}};

assign grp_fu_1551_p0 = 21'd208;

assign grp_fu_1551_p2 = {{tmp_36_fu_1273_p4}, {5'd0}};

assign i_data_TREADY = i_data_V_last_V_0_state[1'd1];

assign i_data_V_data_V_0_ack_in = i_data_V_data_V_0_state[1'd1];

assign i_data_V_data_V_0_load_A = (i_data_V_data_V_0_state_cmp_full & ~i_data_V_data_V_0_sel_wr);

assign i_data_V_data_V_0_load_B = (i_data_V_data_V_0_sel_wr & i_data_V_data_V_0_state_cmp_full);

assign i_data_V_data_V_0_sel = i_data_V_data_V_0_sel_rd;

assign i_data_V_data_V_0_state_cmp_full = ((i_data_V_data_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign i_data_V_data_V_0_vld_in = i_data_TVALID;

assign i_data_V_data_V_0_vld_out = i_data_V_data_V_0_state[1'd0];

assign i_data_V_last_V_0_vld_in = i_data_TVALID;

assign o_data_TDATA = o_data_V_data_V_1_data_out;

assign o_data_TLAST = o_data_V_last_V_1_data_out;

assign o_data_TVALID = o_data_V_last_V_1_state[1'd0];

assign o_data_V_data_V_1_ack_in = o_data_V_data_V_1_state[1'd1];

assign o_data_V_data_V_1_ack_out = o_data_TREADY;

assign o_data_V_data_V_1_load_A = (o_data_V_data_V_1_state_cmp_full & ~o_data_V_data_V_1_sel_wr);

assign o_data_V_data_V_1_load_B = (o_data_V_data_V_1_sel_wr & o_data_V_data_V_1_state_cmp_full);

assign o_data_V_data_V_1_sel = o_data_V_data_V_1_sel_rd;

assign o_data_V_data_V_1_state_cmp_full = ((o_data_V_data_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign o_data_V_data_V_1_vld_out = o_data_V_data_V_1_state[1'd0];

assign o_data_V_last_V_1_ack_in = o_data_V_last_V_1_state[1'd1];

assign o_data_V_last_V_1_ack_out = o_data_TREADY;

assign o_data_V_last_V_1_data_out = 1'd0;

assign o_data_V_last_V_1_sel = o_data_V_last_V_1_sel_rd;

assign o_data_V_last_V_1_vld_out = o_data_V_last_V_1_state[1'd0];

assign p_Result_s_fu_1299_p3 = {{tmp_14_s_fu_1290_p4}, {tmp_9_s_fu_1260_p4}};

assign p_Val2_10_1_fu_456_p2 = ($signed(p_shl7_cast_fu_452_p1) + $signed(p_shl_fu_436_p3));

assign p_Val2_11_1_fu_469_p2 = (tmp_11_1_fu_462_p3 + p_Val2_10_1_fu_456_p2);

assign p_Val2_7_1_fu_413_p2 = ($signed(p_shl6_cast_fu_409_p1) + $signed(p_shl5_fu_393_p3));

assign p_Val2_7_fu_253_p2 = ($signed(p_shl1_fu_233_p3) - $signed(p_shl2_cast_fu_249_p1));

assign p_Val2_8_1_fu_426_p2 = (tmp_1_1_fu_419_p3 + p_Val2_7_1_fu_413_p2);

assign p_Val2_s_fu_289_p2 = ($signed(p_shl3_fu_269_p3) - $signed(p_shl4_cast_fu_285_p1));

assign p_shl1_fu_233_p3 = {{tmp_2_fu_229_p1}, {11'd0}};

assign p_shl2_cast_fu_249_p1 = $signed(p_shl2_fu_241_p3);

assign p_shl2_fu_241_p3 = {{tmp_fu_215_p1}, {9'd0}};

assign p_shl3_fu_269_p3 = {{tmp_3_fu_259_p4}, {11'd0}};

assign p_shl4_cast_fu_285_p1 = $signed(p_shl4_fu_277_p3);

assign p_shl4_fu_277_p3 = {{tmp_1_fu_219_p4}, {9'd0}};

assign p_shl5_fu_393_p3 = {{tmp_4_fu_389_p1}, {6'd0}};

assign p_shl6_cast_fu_409_p1 = $signed(p_shl6_fu_401_p3);

assign p_shl6_fu_401_p3 = {{buffQ_V_0}, {4'd0}};

assign p_shl7_cast_fu_452_p1 = $signed(p_shl7_fu_444_p3);

assign p_shl7_fu_444_p3 = {{buffI_V_0}, {4'd0}};

assign p_shl_fu_436_p3 = {{tmp_8_fu_432_p1}, {6'd0}};

assign start_V_read_read_fu_176_p2 = start_V;

assign tmp_10_fu_501_p4 = {{p_Val2_11_1_fu_469_p2[20:5]}};

assign tmp_11_1_fu_462_p3 = {{tmp_9_reg_1583}, {5'd0}};

assign tmp_11_fu_523_p4 = {{grp_fu_1308_p3[20:5]}};

assign tmp_12_fu_544_p4 = {{grp_fu_1317_p3[20:5]}};

assign tmp_14_s_fu_1290_p4 = {{grp_fu_1551_p3[20:5]}};

assign tmp_15_fu_643_p4 = {{grp_fu_1344_p3[20:5]}};

assign tmp_16_fu_664_p4 = {{grp_fu_1353_p3[20:5]}};

assign tmp_19_fu_763_p4 = {{grp_fu_1380_p3[20:5]}};

assign tmp_1_1_fu_419_p3 = {{tmp_6_reg_1578}, {5'd0}};

assign tmp_1_fu_219_p4 = {{i_data_V_data_V_0_data_out[26:16]}};

assign tmp_20_fu_784_p4 = {{grp_fu_1389_p3[20:5]}};

assign tmp_23_fu_883_p4 = {{grp_fu_1416_p3[20:5]}};

assign tmp_24_fu_904_p4 = {{grp_fu_1425_p3[20:5]}};

assign tmp_27_fu_1003_p4 = {{grp_fu_1452_p3[20:5]}};

assign tmp_28_fu_1024_p4 = {{grp_fu_1461_p3[20:5]}};

assign tmp_2_fu_229_p1 = i_data_V_data_V_0_data_out[9:0];

assign tmp_31_fu_1123_p4 = {{grp_fu_1488_p3[20:5]}};

assign tmp_32_fu_1144_p4 = {{grp_fu_1497_p3[20:5]}};

assign tmp_35_fu_1243_p4 = {{grp_fu_1524_p3[20:5]}};

assign tmp_36_fu_1273_p4 = {{grp_fu_1533_p3[20:5]}};

assign tmp_3_fu_259_p4 = {{i_data_V_data_V_0_data_out[25:16]}};

assign tmp_4_fu_389_p1 = buffQ_V_0[14:0];

assign tmp_5_fu_363_p3 = {{tmp_reg_1568}, {5'd0}};

assign tmp_7_fu_376_p3 = {{tmp_1_reg_1573}, {5'd0}};

assign tmp_8_fu_432_p1 = buffI_V_0[14:0];

assign tmp_9_s_fu_1260_p4 = {{grp_fu_1542_p3[20:5]}};

assign tmp_fu_215_p1 = i_data_V_data_V_0_data_out[10:0];

assign tmp_s_fu_479_p4 = {{p_Val2_8_1_fu_426_p2[20:5]}};

always @ (posedge ap_clk) begin
    buffQ_V_14[4:0] <= 5'b00000;
    buffI_V_14[4:0] <= 5'b00000;
    buffQ_V_13[4:0] <= 5'b00000;
    buffI_V_13[4:0] <= 5'b00000;
    buffQ_V_12[4:0] <= 5'b00000;
    buffI_V_12[4:0] <= 5'b00000;
    buffQ_V_11[4:0] <= 5'b00000;
    buffI_V_11[4:0] <= 5'b00000;
    buffQ_V_10[4:0] <= 5'b00000;
    buffI_V_10[4:0] <= 5'b00000;
    buffQ_V_9[4:0] <= 5'b00000;
    buffI_V_9[4:0] <= 5'b00000;
    buffQ_V_8[4:0] <= 5'b00000;
    buffI_V_8[4:0] <= 5'b00000;
    buffQ_V_7[4:0] <= 5'b00000;
    buffI_V_7[4:0] <= 5'b00000;
    buffQ_V_6[4:0] <= 5'b00000;
    buffI_V_6[4:0] <= 5'b00000;
    buffQ_V_5[4:0] <= 5'b00000;
    buffI_V_5[4:0] <= 5'b00000;
    buffQ_V_4[4:0] <= 5'b00000;
    buffI_V_4[4:0] <= 5'b00000;
    buffQ_V_3[4:0] <= 5'b00000;
    buffI_V_3[4:0] <= 5'b00000;
    buffQ_V_2[4:0] <= 5'b00000;
    buffI_V_2[4:0] <= 5'b00000;
    buffQ_V_1[4:0] <= 5'b00000;
    buffI_V_1[4:0] <= 5'b00000;
    buffQ_V_0[4:0] <= 5'b00000;
    buffI_V_0[4:0] <= 5'b00000;
    buffQ_V_2_load_reg_1588[4:0] <= 5'b00000;
    buffI_V_2_load_reg_1593[4:0] <= 5'b00000;
    buffQ_V_4_load_reg_1608[4:0] <= 5'b00000;
    buffI_V_4_load_reg_1613[4:0] <= 5'b00000;
    buffQ_V_6_load_reg_1628[4:0] <= 5'b00000;
    buffI_V_6_load_reg_1633[4:0] <= 5'b00000;
    buffQ_V_8_load_reg_1648[4:0] <= 5'b00000;
    buffI_V_8_load_reg_1653[4:0] <= 5'b00000;
    buffQ_V_10_load_reg_1668[4:0] <= 5'b00000;
    buffI_V_10_load_reg_1673[4:0] <= 5'b00000;
    buffQ_V_12_load_reg_1688[4:0] <= 5'b00000;
    buffI_V_12_load_reg_1693[4:0] <= 5'b00000;
end

endmodule //MatcherRee
