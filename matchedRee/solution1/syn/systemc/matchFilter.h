// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _matchFilter_HH_
#define _matchFilter_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "matchFilter_mux_1dEe.h"
#include "matchFilter_mac_meOg.h"
#include "matchFilter_buffIbkb.h"
#include "matchFilter_buffIcud.h"

namespace ap_rtl {

struct matchFilter : public sc_module {
    // Port declarations 10
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_lv<32> > in_r_TDATA;
    sc_in< sc_logic > in_r_TVALID;
    sc_out< sc_logic > in_r_TREADY;
    sc_in< sc_lv<1> > in_r_TLAST;
    sc_out< sc_lv<32> > out_r_TDATA;
    sc_out< sc_logic > out_r_TVALID;
    sc_in< sc_logic > out_r_TREADY;
    sc_out< sc_lv<1> > out_r_TLAST;
    sc_signal< sc_logic > ap_var_for_const2;
    sc_signal< sc_lv<16> > ap_var_for_const0;
    sc_signal< sc_lv<16> > ap_var_for_const1;


    // Module declarations
    matchFilter(sc_module_name name);
    SC_HAS_PROCESS(matchFilter);

    ~matchFilter();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    matchFilter_buffIbkb* buffIn_data_V_U;
    matchFilter_buffIcud* buffIn_last_V_U;
    matchFilter_mux_1dEe<1,1,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,16>* matchFilter_mux_1dEe_U0;
    matchFilter_mac_meOg<1,3,16,16,16,16>* matchFilter_mac_meOg_U1;
    matchFilter_mac_meOg<1,3,16,16,16,16>* matchFilter_mac_meOg_U2;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_lv<32> > in_V_data_V_0_data_out;
    sc_signal< sc_logic > in_V_data_V_0_vld_in;
    sc_signal< sc_logic > in_V_data_V_0_vld_out;
    sc_signal< sc_logic > in_V_data_V_0_ack_in;
    sc_signal< sc_logic > in_V_data_V_0_ack_out;
    sc_signal< sc_lv<32> > in_V_data_V_0_payload_A;
    sc_signal< sc_lv<32> > in_V_data_V_0_payload_B;
    sc_signal< sc_logic > in_V_data_V_0_sel_rd;
    sc_signal< sc_logic > in_V_data_V_0_sel_wr;
    sc_signal< sc_logic > in_V_data_V_0_sel;
    sc_signal< sc_logic > in_V_data_V_0_load_A;
    sc_signal< sc_logic > in_V_data_V_0_load_B;
    sc_signal< sc_lv<2> > in_V_data_V_0_state;
    sc_signal< sc_logic > in_V_data_V_0_state_cmp_full;
    sc_signal< sc_lv<1> > in_V_last_V_0_data_out;
    sc_signal< sc_logic > in_V_last_V_0_vld_in;
    sc_signal< sc_logic > in_V_last_V_0_vld_out;
    sc_signal< sc_logic > in_V_last_V_0_ack_in;
    sc_signal< sc_logic > in_V_last_V_0_ack_out;
    sc_signal< sc_lv<1> > in_V_last_V_0_payload_A;
    sc_signal< sc_lv<1> > in_V_last_V_0_payload_B;
    sc_signal< sc_logic > in_V_last_V_0_sel_rd;
    sc_signal< sc_logic > in_V_last_V_0_sel_wr;
    sc_signal< sc_logic > in_V_last_V_0_sel;
    sc_signal< sc_logic > in_V_last_V_0_load_A;
    sc_signal< sc_logic > in_V_last_V_0_load_B;
    sc_signal< sc_lv<2> > in_V_last_V_0_state;
    sc_signal< sc_logic > in_V_last_V_0_state_cmp_full;
    sc_signal< sc_lv<32> > out_V_data_V_1_data_out;
    sc_signal< sc_logic > out_V_data_V_1_vld_in;
    sc_signal< sc_logic > out_V_data_V_1_vld_out;
    sc_signal< sc_logic > out_V_data_V_1_ack_in;
    sc_signal< sc_logic > out_V_data_V_1_ack_out;
    sc_signal< sc_lv<32> > out_V_data_V_1_payload_A;
    sc_signal< sc_lv<32> > out_V_data_V_1_payload_B;
    sc_signal< sc_logic > out_V_data_V_1_sel_rd;
    sc_signal< sc_logic > out_V_data_V_1_sel_wr;
    sc_signal< sc_logic > out_V_data_V_1_sel;
    sc_signal< sc_logic > out_V_data_V_1_load_A;
    sc_signal< sc_logic > out_V_data_V_1_load_B;
    sc_signal< sc_lv<2> > out_V_data_V_1_state;
    sc_signal< sc_logic > out_V_data_V_1_state_cmp_full;
    sc_signal< sc_lv<1> > out_V_last_V_1_data_out;
    sc_signal< sc_logic > out_V_last_V_1_vld_in;
    sc_signal< sc_logic > out_V_last_V_1_vld_out;
    sc_signal< sc_logic > out_V_last_V_1_ack_in;
    sc_signal< sc_logic > out_V_last_V_1_ack_out;
    sc_signal< sc_lv<1> > out_V_last_V_1_payload_A;
    sc_signal< sc_lv<1> > out_V_last_V_1_payload_B;
    sc_signal< sc_logic > out_V_last_V_1_sel_rd;
    sc_signal< sc_logic > out_V_last_V_1_sel_wr;
    sc_signal< sc_logic > out_V_last_V_1_sel;
    sc_signal< sc_logic > out_V_last_V_1_load_A;
    sc_signal< sc_logic > out_V_last_V_1_load_B;
    sc_signal< sc_lv<2> > out_V_last_V_1_state;
    sc_signal< sc_logic > out_V_last_V_1_state_cmp_full;
    sc_signal< sc_logic > in_r_TDATA_blk_n;
    sc_signal< sc_lv<10> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > out_r_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<1> > exitcond_i_fu_229_p2;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<32> > tmp_data_V_reg_545;
    sc_signal< sc_lv<1> > tmp_last_V_reg_550;
    sc_signal< sc_lv<32> > a_cast2_fu_202_p1;
    sc_signal< sc_lv<32> > a_cast2_reg_556;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<7> > a_1_fu_212_p2;
    sc_signal< sc_lv<7> > a_1_reg_565;
    sc_signal< sc_lv<1> > tmp_fu_206_p2;
    sc_signal< sc_lv<32> > buffIn_data_V_q0;
    sc_signal< sc_lv<32> > buffIn_data_V_load_reg_580;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<8> > b_fu_235_p2;
    sc_signal< sc_lv<8> > b_reg_588;
    sc_signal< bool > ap_block_state6_io;
    sc_signal< sc_lv<7> > tmp_3_fu_241_p1;
    sc_signal< sc_lv<7> > tmp_3_reg_598;
    sc_signal< sc_lv<32> > p_Result_s_fu_245_p3;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<16> > tmp_1_fu_268_p130;
    sc_signal< sc_lv<16> > grp_fu_529_p3;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<16> > grp_fu_537_p3;
    sc_signal< sc_lv<7> > buffIn_data_V_address0;
    sc_signal< sc_logic > buffIn_data_V_ce0;
    sc_signal< sc_logic > buffIn_data_V_we0;
    sc_signal< sc_lv<32> > buffIn_data_V_d0;
    sc_signal< sc_lv<7> > buffIn_last_V_address0;
    sc_signal< sc_logic > buffIn_last_V_ce0;
    sc_signal< sc_logic > buffIn_last_V_we0;
    sc_signal< sc_lv<1> > buffIn_last_V_d0;
    sc_signal< sc_lv<1> > buffIn_last_V_q0;
    sc_signal< sc_lv<7> > a_reg_148;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<16> > p_i_reg_159;
    sc_signal< sc_lv<16> > p_1_i_reg_171;
    sc_signal< sc_lv<8> > b_i_reg_183;
    sc_signal< sc_lv<32> > a_1_cast_fu_218_p1;
    sc_signal< sc_lv<32> > b_i_cast1_fu_224_p1;
    sc_signal< bool > ap_block_state10;
    sc_signal< sc_lv<16> > grp_fu_529_p1;
    sc_signal< sc_lv<16> > grp_fu_537_p1;
    sc_signal< sc_lv<10> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<10> ap_ST_fsm_state1;
    static const sc_lv<10> ap_ST_fsm_state2;
    static const sc_lv<10> ap_ST_fsm_state3;
    static const sc_lv<10> ap_ST_fsm_state4;
    static const sc_lv<10> ap_ST_fsm_state5;
    static const sc_lv<10> ap_ST_fsm_state6;
    static const sc_lv<10> ap_ST_fsm_state7;
    static const sc_lv<10> ap_ST_fsm_state8;
    static const sc_lv<10> ap_ST_fsm_state9;
    static const sc_lv<10> ap_ST_fsm_state10;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<7> ap_const_lv7_7F;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<8> ap_const_lv8_80;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<16> ap_const_lv16_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_clk_no_reset_();
    void thread_a_1_cast_fu_218_p1();
    void thread_a_1_fu_212_p2();
    void thread_a_cast2_fu_202_p1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_state10();
    void thread_ap_block_state6_io();
    void thread_ap_rst_n_inv();
    void thread_b_fu_235_p2();
    void thread_b_i_cast1_fu_224_p1();
    void thread_buffIn_data_V_address0();
    void thread_buffIn_data_V_ce0();
    void thread_buffIn_data_V_d0();
    void thread_buffIn_data_V_we0();
    void thread_buffIn_last_V_address0();
    void thread_buffIn_last_V_ce0();
    void thread_buffIn_last_V_d0();
    void thread_buffIn_last_V_we0();
    void thread_exitcond_i_fu_229_p2();
    void thread_grp_fu_529_p1();
    void thread_grp_fu_537_p1();
    void thread_in_V_data_V_0_ack_in();
    void thread_in_V_data_V_0_ack_out();
    void thread_in_V_data_V_0_data_out();
    void thread_in_V_data_V_0_load_A();
    void thread_in_V_data_V_0_load_B();
    void thread_in_V_data_V_0_sel();
    void thread_in_V_data_V_0_state_cmp_full();
    void thread_in_V_data_V_0_vld_in();
    void thread_in_V_data_V_0_vld_out();
    void thread_in_V_last_V_0_ack_in();
    void thread_in_V_last_V_0_ack_out();
    void thread_in_V_last_V_0_data_out();
    void thread_in_V_last_V_0_load_A();
    void thread_in_V_last_V_0_load_B();
    void thread_in_V_last_V_0_sel();
    void thread_in_V_last_V_0_state_cmp_full();
    void thread_in_V_last_V_0_vld_in();
    void thread_in_V_last_V_0_vld_out();
    void thread_in_r_TDATA_blk_n();
    void thread_in_r_TREADY();
    void thread_out_V_data_V_1_ack_in();
    void thread_out_V_data_V_1_ack_out();
    void thread_out_V_data_V_1_data_out();
    void thread_out_V_data_V_1_load_A();
    void thread_out_V_data_V_1_load_B();
    void thread_out_V_data_V_1_sel();
    void thread_out_V_data_V_1_state_cmp_full();
    void thread_out_V_data_V_1_vld_in();
    void thread_out_V_data_V_1_vld_out();
    void thread_out_V_last_V_1_ack_in();
    void thread_out_V_last_V_1_ack_out();
    void thread_out_V_last_V_1_data_out();
    void thread_out_V_last_V_1_load_A();
    void thread_out_V_last_V_1_load_B();
    void thread_out_V_last_V_1_sel();
    void thread_out_V_last_V_1_state_cmp_full();
    void thread_out_V_last_V_1_vld_in();
    void thread_out_V_last_V_1_vld_out();
    void thread_out_r_TDATA();
    void thread_out_r_TDATA_blk_n();
    void thread_out_r_TLAST();
    void thread_out_r_TVALID();
    void thread_p_Result_s_fu_245_p3();
    void thread_tmp_3_fu_241_p1();
    void thread_tmp_fu_206_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
