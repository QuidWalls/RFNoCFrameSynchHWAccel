-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity MatcherRee is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    i_data_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    i_data_TVALID : IN STD_LOGIC;
    i_data_TREADY : OUT STD_LOGIC;
    i_data_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    o_data_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    o_data_TVALID : OUT STD_LOGIC;
    o_data_TREADY : IN STD_LOGIC;
    o_data_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    start_V : IN STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of MatcherRee is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "MatcherRee,hls_ip_2017_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7k160tfbg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=8.740000,HLS_SYN_LAT=9,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=14,HLS_SYN_FF=1260,HLS_SYN_LUT=681}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv21_76 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000001110110";
    constant ap_const_lv21_9C : STD_LOGIC_VECTOR (20 downto 0) := "000000000000010011100";
    constant ap_const_lv21_A9 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000010101001";
    constant ap_const_lv21_CC : STD_LOGIC_VECTOR (20 downto 0) := "000000000000011001100";
    constant ap_const_lv21_B6 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000010110110";
    constant ap_const_lv21_8C : STD_LOGIC_VECTOR (20 downto 0) := "000000000000010001100";
    constant ap_const_lv21_79 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000001111001";
    constant ap_const_lv21_5C : STD_LOGIC_VECTOR (20 downto 0) := "000000000000001011100";
    constant ap_const_lv21_49 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000001001001";
    constant ap_const_lv21_69 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000001101001";
    constant ap_const_lv21_93 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000010010011";
    constant ap_const_lv21_B3 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000010110011";
    constant ap_const_lv21_D3 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000011010011";
    constant ap_const_lv25_D0 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000011010000";

    signal ap_rst_n_inv : STD_LOGIC;
    signal i_data_V_data_V_0_data_out : STD_LOGIC_VECTOR (31 downto 0);
    signal i_data_V_data_V_0_vld_in : STD_LOGIC;
    signal i_data_V_data_V_0_vld_out : STD_LOGIC;
    signal i_data_V_data_V_0_ack_in : STD_LOGIC;
    signal i_data_V_data_V_0_ack_out : STD_LOGIC;
    signal i_data_V_data_V_0_payload_A : STD_LOGIC_VECTOR (31 downto 0);
    signal i_data_V_data_V_0_payload_B : STD_LOGIC_VECTOR (31 downto 0);
    signal i_data_V_data_V_0_sel_rd : STD_LOGIC := '0';
    signal i_data_V_data_V_0_sel_wr : STD_LOGIC := '0';
    signal i_data_V_data_V_0_sel : STD_LOGIC;
    signal i_data_V_data_V_0_load_A : STD_LOGIC;
    signal i_data_V_data_V_0_load_B : STD_LOGIC;
    signal i_data_V_data_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal i_data_V_data_V_0_state_cmp_full : STD_LOGIC;
    signal i_data_V_last_V_0_vld_in : STD_LOGIC;
    signal i_data_V_last_V_0_ack_out : STD_LOGIC;
    signal i_data_V_last_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal o_data_V_data_V_1_data_out : STD_LOGIC_VECTOR (31 downto 0);
    signal o_data_V_data_V_1_vld_in : STD_LOGIC;
    signal o_data_V_data_V_1_vld_out : STD_LOGIC;
    signal o_data_V_data_V_1_ack_in : STD_LOGIC;
    signal o_data_V_data_V_1_ack_out : STD_LOGIC;
    signal o_data_V_data_V_1_payload_A : STD_LOGIC_VECTOR (31 downto 0);
    signal o_data_V_data_V_1_payload_B : STD_LOGIC_VECTOR (31 downto 0);
    signal o_data_V_data_V_1_sel_rd : STD_LOGIC := '0';
    signal o_data_V_data_V_1_sel_wr : STD_LOGIC := '0';
    signal o_data_V_data_V_1_sel : STD_LOGIC;
    signal o_data_V_data_V_1_load_A : STD_LOGIC;
    signal o_data_V_data_V_1_load_B : STD_LOGIC;
    signal o_data_V_data_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal o_data_V_data_V_1_state_cmp_full : STD_LOGIC;
    signal o_data_V_last_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal o_data_V_last_V_1_vld_in : STD_LOGIC;
    signal o_data_V_last_V_1_vld_out : STD_LOGIC;
    signal o_data_V_last_V_1_ack_in : STD_LOGIC;
    signal o_data_V_last_V_1_ack_out : STD_LOGIC;
    signal o_data_V_last_V_1_sel_rd : STD_LOGIC := '0';
    signal o_data_V_last_V_1_sel : STD_LOGIC;
    signal o_data_V_last_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal currentState : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal buffQ_V_14 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal buffQ_V_13 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal buffQ_V_12 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal buffQ_V_11 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal buffQ_V_10 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal buffQ_V_9 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal buffQ_V_8 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal buffQ_V_7 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal buffQ_V_6 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal buffQ_V_5 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal buffQ_V_4 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal buffQ_V_3 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal buffQ_V_2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal buffQ_V_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal buffQ_V_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal i_data_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal currentState_load_reg_1031 : STD_LOGIC_VECTOR (0 downto 0);
    signal o_data_TDATA_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_reg_pp0_iter7_currentState_load_reg_1031 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_reg_pp0_iter8_currentState_load_reg_1031 : STD_LOGIC_VECTOR (0 downto 0);
    signal start_V_read_read_fu_164_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state9_io : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state10_io : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal currentState_load_load_fu_189_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter1_currentState_load_reg_1031 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter2_currentState_load_reg_1031 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter3_currentState_load_reg_1031 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter4_currentState_load_reg_1031 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter5_currentState_load_reg_1031 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter6_currentState_load_reg_1031 : STD_LOGIC_VECTOR (0 downto 0);
    signal buffQ_V_11_load_reg_1035 : STD_LOGIC_VECTOR (15 downto 0);
    signal buffQ_V_10_load_reg_1040 : STD_LOGIC_VECTOR (15 downto 0);
    signal buffQ_V_9_load_reg_1045 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter2_buffQ_V_9_load_reg_1045 : STD_LOGIC_VECTOR (15 downto 0);
    signal buffQ_V_8_load_reg_1050 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter2_buffQ_V_8_load_reg_1050 : STD_LOGIC_VECTOR (15 downto 0);
    signal buffQ_V_7_load_reg_1055 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter2_buffQ_V_7_load_reg_1055 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter3_buffQ_V_7_load_reg_1055 : STD_LOGIC_VECTOR (15 downto 0);
    signal buffQ_V_6_load_reg_1060 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter2_buffQ_V_6_load_reg_1060 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter3_buffQ_V_6_load_reg_1060 : STD_LOGIC_VECTOR (15 downto 0);
    signal buffQ_V_5_load_reg_1065 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter2_buffQ_V_5_load_reg_1065 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter3_buffQ_V_5_load_reg_1065 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter4_buffQ_V_5_load_reg_1065 : STD_LOGIC_VECTOR (15 downto 0);
    signal buffQ_V_4_load_reg_1070 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter2_buffQ_V_4_load_reg_1070 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter3_buffQ_V_4_load_reg_1070 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter4_buffQ_V_4_load_reg_1070 : STD_LOGIC_VECTOR (15 downto 0);
    signal buffQ_V_3_load_reg_1075 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter2_buffQ_V_3_load_reg_1075 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter3_buffQ_V_3_load_reg_1075 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter4_buffQ_V_3_load_reg_1075 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter5_buffQ_V_3_load_reg_1075 : STD_LOGIC_VECTOR (15 downto 0);
    signal buffQ_V_2_load_reg_1080 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter2_buffQ_V_2_load_reg_1080 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter3_buffQ_V_2_load_reg_1080 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter4_buffQ_V_2_load_reg_1080 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter5_buffQ_V_2_load_reg_1080 : STD_LOGIC_VECTOR (15 downto 0);
    signal buffQ_V_1_load_reg_1085 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter2_buffQ_V_1_load_reg_1085 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter3_buffQ_V_1_load_reg_1085 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter4_buffQ_V_1_load_reg_1085 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter5_buffQ_V_1_load_reg_1085 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter6_buffQ_V_1_load_reg_1085 : STD_LOGIC_VECTOR (15 downto 0);
    signal buffQ_V_0_load_reg_1090 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter2_buffQ_V_0_load_reg_1090 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter3_buffQ_V_0_load_reg_1090 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter4_buffQ_V_0_load_reg_1090 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter5_buffQ_V_0_load_reg_1090 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter6_buffQ_V_0_load_reg_1090 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_7_fu_421_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_7_reg_1095 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter2_tmp_7_reg_1095 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter3_tmp_7_reg_1095 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter4_tmp_7_reg_1095 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter5_tmp_7_reg_1095 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter6_tmp_7_reg_1095 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_6_reg_1100 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_10_reg_1105 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_12_reg_1110 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_14_reg_1115 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_16_reg_1120 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_18_reg_1125 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_6_14_fu_1021_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal p_Val2_6_14_reg_1130 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_20_reg_1135 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_s_fu_895_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_fu_417_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_2_fu_459_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl2_fu_471_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_shl1_fu_463_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_shl2_cast_fu_479_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_3_fu_489_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl3_fu_501_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_shl3_cast_fu_509_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_shl_fu_493_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_Val2_6_fu_483_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_4_fu_519_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_6_1_fu_513_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_13_1_fu_529_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_Val2_7_1_fu_537_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_5_fu_547_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_904_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_913_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_8_fu_587_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_922_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_931_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_11_fu_626_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_940_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_949_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_13_fu_665_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_958_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_967_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_15_fu_704_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_976_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_985_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_17_fu_743_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_994_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_1003_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_19_fu_782_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1012_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_13_14_fu_814_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_Val2_6_14_cast_fu_811_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_141_s_fu_825_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_13_14_cast_fu_821_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal p_Val2_7_14_fu_829_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal p_Result_2_fu_853_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal ret_V_fu_835_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_s_fu_863_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_1_fu_869_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_21_fu_845_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_s_fu_875_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_1_fu_883_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal loc_V_1_trunc_fu_891_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_904_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_904_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_913_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_913_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_922_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_922_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_931_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_931_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_940_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_940_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_949_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_949_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_958_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_958_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_967_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_967_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_976_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_976_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_985_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_985_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_994_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_994_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_1003_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1003_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_1012_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1012_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_Val2_6_14_fu_1021_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component MatcherRee_mac_mubkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (20 downto 0);
        dout : OUT STD_LOGIC_VECTOR (20 downto 0) );
    end component;


    component MatcherRee_mac_mucud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (20 downto 0);
        dout : OUT STD_LOGIC_VECTOR (20 downto 0) );
    end component;


    component MatcherRee_mul_mudEe IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (24 downto 0) );
    end component;



begin
    MatcherRee_mac_mubkb_U1 : component MatcherRee_mac_mubkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 16,
        din2_WIDTH => 21,
        dout_WIDTH => 21)
    port map (
        din0 => grp_fu_904_p0,
        din1 => buffQ_V_12,
        din2 => grp_fu_904_p2,
        dout => grp_fu_904_p3);

    MatcherRee_mac_mucud_U2 : component MatcherRee_mac_mucud
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 16,
        din2_WIDTH => 21,
        dout_WIDTH => 21)
    port map (
        din0 => grp_fu_913_p0,
        din1 => buffQ_V_11_load_reg_1035,
        din2 => grp_fu_913_p2,
        dout => grp_fu_913_p3);

    MatcherRee_mac_mucud_U3 : component MatcherRee_mac_mucud
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 16,
        din2_WIDTH => 21,
        dout_WIDTH => 21)
    port map (
        din0 => grp_fu_922_p0,
        din1 => buffQ_V_10_load_reg_1040,
        din2 => grp_fu_922_p2,
        dout => grp_fu_922_p3);

    MatcherRee_mac_mucud_U4 : component MatcherRee_mac_mucud
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 16,
        din2_WIDTH => 21,
        dout_WIDTH => 21)
    port map (
        din0 => grp_fu_931_p0,
        din1 => ap_reg_pp0_iter2_buffQ_V_9_load_reg_1045,
        din2 => grp_fu_931_p2,
        dout => grp_fu_931_p3);

    MatcherRee_mac_mucud_U5 : component MatcherRee_mac_mucud
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 16,
        din2_WIDTH => 21,
        dout_WIDTH => 21)
    port map (
        din0 => grp_fu_940_p0,
        din1 => ap_reg_pp0_iter2_buffQ_V_8_load_reg_1050,
        din2 => grp_fu_940_p2,
        dout => grp_fu_940_p3);

    MatcherRee_mac_mucud_U6 : component MatcherRee_mac_mucud
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 16,
        din2_WIDTH => 21,
        dout_WIDTH => 21)
    port map (
        din0 => grp_fu_949_p0,
        din1 => ap_reg_pp0_iter3_buffQ_V_7_load_reg_1055,
        din2 => grp_fu_949_p2,
        dout => grp_fu_949_p3);

    MatcherRee_mac_mubkb_U7 : component MatcherRee_mac_mubkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 16,
        din2_WIDTH => 21,
        dout_WIDTH => 21)
    port map (
        din0 => grp_fu_958_p0,
        din1 => ap_reg_pp0_iter3_buffQ_V_6_load_reg_1060,
        din2 => grp_fu_958_p2,
        dout => grp_fu_958_p3);

    MatcherRee_mac_mubkb_U8 : component MatcherRee_mac_mubkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 16,
        din2_WIDTH => 21,
        dout_WIDTH => 21)
    port map (
        din0 => grp_fu_967_p0,
        din1 => ap_reg_pp0_iter4_buffQ_V_5_load_reg_1065,
        din2 => grp_fu_967_p2,
        dout => grp_fu_967_p3);

    MatcherRee_mac_mubkb_U9 : component MatcherRee_mac_mubkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 16,
        din2_WIDTH => 21,
        dout_WIDTH => 21)
    port map (
        din0 => grp_fu_976_p0,
        din1 => ap_reg_pp0_iter4_buffQ_V_4_load_reg_1070,
        din2 => grp_fu_976_p2,
        dout => grp_fu_976_p3);

    MatcherRee_mac_mubkb_U10 : component MatcherRee_mac_mubkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 16,
        din2_WIDTH => 21,
        dout_WIDTH => 21)
    port map (
        din0 => grp_fu_985_p0,
        din1 => ap_reg_pp0_iter5_buffQ_V_3_load_reg_1075,
        din2 => grp_fu_985_p2,
        dout => grp_fu_985_p3);

    MatcherRee_mac_mucud_U11 : component MatcherRee_mac_mucud
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 16,
        din2_WIDTH => 21,
        dout_WIDTH => 21)
    port map (
        din0 => grp_fu_994_p0,
        din1 => ap_reg_pp0_iter5_buffQ_V_2_load_reg_1080,
        din2 => grp_fu_994_p2,
        dout => grp_fu_994_p3);

    MatcherRee_mac_mucud_U12 : component MatcherRee_mac_mucud
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 16,
        din2_WIDTH => 21,
        dout_WIDTH => 21)
    port map (
        din0 => grp_fu_1003_p0,
        din1 => ap_reg_pp0_iter6_buffQ_V_1_load_reg_1085,
        din2 => grp_fu_1003_p2,
        dout => grp_fu_1003_p3);

    MatcherRee_mac_mucud_U13 : component MatcherRee_mac_mucud
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 16,
        din2_WIDTH => 21,
        dout_WIDTH => 21)
    port map (
        din0 => grp_fu_1012_p0,
        din1 => ap_reg_pp0_iter6_buffQ_V_0_load_reg_1090,
        din2 => grp_fu_1012_p2,
        dout => grp_fu_1012_p3);

    MatcherRee_mul_mudEe_U14 : component MatcherRee_mul_mudEe
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 16,
        dout_WIDTH => 25)
    port map (
        din0 => p_Val2_6_14_fu_1021_p0,
        din1 => ap_reg_pp0_iter6_tmp_7_reg_1095,
        dout => p_Val2_6_14_fu_1021_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    currentState_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                currentState <= ap_const_lv1_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (start_V_read_read_fu_164_p2 = ap_const_lv1_1) and (currentState_load_load_fu_189_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    currentState <= ap_const_lv1_1;
                end if; 
            end if;
        end if;
    end process;


    i_data_V_data_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                i_data_V_data_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((i_data_V_data_V_0_ack_out = ap_const_logic_1) and (i_data_V_data_V_0_vld_out = ap_const_logic_1))) then 
                                        i_data_V_data_V_0_sel_rd <= not(i_data_V_data_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    i_data_V_data_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                i_data_V_data_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((i_data_V_data_V_0_ack_in = ap_const_logic_1) and (i_data_V_data_V_0_vld_in = ap_const_logic_1))) then 
                                        i_data_V_data_V_0_sel_wr <= not(i_data_V_data_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    i_data_V_data_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                i_data_V_data_V_0_state <= ap_const_lv2_0;
            else
                if ((((i_data_V_data_V_0_vld_in = ap_const_logic_0) and (i_data_V_data_V_0_state = ap_const_lv2_2)) or ((i_data_V_data_V_0_vld_in = ap_const_logic_0) and (i_data_V_data_V_0_state = ap_const_lv2_3) and (i_data_V_data_V_0_ack_out = ap_const_logic_1)))) then 
                    i_data_V_data_V_0_state <= ap_const_lv2_2;
                elsif ((((i_data_V_data_V_0_ack_out = ap_const_logic_0) and (i_data_V_data_V_0_state = ap_const_lv2_1)) or ((i_data_V_data_V_0_ack_out = ap_const_logic_0) and (i_data_V_data_V_0_state = ap_const_lv2_3) and (i_data_V_data_V_0_vld_in = ap_const_logic_1)))) then 
                    i_data_V_data_V_0_state <= ap_const_lv2_1;
                elsif (((not(((i_data_V_data_V_0_vld_in = ap_const_logic_0) and (i_data_V_data_V_0_ack_out = ap_const_logic_1))) and not(((i_data_V_data_V_0_ack_out = ap_const_logic_0) and (i_data_V_data_V_0_vld_in = ap_const_logic_1))) and (i_data_V_data_V_0_state = ap_const_lv2_3)) or ((i_data_V_data_V_0_state = ap_const_lv2_1) and (i_data_V_data_V_0_ack_out = ap_const_logic_1)) or ((i_data_V_data_V_0_state = ap_const_lv2_2) and (i_data_V_data_V_0_vld_in = ap_const_logic_1)))) then 
                    i_data_V_data_V_0_state <= ap_const_lv2_3;
                else 
                    i_data_V_data_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    i_data_V_last_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                i_data_V_last_V_0_state <= ap_const_lv2_0;
            else
                if ((((i_data_V_last_V_0_state = ap_const_lv2_3) and (i_data_V_last_V_0_vld_in = ap_const_logic_0) and (i_data_V_last_V_0_ack_out = ap_const_logic_1)) or ((i_data_V_last_V_0_state = ap_const_lv2_2) and (i_data_V_last_V_0_vld_in = ap_const_logic_0)))) then 
                    i_data_V_last_V_0_state <= ap_const_lv2_2;
                elsif ((((i_data_V_last_V_0_state = ap_const_lv2_1) and (i_data_V_last_V_0_ack_out = ap_const_logic_0)) or ((i_data_V_last_V_0_state = ap_const_lv2_3) and (i_data_V_last_V_0_ack_out = ap_const_logic_0) and (i_data_V_last_V_0_vld_in = ap_const_logic_1)))) then 
                    i_data_V_last_V_0_state <= ap_const_lv2_1;
                elsif ((((i_data_V_last_V_0_state = ap_const_lv2_1) and (i_data_V_last_V_0_ack_out = ap_const_logic_1)) or ((i_data_V_last_V_0_state = ap_const_lv2_2) and (i_data_V_last_V_0_vld_in = ap_const_logic_1)) or (not(((i_data_V_last_V_0_vld_in = ap_const_logic_0) and (i_data_V_last_V_0_ack_out = ap_const_logic_1))) and not(((i_data_V_last_V_0_ack_out = ap_const_logic_0) and (i_data_V_last_V_0_vld_in = ap_const_logic_1))) and (i_data_V_last_V_0_state = ap_const_lv2_3)))) then 
                    i_data_V_last_V_0_state <= ap_const_lv2_3;
                else 
                    i_data_V_last_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    o_data_V_data_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                o_data_V_data_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((o_data_V_data_V_1_ack_out = ap_const_logic_1) and (o_data_V_data_V_1_vld_out = ap_const_logic_1))) then 
                                        o_data_V_data_V_1_sel_rd <= not(o_data_V_data_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    o_data_V_data_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                o_data_V_data_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((o_data_V_data_V_1_ack_in = ap_const_logic_1) and (o_data_V_data_V_1_vld_in = ap_const_logic_1))) then 
                                        o_data_V_data_V_1_sel_wr <= not(o_data_V_data_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    o_data_V_data_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                o_data_V_data_V_1_state <= ap_const_lv2_0;
            else
                if ((((o_data_V_data_V_1_state = ap_const_lv2_2) and (o_data_V_data_V_1_vld_in = ap_const_logic_0)) or ((o_data_V_data_V_1_state = ap_const_lv2_3) and (o_data_V_data_V_1_vld_in = ap_const_logic_0) and (o_data_V_data_V_1_ack_out = ap_const_logic_1)))) then 
                    o_data_V_data_V_1_state <= ap_const_lv2_2;
                elsif ((((o_data_V_data_V_1_state = ap_const_lv2_1) and (o_data_V_data_V_1_ack_out = ap_const_logic_0)) or ((o_data_V_data_V_1_state = ap_const_lv2_3) and (o_data_V_data_V_1_ack_out = ap_const_logic_0) and (o_data_V_data_V_1_vld_in = ap_const_logic_1)))) then 
                    o_data_V_data_V_1_state <= ap_const_lv2_1;
                elsif (((not(((o_data_V_data_V_1_vld_in = ap_const_logic_0) and (o_data_V_data_V_1_ack_out = ap_const_logic_1))) and not(((o_data_V_data_V_1_ack_out = ap_const_logic_0) and (o_data_V_data_V_1_vld_in = ap_const_logic_1))) and (o_data_V_data_V_1_state = ap_const_lv2_3)) or ((o_data_V_data_V_1_state = ap_const_lv2_1) and (o_data_V_data_V_1_ack_out = ap_const_logic_1)) or ((o_data_V_data_V_1_state = ap_const_lv2_2) and (o_data_V_data_V_1_vld_in = ap_const_logic_1)))) then 
                    o_data_V_data_V_1_state <= ap_const_lv2_3;
                else 
                    o_data_V_data_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    o_data_V_last_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                o_data_V_last_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((o_data_V_last_V_1_ack_out = ap_const_logic_1) and (o_data_V_last_V_1_vld_out = ap_const_logic_1))) then 
                                        o_data_V_last_V_1_sel_rd <= not(o_data_V_last_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    o_data_V_last_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                o_data_V_last_V_1_state <= ap_const_lv2_0;
            else
                if ((((o_data_V_last_V_1_state = ap_const_lv2_2) and (o_data_V_last_V_1_vld_in = ap_const_logic_0)) or ((o_data_V_last_V_1_state = ap_const_lv2_3) and (o_data_V_last_V_1_vld_in = ap_const_logic_0) and (o_data_V_last_V_1_ack_out = ap_const_logic_1)))) then 
                    o_data_V_last_V_1_state <= ap_const_lv2_2;
                elsif ((((o_data_V_last_V_1_state = ap_const_lv2_1) and (o_data_V_last_V_1_ack_out = ap_const_logic_0)) or ((o_data_V_last_V_1_state = ap_const_lv2_3) and (o_data_V_last_V_1_ack_out = ap_const_logic_0) and (o_data_V_last_V_1_vld_in = ap_const_logic_1)))) then 
                    o_data_V_last_V_1_state <= ap_const_lv2_1;
                elsif (((not(((o_data_V_last_V_1_vld_in = ap_const_logic_0) and (o_data_V_last_V_1_ack_out = ap_const_logic_1))) and not(((o_data_V_last_V_1_ack_out = ap_const_logic_0) and (o_data_V_last_V_1_vld_in = ap_const_logic_1))) and (o_data_V_last_V_1_state = ap_const_lv2_3)) or ((o_data_V_last_V_1_state = ap_const_lv2_1) and (o_data_V_last_V_1_ack_out = ap_const_logic_1)) or ((o_data_V_last_V_1_state = ap_const_lv2_2) and (o_data_V_last_V_1_vld_in = ap_const_logic_1)))) then 
                    o_data_V_last_V_1_state <= ap_const_lv2_3;
                else 
                    o_data_V_last_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_reg_pp0_iter1_currentState_load_reg_1031 <= currentState_load_reg_1031;
                currentState_load_reg_1031 <= currentState;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                    ap_reg_pp0_iter2_buffQ_V_0_load_reg_1090(15 downto 5) <= buffQ_V_0_load_reg_1090(15 downto 5);
                    ap_reg_pp0_iter2_buffQ_V_1_load_reg_1085(15 downto 5) <= buffQ_V_1_load_reg_1085(15 downto 5);
                    ap_reg_pp0_iter2_buffQ_V_2_load_reg_1080(15 downto 5) <= buffQ_V_2_load_reg_1080(15 downto 5);
                    ap_reg_pp0_iter2_buffQ_V_3_load_reg_1075(15 downto 5) <= buffQ_V_3_load_reg_1075(15 downto 5);
                    ap_reg_pp0_iter2_buffQ_V_4_load_reg_1070(15 downto 5) <= buffQ_V_4_load_reg_1070(15 downto 5);
                    ap_reg_pp0_iter2_buffQ_V_5_load_reg_1065(15 downto 5) <= buffQ_V_5_load_reg_1065(15 downto 5);
                    ap_reg_pp0_iter2_buffQ_V_6_load_reg_1060(15 downto 5) <= buffQ_V_6_load_reg_1060(15 downto 5);
                    ap_reg_pp0_iter2_buffQ_V_7_load_reg_1055(15 downto 5) <= buffQ_V_7_load_reg_1055(15 downto 5);
                    ap_reg_pp0_iter2_buffQ_V_8_load_reg_1050(15 downto 5) <= buffQ_V_8_load_reg_1050(15 downto 5);
                    ap_reg_pp0_iter2_buffQ_V_9_load_reg_1045(15 downto 5) <= buffQ_V_9_load_reg_1045(15 downto 5);
                ap_reg_pp0_iter2_currentState_load_reg_1031 <= ap_reg_pp0_iter1_currentState_load_reg_1031;
                    ap_reg_pp0_iter2_tmp_7_reg_1095(15 downto 5) <= tmp_7_reg_1095(15 downto 5);
                    ap_reg_pp0_iter3_buffQ_V_0_load_reg_1090(15 downto 5) <= ap_reg_pp0_iter2_buffQ_V_0_load_reg_1090(15 downto 5);
                    ap_reg_pp0_iter3_buffQ_V_1_load_reg_1085(15 downto 5) <= ap_reg_pp0_iter2_buffQ_V_1_load_reg_1085(15 downto 5);
                    ap_reg_pp0_iter3_buffQ_V_2_load_reg_1080(15 downto 5) <= ap_reg_pp0_iter2_buffQ_V_2_load_reg_1080(15 downto 5);
                    ap_reg_pp0_iter3_buffQ_V_3_load_reg_1075(15 downto 5) <= ap_reg_pp0_iter2_buffQ_V_3_load_reg_1075(15 downto 5);
                    ap_reg_pp0_iter3_buffQ_V_4_load_reg_1070(15 downto 5) <= ap_reg_pp0_iter2_buffQ_V_4_load_reg_1070(15 downto 5);
                    ap_reg_pp0_iter3_buffQ_V_5_load_reg_1065(15 downto 5) <= ap_reg_pp0_iter2_buffQ_V_5_load_reg_1065(15 downto 5);
                    ap_reg_pp0_iter3_buffQ_V_6_load_reg_1060(15 downto 5) <= ap_reg_pp0_iter2_buffQ_V_6_load_reg_1060(15 downto 5);
                    ap_reg_pp0_iter3_buffQ_V_7_load_reg_1055(15 downto 5) <= ap_reg_pp0_iter2_buffQ_V_7_load_reg_1055(15 downto 5);
                ap_reg_pp0_iter3_currentState_load_reg_1031 <= ap_reg_pp0_iter2_currentState_load_reg_1031;
                    ap_reg_pp0_iter3_tmp_7_reg_1095(15 downto 5) <= ap_reg_pp0_iter2_tmp_7_reg_1095(15 downto 5);
                    ap_reg_pp0_iter4_buffQ_V_0_load_reg_1090(15 downto 5) <= ap_reg_pp0_iter3_buffQ_V_0_load_reg_1090(15 downto 5);
                    ap_reg_pp0_iter4_buffQ_V_1_load_reg_1085(15 downto 5) <= ap_reg_pp0_iter3_buffQ_V_1_load_reg_1085(15 downto 5);
                    ap_reg_pp0_iter4_buffQ_V_2_load_reg_1080(15 downto 5) <= ap_reg_pp0_iter3_buffQ_V_2_load_reg_1080(15 downto 5);
                    ap_reg_pp0_iter4_buffQ_V_3_load_reg_1075(15 downto 5) <= ap_reg_pp0_iter3_buffQ_V_3_load_reg_1075(15 downto 5);
                    ap_reg_pp0_iter4_buffQ_V_4_load_reg_1070(15 downto 5) <= ap_reg_pp0_iter3_buffQ_V_4_load_reg_1070(15 downto 5);
                    ap_reg_pp0_iter4_buffQ_V_5_load_reg_1065(15 downto 5) <= ap_reg_pp0_iter3_buffQ_V_5_load_reg_1065(15 downto 5);
                ap_reg_pp0_iter4_currentState_load_reg_1031 <= ap_reg_pp0_iter3_currentState_load_reg_1031;
                    ap_reg_pp0_iter4_tmp_7_reg_1095(15 downto 5) <= ap_reg_pp0_iter3_tmp_7_reg_1095(15 downto 5);
                    ap_reg_pp0_iter5_buffQ_V_0_load_reg_1090(15 downto 5) <= ap_reg_pp0_iter4_buffQ_V_0_load_reg_1090(15 downto 5);
                    ap_reg_pp0_iter5_buffQ_V_1_load_reg_1085(15 downto 5) <= ap_reg_pp0_iter4_buffQ_V_1_load_reg_1085(15 downto 5);
                    ap_reg_pp0_iter5_buffQ_V_2_load_reg_1080(15 downto 5) <= ap_reg_pp0_iter4_buffQ_V_2_load_reg_1080(15 downto 5);
                    ap_reg_pp0_iter5_buffQ_V_3_load_reg_1075(15 downto 5) <= ap_reg_pp0_iter4_buffQ_V_3_load_reg_1075(15 downto 5);
                ap_reg_pp0_iter5_currentState_load_reg_1031 <= ap_reg_pp0_iter4_currentState_load_reg_1031;
                    ap_reg_pp0_iter5_tmp_7_reg_1095(15 downto 5) <= ap_reg_pp0_iter4_tmp_7_reg_1095(15 downto 5);
                    ap_reg_pp0_iter6_buffQ_V_0_load_reg_1090(15 downto 5) <= ap_reg_pp0_iter5_buffQ_V_0_load_reg_1090(15 downto 5);
                    ap_reg_pp0_iter6_buffQ_V_1_load_reg_1085(15 downto 5) <= ap_reg_pp0_iter5_buffQ_V_1_load_reg_1085(15 downto 5);
                ap_reg_pp0_iter6_currentState_load_reg_1031 <= ap_reg_pp0_iter5_currentState_load_reg_1031;
                    ap_reg_pp0_iter6_tmp_7_reg_1095(15 downto 5) <= ap_reg_pp0_iter5_tmp_7_reg_1095(15 downto 5);
                ap_reg_pp0_iter7_currentState_load_reg_1031 <= ap_reg_pp0_iter6_currentState_load_reg_1031;
                ap_reg_pp0_iter8_currentState_load_reg_1031 <= ap_reg_pp0_iter7_currentState_load_reg_1031;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (currentState_load_reg_1031 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    buffQ_V_0(15 downto 5) <= tmp_7_fu_421_p3(15 downto 5);
                    buffQ_V_1(15 downto 5) <= buffQ_V_0(15 downto 5);
                    buffQ_V_10(15 downto 5) <= buffQ_V_9(15 downto 5);
                    buffQ_V_11(15 downto 5) <= buffQ_V_10(15 downto 5);
                    buffQ_V_12(15 downto 5) <= buffQ_V_11(15 downto 5);
                    buffQ_V_13(15 downto 5) <= buffQ_V_12(15 downto 5);
                    buffQ_V_14(15 downto 5) <= buffQ_V_13(15 downto 5);
                    buffQ_V_2(15 downto 5) <= buffQ_V_1(15 downto 5);
                    buffQ_V_3(15 downto 5) <= buffQ_V_2(15 downto 5);
                    buffQ_V_4(15 downto 5) <= buffQ_V_3(15 downto 5);
                    buffQ_V_5(15 downto 5) <= buffQ_V_4(15 downto 5);
                    buffQ_V_6(15 downto 5) <= buffQ_V_5(15 downto 5);
                    buffQ_V_7(15 downto 5) <= buffQ_V_6(15 downto 5);
                    buffQ_V_8(15 downto 5) <= buffQ_V_7(15 downto 5);
                    buffQ_V_9(15 downto 5) <= buffQ_V_8(15 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (currentState_load_reg_1031 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    buffQ_V_0_load_reg_1090(15 downto 5) <= buffQ_V_0(15 downto 5);
                    buffQ_V_10_load_reg_1040(15 downto 5) <= buffQ_V_10(15 downto 5);
                    buffQ_V_11_load_reg_1035(15 downto 5) <= buffQ_V_11(15 downto 5);
                    buffQ_V_1_load_reg_1085(15 downto 5) <= buffQ_V_1(15 downto 5);
                    buffQ_V_2_load_reg_1080(15 downto 5) <= buffQ_V_2(15 downto 5);
                    buffQ_V_3_load_reg_1075(15 downto 5) <= buffQ_V_3(15 downto 5);
                    buffQ_V_4_load_reg_1070(15 downto 5) <= buffQ_V_4(15 downto 5);
                    buffQ_V_5_load_reg_1065(15 downto 5) <= buffQ_V_5(15 downto 5);
                    buffQ_V_6_load_reg_1060(15 downto 5) <= buffQ_V_6(15 downto 5);
                    buffQ_V_7_load_reg_1055(15 downto 5) <= buffQ_V_7(15 downto 5);
                    buffQ_V_8_load_reg_1050(15 downto 5) <= buffQ_V_8(15 downto 5);
                    buffQ_V_9_load_reg_1045(15 downto 5) <= buffQ_V_9(15 downto 5);
                tmp_6_reg_1100 <= grp_fu_904_p3(20 downto 5);
                    tmp_7_reg_1095(15 downto 5) <= tmp_7_fu_421_p3(15 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((i_data_V_data_V_0_load_A = ap_const_logic_1)) then
                i_data_V_data_V_0_payload_A <= i_data_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((i_data_V_data_V_0_load_B = ap_const_logic_1)) then
                i_data_V_data_V_0_payload_B <= i_data_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((o_data_V_data_V_1_load_A = ap_const_logic_1)) then
                o_data_V_data_V_1_payload_A <= p_Result_s_fu_895_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((o_data_V_data_V_1_load_B = ap_const_logic_1)) then
                o_data_V_data_V_1_payload_B <= p_Result_s_fu_895_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_reg_pp0_iter6_currentState_load_reg_1031 = ap_const_lv1_1))) then
                p_Val2_6_14_reg_1130 <= p_Val2_6_14_fu_1021_p2;
                tmp_20_reg_1135 <= grp_fu_1012_p3(20 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_reg_pp0_iter1_currentState_load_reg_1031 = ap_const_lv1_1))) then
                tmp_10_reg_1105 <= grp_fu_922_p3(20 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_reg_pp0_iter2_currentState_load_reg_1031 = ap_const_lv1_1))) then
                tmp_12_reg_1110 <= grp_fu_940_p3(20 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_reg_pp0_iter3_currentState_load_reg_1031 = ap_const_lv1_1))) then
                tmp_14_reg_1115 <= grp_fu_958_p3(20 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_reg_pp0_iter4_currentState_load_reg_1031 = ap_const_lv1_1))) then
                tmp_16_reg_1120 <= grp_fu_976_p3(20 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_reg_pp0_iter5_currentState_load_reg_1031 = ap_const_lv1_1))) then
                tmp_18_reg_1125 <= grp_fu_994_p3(20 downto 5);
            end if;
        end if;
    end process;
    buffQ_V_14(4 downto 0) <= "00000";
    buffQ_V_13(4 downto 0) <= "00000";
    buffQ_V_12(4 downto 0) <= "00000";
    buffQ_V_11(4 downto 0) <= "00000";
    buffQ_V_10(4 downto 0) <= "00000";
    buffQ_V_9(4 downto 0) <= "00000";
    buffQ_V_8(4 downto 0) <= "00000";
    buffQ_V_7(4 downto 0) <= "00000";
    buffQ_V_6(4 downto 0) <= "00000";
    buffQ_V_5(4 downto 0) <= "00000";
    buffQ_V_4(4 downto 0) <= "00000";
    buffQ_V_3(4 downto 0) <= "00000";
    buffQ_V_2(4 downto 0) <= "00000";
    buffQ_V_1(4 downto 0) <= "00000";
    buffQ_V_0(4 downto 0) <= "00000";
    buffQ_V_11_load_reg_1035(4 downto 0) <= "00000";
    buffQ_V_10_load_reg_1040(4 downto 0) <= "00000";
    buffQ_V_9_load_reg_1045(4 downto 0) <= "00000";
    ap_reg_pp0_iter2_buffQ_V_9_load_reg_1045(4 downto 0) <= "00000";
    buffQ_V_8_load_reg_1050(4 downto 0) <= "00000";
    ap_reg_pp0_iter2_buffQ_V_8_load_reg_1050(4 downto 0) <= "00000";
    buffQ_V_7_load_reg_1055(4 downto 0) <= "00000";
    ap_reg_pp0_iter2_buffQ_V_7_load_reg_1055(4 downto 0) <= "00000";
    ap_reg_pp0_iter3_buffQ_V_7_load_reg_1055(4 downto 0) <= "00000";
    buffQ_V_6_load_reg_1060(4 downto 0) <= "00000";
    ap_reg_pp0_iter2_buffQ_V_6_load_reg_1060(4 downto 0) <= "00000";
    ap_reg_pp0_iter3_buffQ_V_6_load_reg_1060(4 downto 0) <= "00000";
    buffQ_V_5_load_reg_1065(4 downto 0) <= "00000";
    ap_reg_pp0_iter2_buffQ_V_5_load_reg_1065(4 downto 0) <= "00000";
    ap_reg_pp0_iter3_buffQ_V_5_load_reg_1065(4 downto 0) <= "00000";
    ap_reg_pp0_iter4_buffQ_V_5_load_reg_1065(4 downto 0) <= "00000";
    buffQ_V_4_load_reg_1070(4 downto 0) <= "00000";
    ap_reg_pp0_iter2_buffQ_V_4_load_reg_1070(4 downto 0) <= "00000";
    ap_reg_pp0_iter3_buffQ_V_4_load_reg_1070(4 downto 0) <= "00000";
    ap_reg_pp0_iter4_buffQ_V_4_load_reg_1070(4 downto 0) <= "00000";
    buffQ_V_3_load_reg_1075(4 downto 0) <= "00000";
    ap_reg_pp0_iter2_buffQ_V_3_load_reg_1075(4 downto 0) <= "00000";
    ap_reg_pp0_iter3_buffQ_V_3_load_reg_1075(4 downto 0) <= "00000";
    ap_reg_pp0_iter4_buffQ_V_3_load_reg_1075(4 downto 0) <= "00000";
    ap_reg_pp0_iter5_buffQ_V_3_load_reg_1075(4 downto 0) <= "00000";
    buffQ_V_2_load_reg_1080(4 downto 0) <= "00000";
    ap_reg_pp0_iter2_buffQ_V_2_load_reg_1080(4 downto 0) <= "00000";
    ap_reg_pp0_iter3_buffQ_V_2_load_reg_1080(4 downto 0) <= "00000";
    ap_reg_pp0_iter4_buffQ_V_2_load_reg_1080(4 downto 0) <= "00000";
    ap_reg_pp0_iter5_buffQ_V_2_load_reg_1080(4 downto 0) <= "00000";
    buffQ_V_1_load_reg_1085(4 downto 0) <= "00000";
    ap_reg_pp0_iter2_buffQ_V_1_load_reg_1085(4 downto 0) <= "00000";
    ap_reg_pp0_iter3_buffQ_V_1_load_reg_1085(4 downto 0) <= "00000";
    ap_reg_pp0_iter4_buffQ_V_1_load_reg_1085(4 downto 0) <= "00000";
    ap_reg_pp0_iter5_buffQ_V_1_load_reg_1085(4 downto 0) <= "00000";
    ap_reg_pp0_iter6_buffQ_V_1_load_reg_1085(4 downto 0) <= "00000";
    buffQ_V_0_load_reg_1090(4 downto 0) <= "00000";
    ap_reg_pp0_iter2_buffQ_V_0_load_reg_1090(4 downto 0) <= "00000";
    ap_reg_pp0_iter3_buffQ_V_0_load_reg_1090(4 downto 0) <= "00000";
    ap_reg_pp0_iter4_buffQ_V_0_load_reg_1090(4 downto 0) <= "00000";
    ap_reg_pp0_iter5_buffQ_V_0_load_reg_1090(4 downto 0) <= "00000";
    ap_reg_pp0_iter6_buffQ_V_0_load_reg_1090(4 downto 0) <= "00000";
    tmp_7_reg_1095(4 downto 0) <= "00000";
    ap_reg_pp0_iter2_tmp_7_reg_1095(4 downto 0) <= "00000";
    ap_reg_pp0_iter3_tmp_7_reg_1095(4 downto 0) <= "00000";
    ap_reg_pp0_iter4_tmp_7_reg_1095(4 downto 0) <= "00000";
    ap_reg_pp0_iter5_tmp_7_reg_1095(4 downto 0) <= "00000";
    ap_reg_pp0_iter6_tmp_7_reg_1095(4 downto 0) <= "00000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(i_data_V_data_V_0_vld_out, o_data_V_data_V_1_ack_in, o_data_V_last_V_1_ack_in, ap_enable_reg_pp0_iter1, currentState_load_reg_1031, ap_enable_reg_pp0_iter9)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and ((o_data_V_last_V_1_ack_in = ap_const_logic_0) or (o_data_V_data_V_1_ack_in = ap_const_logic_0))) or ((currentState_load_reg_1031 = ap_const_lv1_1) and (i_data_V_data_V_0_vld_out = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(i_data_V_data_V_0_vld_out, o_data_V_data_V_1_ack_in, o_data_V_last_V_1_ack_in, ap_enable_reg_pp0_iter1, currentState_load_reg_1031, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_block_state9_io, ap_block_state10_io)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and ((o_data_V_last_V_1_ack_in = ap_const_logic_0) or (o_data_V_data_V_1_ack_in = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state10_io))) or ((ap_const_boolean_1 = ap_block_state9_io) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1)) or ((currentState_load_reg_1031 = ap_const_lv1_1) and (i_data_V_data_V_0_vld_out = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(i_data_V_data_V_0_vld_out, o_data_V_data_V_1_ack_in, o_data_V_last_V_1_ack_in, ap_enable_reg_pp0_iter1, currentState_load_reg_1031, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_block_state9_io, ap_block_state10_io)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and ((o_data_V_last_V_1_ack_in = ap_const_logic_0) or (o_data_V_data_V_1_ack_in = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state10_io))) or ((ap_const_boolean_1 = ap_block_state9_io) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1)) or ((currentState_load_reg_1031 = ap_const_lv1_1) and (i_data_V_data_V_0_vld_out = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_state10_io_assign_proc : process(o_data_V_data_V_1_ack_in, ap_reg_pp0_iter8_currentState_load_reg_1031)
    begin
                ap_block_state10_io <= ((ap_reg_pp0_iter8_currentState_load_reg_1031 = ap_const_lv1_1) and (o_data_V_data_V_1_ack_in = ap_const_logic_0));
    end process;


    ap_block_state10_pp0_stage0_iter9_assign_proc : process(o_data_V_data_V_1_ack_in, o_data_V_last_V_1_ack_in)
    begin
                ap_block_state10_pp0_stage0_iter9 <= ((o_data_V_last_V_1_ack_in = ap_const_logic_0) or (o_data_V_data_V_1_ack_in = ap_const_logic_0));
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state2_pp0_stage0_iter1_assign_proc : process(i_data_V_data_V_0_vld_out, currentState_load_reg_1031)
    begin
                ap_block_state2_pp0_stage0_iter1 <= ((currentState_load_reg_1031 = ap_const_lv1_1) and (i_data_V_data_V_0_vld_out = ap_const_logic_0));
    end process;

        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state9_io_assign_proc : process(o_data_V_data_V_1_ack_in, ap_reg_pp0_iter7_currentState_load_reg_1031)
    begin
                ap_block_state9_io <= ((ap_reg_pp0_iter7_currentState_load_reg_1031 = ap_const_lv1_1) and (o_data_V_data_V_1_ack_in = ap_const_logic_0));
    end process;

        ap_block_state9_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_reset_idle_pp0 <= ap_const_logic_0;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    currentState_load_load_fu_189_p1 <= currentState;
    grp_fu_1003_p0 <= ap_const_lv21_B3(9 - 1 downto 0);
    grp_fu_1003_p2 <= (tmp_18_reg_1125 & ap_const_lv5_0);
    grp_fu_1012_p0 <= ap_const_lv21_D3(9 - 1 downto 0);
    grp_fu_1012_p2 <= (tmp_19_fu_782_p4 & ap_const_lv5_0);
    grp_fu_904_p0 <= ap_const_lv21_76(8 - 1 downto 0);
    grp_fu_904_p2 <= (tmp_5_fu_547_p4 & ap_const_lv5_0);
    grp_fu_913_p0 <= ap_const_lv21_9C(9 - 1 downto 0);
    grp_fu_913_p2 <= (tmp_6_reg_1100 & ap_const_lv5_0);
    grp_fu_922_p0 <= ap_const_lv21_A9(9 - 1 downto 0);
    grp_fu_922_p2 <= (tmp_8_fu_587_p4 & ap_const_lv5_0);
    grp_fu_931_p0 <= ap_const_lv21_CC(9 - 1 downto 0);
    grp_fu_931_p2 <= (tmp_10_reg_1105 & ap_const_lv5_0);
    grp_fu_940_p0 <= ap_const_lv21_B6(9 - 1 downto 0);
    grp_fu_940_p2 <= (tmp_11_fu_626_p4 & ap_const_lv5_0);
    grp_fu_949_p0 <= ap_const_lv21_8C(9 - 1 downto 0);
    grp_fu_949_p2 <= (tmp_12_reg_1110 & ap_const_lv5_0);
    grp_fu_958_p0 <= ap_const_lv21_79(8 - 1 downto 0);
    grp_fu_958_p2 <= (tmp_13_fu_665_p4 & ap_const_lv5_0);
    grp_fu_967_p0 <= ap_const_lv21_5C(8 - 1 downto 0);
    grp_fu_967_p2 <= (tmp_14_reg_1115 & ap_const_lv5_0);
    grp_fu_976_p0 <= ap_const_lv21_49(8 - 1 downto 0);
    grp_fu_976_p2 <= (tmp_15_fu_704_p4 & ap_const_lv5_0);
    grp_fu_985_p0 <= ap_const_lv21_69(8 - 1 downto 0);
    grp_fu_985_p2 <= (tmp_16_reg_1120 & ap_const_lv5_0);
    grp_fu_994_p0 <= ap_const_lv21_93(9 - 1 downto 0);
    grp_fu_994_p2 <= (tmp_17_fu_743_p4 & ap_const_lv5_0);

    i_data_TDATA_blk_n_assign_proc : process(i_data_V_data_V_0_state, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, currentState_load_reg_1031)
    begin
        if (((currentState_load_reg_1031 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            i_data_TDATA_blk_n <= i_data_V_data_V_0_state(0);
        else 
            i_data_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    i_data_TREADY <= i_data_V_last_V_0_state(1);
    i_data_V_data_V_0_ack_in <= i_data_V_data_V_0_state(1);

    i_data_V_data_V_0_ack_out_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, currentState_load_reg_1031, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (currentState_load_reg_1031 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            i_data_V_data_V_0_ack_out <= ap_const_logic_1;
        else 
            i_data_V_data_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    i_data_V_data_V_0_data_out_assign_proc : process(i_data_V_data_V_0_payload_A, i_data_V_data_V_0_payload_B, i_data_V_data_V_0_sel)
    begin
        if ((i_data_V_data_V_0_sel = ap_const_logic_1)) then 
            i_data_V_data_V_0_data_out <= i_data_V_data_V_0_payload_B;
        else 
            i_data_V_data_V_0_data_out <= i_data_V_data_V_0_payload_A;
        end if; 
    end process;

    i_data_V_data_V_0_load_A <= (i_data_V_data_V_0_state_cmp_full and not(i_data_V_data_V_0_sel_wr));
    i_data_V_data_V_0_load_B <= (i_data_V_data_V_0_state_cmp_full and i_data_V_data_V_0_sel_wr);
    i_data_V_data_V_0_sel <= i_data_V_data_V_0_sel_rd;
    i_data_V_data_V_0_state_cmp_full <= '0' when (i_data_V_data_V_0_state = ap_const_lv2_1) else '1';
    i_data_V_data_V_0_vld_in <= i_data_TVALID;
    i_data_V_data_V_0_vld_out <= i_data_V_data_V_0_state(0);

    i_data_V_last_V_0_ack_out_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, currentState_load_reg_1031, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (currentState_load_reg_1031 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            i_data_V_last_V_0_ack_out <= ap_const_logic_1;
        else 
            i_data_V_last_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;

    i_data_V_last_V_0_vld_in <= i_data_TVALID;
        loc_V_1_trunc_fu_891_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_1_fu_883_p3),16));

    o_data_TDATA <= o_data_V_data_V_1_data_out;

    o_data_TDATA_blk_n_assign_proc : process(o_data_V_data_V_1_state, ap_block_pp0_stage0, ap_enable_reg_pp0_iter8, ap_reg_pp0_iter7_currentState_load_reg_1031, ap_enable_reg_pp0_iter9, ap_reg_pp0_iter8_currentState_load_reg_1031)
    begin
        if ((((ap_reg_pp0_iter8_currentState_load_reg_1031 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1)) or ((ap_reg_pp0_iter7_currentState_load_reg_1031 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1)))) then 
            o_data_TDATA_blk_n <= o_data_V_data_V_1_state(1);
        else 
            o_data_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    o_data_TLAST <= o_data_V_last_V_1_data_out;
    o_data_TVALID <= o_data_V_last_V_1_state(0);
    o_data_V_data_V_1_ack_in <= o_data_V_data_V_1_state(1);
    o_data_V_data_V_1_ack_out <= o_data_TREADY;

    o_data_V_data_V_1_data_out_assign_proc : process(o_data_V_data_V_1_payload_A, o_data_V_data_V_1_payload_B, o_data_V_data_V_1_sel)
    begin
        if ((o_data_V_data_V_1_sel = ap_const_logic_1)) then 
            o_data_V_data_V_1_data_out <= o_data_V_data_V_1_payload_B;
        else 
            o_data_V_data_V_1_data_out <= o_data_V_data_V_1_payload_A;
        end if; 
    end process;

    o_data_V_data_V_1_load_A <= (o_data_V_data_V_1_state_cmp_full and not(o_data_V_data_V_1_sel_wr));
    o_data_V_data_V_1_load_B <= (o_data_V_data_V_1_state_cmp_full and o_data_V_data_V_1_sel_wr);
    o_data_V_data_V_1_sel <= o_data_V_data_V_1_sel_rd;
    o_data_V_data_V_1_state_cmp_full <= '0' when (o_data_V_data_V_1_state = ap_const_lv2_1) else '1';

    o_data_V_data_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter8, ap_reg_pp0_iter7_currentState_load_reg_1031, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_reg_pp0_iter7_currentState_load_reg_1031 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            o_data_V_data_V_1_vld_in <= ap_const_logic_1;
        else 
            o_data_V_data_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    o_data_V_data_V_1_vld_out <= o_data_V_data_V_1_state(0);
    o_data_V_last_V_1_ack_in <= o_data_V_last_V_1_state(1);
    o_data_V_last_V_1_ack_out <= o_data_TREADY;
    o_data_V_last_V_1_data_out <= ap_const_lv1_0;
    o_data_V_last_V_1_sel <= o_data_V_last_V_1_sel_rd;

    o_data_V_last_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter8, ap_reg_pp0_iter7_currentState_load_reg_1031, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_reg_pp0_iter7_currentState_load_reg_1031 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            o_data_V_last_V_1_vld_in <= ap_const_logic_1;
        else 
            o_data_V_last_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    o_data_V_last_V_1_vld_out <= o_data_V_last_V_1_state(0);
    p_1_fu_883_p3 <= 
        p_s_fu_875_p3 when (tmp_21_fu_845_p3(0) = '1') else 
        ret_V_fu_835_p4;
    p_Result_2_fu_853_p4 <= p_Val2_7_14_fu_829_p2(9 downto 5);
    p_Result_s_fu_895_p3 <= (ap_const_lv16_0 & loc_V_1_trunc_fu_891_p1);
        p_Val2_6_14_cast_fu_811_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_6_14_reg_1130),32));

    p_Val2_6_14_fu_1021_p0 <= ap_const_lv25_D0(9 - 1 downto 0);
    p_Val2_6_1_fu_513_p2 <= std_logic_vector(signed(p_shl3_cast_fu_509_p1) + signed(p_shl_fu_493_p3));
    p_Val2_6_fu_483_p2 <= std_logic_vector(unsigned(p_shl1_fu_463_p3) - unsigned(p_shl2_cast_fu_479_p1));
    p_Val2_7_14_fu_829_p2 <= std_logic_vector(unsigned(tmp_141_s_fu_825_p1) + unsigned(tmp_13_14_cast_fu_821_p1));
    p_Val2_7_1_fu_537_p2 <= std_logic_vector(unsigned(p_Val2_6_1_fu_513_p2) + unsigned(tmp_13_1_fu_529_p3));
    p_s_fu_875_p3 <= 
        ret_V_fu_835_p4 when (tmp_s_fu_863_p2(0) = '1') else 
        ret_V_1_fu_869_p2;
    p_shl1_fu_463_p3 <= (tmp_2_fu_459_p1 & ap_const_lv6_0);
        p_shl2_cast_fu_479_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_shl2_fu_471_p3),21));

    p_shl2_fu_471_p3 <= (buffQ_V_14 & ap_const_lv4_0);
        p_shl3_cast_fu_509_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_shl3_fu_501_p3),21));

    p_shl3_fu_501_p3 <= (buffQ_V_13 & ap_const_lv4_0);
    p_shl_fu_493_p3 <= (tmp_3_fu_489_p1 & ap_const_lv6_0);
    ret_V_1_fu_869_p2 <= std_logic_vector(unsigned(ap_const_lv11_1) + unsigned(ret_V_fu_835_p4));
    ret_V_fu_835_p4 <= p_Val2_7_14_fu_829_p2(20 downto 10);
    start_V_read_read_fu_164_p2 <= start_V;
    tmp_11_fu_626_p4 <= grp_fu_931_p3(20 downto 5);
        tmp_13_14_cast_fu_821_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_13_14_fu_814_p3),33));

    tmp_13_14_fu_814_p3 <= (tmp_20_reg_1135 & ap_const_lv5_0);
    tmp_13_1_fu_529_p3 <= (tmp_4_fu_519_p4 & ap_const_lv5_0);
    tmp_13_fu_665_p4 <= grp_fu_949_p3(20 downto 5);
    tmp_141_s_fu_825_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_6_14_cast_fu_811_p1),33));
    tmp_15_fu_704_p4 <= grp_fu_967_p3(20 downto 5);
    tmp_17_fu_743_p4 <= grp_fu_985_p3(20 downto 5);
    tmp_19_fu_782_p4 <= grp_fu_1003_p3(20 downto 5);
    tmp_21_fu_845_p3 <= p_Val2_7_14_fu_829_p2(20 downto 20);
    tmp_2_fu_459_p1 <= buffQ_V_14(15 - 1 downto 0);
    tmp_3_fu_489_p1 <= buffQ_V_13(15 - 1 downto 0);
    tmp_4_fu_519_p4 <= p_Val2_6_fu_483_p2(20 downto 5);
    tmp_5_fu_547_p4 <= p_Val2_7_1_fu_537_p2(20 downto 5);
    tmp_7_fu_421_p3 <= (tmp_fu_417_p1 & ap_const_lv5_0);
    tmp_8_fu_587_p4 <= grp_fu_913_p3(20 downto 5);
    tmp_fu_417_p1 <= i_data_V_data_V_0_data_out(11 - 1 downto 0);
    tmp_s_fu_863_p2 <= "1" when (p_Result_2_fu_853_p4 = ap_const_lv5_0) else "0";
end behav;
